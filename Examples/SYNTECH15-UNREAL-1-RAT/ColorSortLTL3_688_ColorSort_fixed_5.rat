<project>
  <signals>
    <signal>
      <name>yBoolExpr_2</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>detect_0</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>detect_1</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>detect_2</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>yBoolExpr_4</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>ack_bot_0</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>yBoolExpr_5</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>color_0</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>color_1</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>color_2</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>speedButton_0</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>nonemove</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>onlybotmoves</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>responded_0</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>ack_ver_0</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>allsleep</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>ack_hor_0</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>spec_waiting_ack_ver_mot</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>spec_waiting_ack_hor_mot</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>spec_state_return_0</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>spec_state_return_1</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>yBoolExpr_3</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>yBoolExpr_0</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>yBoolExpr_1</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>yBoolExpr_6</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>yBoolExpr_7</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>verMot_0</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>spec_state_seek_0</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>spec_state_seek_1</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>yBoolExpr_8</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>yBoolExpr_9</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>motSpeed_0</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>motSpeed_1</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>botMot_0</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>botMot_1</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>spec_dropping</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>yBoolExpr_10</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>yBoolExpr_11</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>spec_prevBotMotReturn</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>spec_currentColor_0</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>spec_currentColor_1</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>spec_currentColor_2</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>responded_2</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>spec_prevBotMotSeek</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>responded_1</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>spec_speedButtonValidPressed</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>horMot_0</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
  </signals>
  <requirements>
    <requirement>
      <name>assum_0</name>
      <property>G(F(responded_0))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_1</name>
      <property>G((!ack_ver_0) &lt;-&gt; X(yBoolExpr_2))</property>
      <kind>A</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_2</name>
      <property>G((!ack_hor_0) &lt;-&gt; X(yBoolExpr_4))</property>
      <kind>A</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_3</name>
      <property>G((speedButton_0) &lt;-&gt; X(yBoolExpr_5))</property>
      <kind>A</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_4</name>
      <property>G((!spec_dropping) -&gt; nonemove)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_5</name>
      <property>G((!spec_waiting_ack_ver_mot) -&gt; ack_ver_0)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_6</name>
      <property>G(!verMot_0 -&gt; X(!ack_ver_0))</property>
      <kind>A</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_7</name>
      <property>G(X(responded_1) &lt;-&gt; ((ack_ver_0) | !(spec_waiting_ack_ver_mot)))</property>
      <kind>A</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_8</name>
      <property>G((!spec_waiting_ack_hor_mot) -&gt; ack_hor_0)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_9</name>
      <property>G(X(responded_2) &lt;-&gt; ((ack_hor_0) | !(spec_waiting_ack_hor_mot)))</property>
      <kind>A</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_0</name>
      <property>G((botMot_0 &amp; !botMot_1) &lt;-&gt; X(yBoolExpr_0))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_1</name>
      <property>G(spec_prevBotMotReturn &lt;-&gt; yBoolExpr_0)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_2</name>
      <property>G((!botMot_0 &amp; !botMot_1) &lt;-&gt; X(yBoolExpr_1))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_3</name>
      <property>G(spec_prevBotMotSeek &lt;-&gt; yBoolExpr_1)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_4</name>
      <property>G(!verMot_0 -&gt;(!botMot_0 &amp; botMot_1 &amp; horMot_0))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_5</name>
      <property>G(!horMot_0 -&gt;(!botMot_0 &amp; botMot_1 &amp; verMot_0))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_6</name>
      <property>G((botMot_0 | !botMot_1) -&gt;(verMot_0 &amp; horMot_0))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_7</name>
      <property>G(verMot_0 -&gt; (spec_currentColor_0 &lt;-&gt; X(spec_currentColor_0)) &amp; (spec_currentColor_1 &lt;-&gt; X(spec_currentColor_1)) &amp; (spec_currentColor_2 &lt;-&gt; X(spec_currentColor_2)))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_8</name>
      <property>G(spec_dropping &lt;-&gt; X(spec_dropping) &lt;-&gt;(verMot_0 &amp;(!(spec_prevBotMotReturn &amp; ack_bot_0))))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_9</name>
      <property>G((!ack_ver_0 | !ack_hor_0) -&gt; allsleep)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_10</name>
      <property>G(X(responded_0) &lt;-&gt; ((!horMot_0 &amp; (detect_0 &lt;-&gt; spec_currentColor_0) &amp; (detect_1 &lt;-&gt; spec_currentColor_1) &amp; (detect_2 &lt;-&gt; spec_currentColor_2)) | !((color_0 | !color_1 | !color_2))))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_11</name>
      <property>G(F(!horMot_0))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_12</name>
      <property>G((!color_0 &amp; color_1 &amp; color_2 &amp;(!spec_dropping)) -&gt; allsleep)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_13</name>
      <property>G(((color_0 | !color_1 | !color_2) &amp;(!spec_dropping)) -&gt;(!verMot_0 &amp; (color_0 &lt;-&gt; X(spec_currentColor_0)) &amp; (color_1 &lt;-&gt; X(spec_currentColor_1)) &amp; (color_2 &lt;-&gt; X(spec_currentColor_2))))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_14</name>
      <property>G((nonemove &amp; spec_dropping &amp; yBoolExpr_2) -&gt; !botMot_0 &amp; !botMot_1)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_15</name>
      <property>!spec_state_seek_0 &amp; !spec_state_seek_1</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_16</name>
      <property>G((!spec_state_seek_0 &amp; !spec_state_seek_1 &amp;((!(spec_prevBotMotSeek &amp; !ack_bot_0)) |((spec_prevBotMotSeek &amp; (detect_0 &lt;-&gt; spec_currentColor_0) &amp; (detect_1 &lt;-&gt; spec_currentColor_1) &amp; (detect_2 &lt;-&gt; spec_currentColor_2)) &amp;(spec_prevBotMotSeek &amp; !ack_bot_0))) &amp; X(!spec_state_seek_0 &amp; !spec_state_seek_1)) |(!spec_state_seek_0 &amp; !spec_state_seek_1 &amp;((!(spec_prevBotMotSeek &amp; (detect_0 &lt;-&gt; spec_currentColor_0) &amp; (detect_1 &lt;-&gt; spec_currentColor_1) &amp; (detect_2 &lt;-&gt; spec_currentColor_2))) &amp;((spec_dropping &amp; ((detect_0 &lt;-&gt; !spec_currentColor_0) | (detect_1 &lt;-&gt; !spec_currentColor_1) | (detect_2 &lt;-&gt; !spec_currentColor_2))) -&gt; !botMot_0 &amp; !botMot_1) &amp;(spec_prevBotMotSeek &amp; !ack_bot_0)) &amp; X(!spec_state_seek_0 &amp; spec_state_seek_1)) |(!spec_state_seek_0 &amp; !spec_state_seek_1 &amp;((!(spec_prevBotMotSeek &amp; (detect_0 &lt;-&gt; spec_currentColor_0) &amp; (detect_1 &lt;-&gt; spec_currentColor_1) &amp; (detect_2 &lt;-&gt; spec_currentColor_2))) &amp;(!((spec_dropping &amp; ((detect_0 &lt;-&gt; !spec_currentColor_0) | (detect_1 &lt;-&gt; !spec_currentColor_1) | (detect_2 &lt;-&gt; !spec_currentColor_2))) -&gt; !botMot_0 &amp; !botMot_1)) &amp;(spec_prevBotMotSeek &amp; !ack_bot_0)) &amp; X(spec_state_seek_0 &amp; spec_state_seek_1)) |(!spec_state_seek_0 &amp; spec_state_seek_1 &amp;(spec_prevBotMotSeek &amp; (detect_0 &lt;-&gt; spec_currentColor_0) &amp; (detect_1 &lt;-&gt; spec_currentColor_1) &amp; (detect_2 &lt;-&gt; spec_currentColor_2)) &amp; X(!spec_state_seek_0 &amp; !spec_state_seek_1)) |(!spec_state_seek_0 &amp; spec_state_seek_1 &amp;((!(spec_prevBotMotSeek &amp; (detect_0 &lt;-&gt; spec_currentColor_0) &amp; (detect_1 &lt;-&gt; spec_currentColor_1) &amp; (detect_2 &lt;-&gt; spec_currentColor_2))) &amp;((spec_dropping &amp; ((detect_0 &lt;-&gt; !spec_currentColor_0) | (detect_1 &lt;-&gt; !spec_currentColor_1) | (detect_2 &lt;-&gt; !spec_currentColor_2))) -&gt; !botMot_0 &amp; !botMot_1)) &amp; X(!spec_state_seek_0 &amp; spec_state_seek_1)) |(!spec_state_seek_0 &amp; spec_state_seek_1 &amp;((!(spec_prevBotMotSeek &amp; (detect_0 &lt;-&gt; spec_currentColor_0) &amp; (detect_1 &lt;-&gt; spec_currentColor_1) &amp; (detect_2 &lt;-&gt; spec_currentColor_2))) &amp;(!((spec_dropping &amp; ((detect_0 &lt;-&gt; !spec_currentColor_0) | (detect_1 &lt;-&gt; !spec_currentColor_1) | (detect_2 &lt;-&gt; !spec_currentColor_2))) -&gt; !botMot_0 &amp; !botMot_1))) &amp; X(spec_state_seek_0 &amp; spec_state_seek_1)) |(spec_state_seek_0 &amp; !spec_state_seek_1 &amp; X(spec_state_seek_0 &amp; !spec_state_seek_1)) |(spec_state_seek_0 &amp; spec_state_seek_1 &amp;(spec_prevBotMotSeek &amp; (detect_0 &lt;-&gt; spec_currentColor_0) &amp; (detect_1 &lt;-&gt; spec_currentColor_1) &amp; (detect_2 &lt;-&gt; spec_currentColor_2)) &amp; X(spec_state_seek_0 &amp; !spec_state_seek_1)) |(spec_state_seek_0 &amp; spec_state_seek_1 &amp;(!(spec_prevBotMotSeek &amp; (detect_0 &lt;-&gt; spec_currentColor_0) &amp; (detect_1 &lt;-&gt; spec_currentColor_1) &amp; (detect_2 &lt;-&gt; spec_currentColor_2))) &amp; X(spec_state_seek_0 &amp; spec_state_seek_1)))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_17</name>
      <property>G(F(!spec_state_seek_0 &amp; !spec_state_seek_1 | !spec_state_seek_0 &amp; spec_state_seek_1 | spec_state_seek_0 &amp; spec_state_seek_1))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_18</name>
      <property>G((!botMot_0 &amp; !botMot_1) &lt;-&gt; X(yBoolExpr_3))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_19</name>
      <property>G((spec_dropping &amp; onlybotmoves &amp; (detect_0 &lt;-&gt; spec_currentColor_0) &amp; (detect_1 &lt;-&gt; spec_currentColor_1) &amp; (detect_2 &lt;-&gt; spec_currentColor_2) &amp; yBoolExpr_3) &lt;-&gt; !horMot_0)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_20</name>
      <property>G((nonemove &amp; yBoolExpr_4 &amp; spec_dropping) -&gt; botMot_0 &amp; !botMot_1)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_21</name>
      <property>!spec_state_return_0 &amp; !spec_state_return_1</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_22</name>
      <property>G((!spec_state_return_0 &amp; !spec_state_return_1 &amp;(((!(spec_prevBotMotReturn &amp; !ack_bot_0)) &amp;(!(spec_prevBotMotReturn &amp; ack_bot_0))) |(spec_prevBotMotReturn &amp; ack_bot_0)) &amp; X(!spec_state_return_0 &amp; !spec_state_return_1)) |(!spec_state_return_0 &amp; !spec_state_return_1 &amp;((spec_prevBotMotReturn &amp; !ack_bot_0) &amp;(!((spec_dropping &amp; onlybotmoves) -&gt; botMot_0 &amp; !botMot_1)) &amp;(!(spec_prevBotMotReturn &amp; ack_bot_0))) &amp; X(!spec_state_return_0 &amp; spec_state_return_1)) |(!spec_state_return_0 &amp; !spec_state_return_1 &amp;((spec_prevBotMotReturn &amp; !ack_bot_0) &amp;((spec_dropping &amp; onlybotmoves) -&gt; botMot_0 &amp; !botMot_1) &amp;(!(spec_prevBotMotReturn &amp; ack_bot_0))) &amp; X(spec_state_return_0 &amp; !spec_state_return_1)) |(!spec_state_return_0 &amp; spec_state_return_1 &amp; X(!spec_state_return_0 &amp; spec_state_return_1)) |(spec_state_return_0 &amp; !spec_state_return_1 &amp;(spec_prevBotMotReturn &amp; ack_bot_0) &amp; X(!spec_state_return_0 &amp; !spec_state_return_1)) |(spec_state_return_0 &amp; !spec_state_return_1 &amp;((!((spec_dropping &amp; onlybotmoves) -&gt; botMot_0 &amp; !botMot_1)) &amp;(!(spec_prevBotMotReturn &amp; ack_bot_0))) &amp; X(!spec_state_return_0 &amp; spec_state_return_1)) |(spec_state_return_0 &amp; !spec_state_return_1 &amp;(((spec_dropping &amp; onlybotmoves) -&gt; botMot_0 &amp; !botMot_1) &amp;(!(spec_prevBotMotReturn &amp; ack_bot_0))) &amp; X(spec_state_return_0 &amp; !spec_state_return_1)))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_23</name>
      <property>G(F(!spec_state_return_0 &amp; !spec_state_return_1 | spec_state_return_0 &amp; !spec_state_return_1))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_24</name>
      <property>G((spec_prevBotMotReturn &amp; ack_bot_0) -&gt; allsleep)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_25</name>
      <property>!motSpeed_0 &amp; !motSpeed_1 &amp;(!spec_dropping)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_26</name>
      <property>G((!speedButton_0 &amp; yBoolExpr_5) &lt;-&gt; spec_speedButtonValidPressed)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_27</name>
      <property>G((!motSpeed_0 &amp; !motSpeed_1) &lt;-&gt; X(yBoolExpr_6))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_28</name>
      <property>G((spec_speedButtonValidPressed &amp; yBoolExpr_6) -&gt; !motSpeed_0 &amp; motSpeed_1)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_29</name>
      <property>G((!motSpeed_0 &amp; motSpeed_1) &lt;-&gt; X(yBoolExpr_7))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_30</name>
      <property>G((spec_speedButtonValidPressed &amp; yBoolExpr_7) -&gt; motSpeed_0 &amp; !motSpeed_1)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_31</name>
      <property>G((motSpeed_0 &amp; !motSpeed_1) &lt;-&gt; X(yBoolExpr_8))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_32</name>
      <property>G((spec_speedButtonValidPressed &amp; yBoolExpr_8) -&gt; !motSpeed_0 &amp; !motSpeed_1)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_33</name>
      <property>G((!motSpeed_0 &amp; !motSpeed_1) &lt;-&gt; X(yBoolExpr_9))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_34</name>
      <property>G(((!spec_speedButtonValidPressed) &amp; yBoolExpr_9) -&gt; !motSpeed_0 &amp; !motSpeed_1)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_35</name>
      <property>G((!motSpeed_0 &amp; motSpeed_1) &lt;-&gt; X(yBoolExpr_10))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_36</name>
      <property>G(((!spec_speedButtonValidPressed) &amp; yBoolExpr_10) -&gt; !motSpeed_0 &amp; motSpeed_1)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_37</name>
      <property>G((motSpeed_0 &amp; !motSpeed_1) &lt;-&gt; X(yBoolExpr_11))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_38</name>
      <property>G(((!spec_speedButtonValidPressed) &amp; yBoolExpr_11) -&gt; motSpeed_0 &amp; !motSpeed_1)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_39</name>
      <property>!spec_waiting_ack_ver_mot</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_40</name>
      <property>G(((!spec_waiting_ack_ver_mot) &amp; (verMot_0)) -&gt; X(!spec_waiting_ack_ver_mot))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_41</name>
      <property>G(((!spec_waiting_ack_ver_mot) &amp; !verMot_0) -&gt; X(spec_waiting_ack_ver_mot))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_42</name>
      <property>G((spec_waiting_ack_ver_mot &amp; ack_ver_0) -&gt; X(!spec_waiting_ack_ver_mot))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_43</name>
      <property>G((spec_waiting_ack_ver_mot &amp; (!ack_ver_0)) -&gt; X(spec_waiting_ack_ver_mot))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_44</name>
      <property>G(F(responded_1))</property>
      <kind>A</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_45</name>
      <property>!spec_waiting_ack_hor_mot</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_46</name>
      <property>G(((!spec_waiting_ack_hor_mot) &amp; (horMot_0)) -&gt; X(!spec_waiting_ack_hor_mot))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_47</name>
      <property>G(((!spec_waiting_ack_hor_mot) &amp; !horMot_0) -&gt; X(spec_waiting_ack_hor_mot))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_48</name>
      <property>G((spec_waiting_ack_hor_mot &amp; ack_hor_0) -&gt; X(!spec_waiting_ack_hor_mot))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_49</name>
      <property>G((spec_waiting_ack_hor_mot &amp; (!ack_hor_0)) -&gt; X(spec_waiting_ack_hor_mot))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_50</name>
      <property>G(F(responded_2))</property>
      <kind>A</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
  </requirements>
  <property_assurance>
    <possibilities/>
    <assertions/>
  </property_assurance>
  <property_simulation/>
  <categories>
    <category>
      <name>New</name>
      <editable>no</editable>
      <notes>This is the category of those traces that have been just created</notes>
    </category>
    <category>
      <name>Default</name>
      <editable>no</editable>
      <notes>This is the default category for traces</notes>
    </category>
    <category>
      <name>Out of Date</name>
      <editable>no</editable>
      <notes>Contains the traces whose dependencies might be no longer consistent</notes>
    </category>
    <category>
      <name>Trash</name>
      <editable>no</editable>
      <notes>Contains the traces that have been deleted</notes>
    </category>
  </categories>
  <automata/>
  <active_view>ga</active_view>
  <notes></notes>
</project>
