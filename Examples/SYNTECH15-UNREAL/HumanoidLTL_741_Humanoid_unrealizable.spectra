module HumanoidLTL_741_Humanoid_unrealizable
env boolean Button_0;
env boolean Obstacle_0;
env boolean Noise_0;
env boolean Heading_0;
sys boolean HeadMotor_0;
sys boolean HeadMotor_1;
sys boolean yBoolExpr_2;
sys boolean search_0;
sys boolean RightMotor_0;
sys boolean RightMotor_1;
sys boolean RightMotor_2;
sys boolean next_head_0;
sys boolean yBoolExpr_4;
sys boolean yBoolExpr_3;
sys boolean yBoolExpr_0;
sys boolean responded_1;
sys boolean spec_state_0;
sys boolean spec_state_1;
sys boolean responded_0;
sys boolean yBoolExpr_1;
sys boolean LeftMotor_0;
sys boolean LeftMotor_1;
sys boolean LeftMotor_2;
sys boolean nextMoveMode_0;
sys boolean nextMoveMode_1;

gar alw (next(responded_0) <-> (((Heading_0 <-> next_head_0)) | !(search_0)));
asm alw (((!nextMoveMode_0 & !nextMoveMode_1 | !nextMoveMode_0 & nextMoveMode_1) & ((Heading_0 <-> !next_head_0))) -> ((next_head_0 <-> next(!Heading_0))));
asm alw ((!nextMoveMode_0 & !nextMoveMode_1 & Obstacle_0) -> next(Obstacle_0));
asm alw ((!nextMoveMode_0 & nextMoveMode_1 & !Obstacle_0) -> next((!Obstacle_0)));
gar alw (next(responded_1) <-> ((nextMoveMode_0 & nextMoveMode_1 & !Obstacle_0) | !(nextMoveMode_0 & nextMoveMode_1)));
gar !search_0 & !spec_state_0 & !spec_state_1;
gar G !next_head_0;
gar alwEv (!nextMoveMode_0 & !nextMoveMode_1 & !search_0);
gar alw ((!spec_state_0 & !spec_state_1 & !nextMoveMode_0 & !nextMoveMode_1 & next(!nextMoveMode_0 & nextMoveMode_1)) -> next(!spec_state_0 & spec_state_1));
gar alw ((!spec_state_0 & spec_state_1 & !nextMoveMode_0 & nextMoveMode_1 & next(!nextMoveMode_0 & !nextMoveMode_1)) -> next(spec_state_0 & !spec_state_1));
gar alw (!(spec_state_0 & !spec_state_1 & !nextMoveMode_0 & !nextMoveMode_1 & next(!nextMoveMode_0 & nextMoveMode_1)));
gar alw ((nextMoveMode_0 & !nextMoveMode_1 | nextMoveMode_0 & nextMoveMode_1) -> next(!spec_state_0 & !spec_state_1));
gar alw ((!search_0) <-> next(yBoolExpr_0));
gar alw ((yBoolExpr_0 & Noise_0 & ((Heading_0 <-> !next_head_0)) & (!Button_0)) -> search_0);
gar alw ((search_0) <-> next(yBoolExpr_1));
gar alw ((yBoolExpr_1 & (Heading_0 <-> next_head_0)) -> !search_0);
gar alw ((search_0) <-> next(yBoolExpr_2));
gar alw ((yBoolExpr_2 & ((Heading_0 <-> !next_head_0))) -> search_0);
gar alw ((nextMoveMode_0 & nextMoveMode_1) <-> next(yBoolExpr_3));
gar alw ((!yBoolExpr_3 & next(Obstacle_0)) -> next(nextMoveMode_0 & !nextMoveMode_1));
gar alw ((!nextMoveMode_0 & nextMoveMode_1 & next(!nextMoveMode_0 & !nextMoveMode_1)) <-> next(!LeftMotor_0 & !LeftMotor_1 & !LeftMotor_2 & !RightMotor_0 & !RightMotor_1 & RightMotor_2));
gar alw ((!nextMoveMode_0 & !nextMoveMode_1 & next(!nextMoveMode_0 & nextMoveMode_1)) <-> next(!LeftMotor_0 & !LeftMotor_1 & LeftMotor_2 & !RightMotor_0 & !RightMotor_1 & !RightMotor_2));
gar alw (next(!nextMoveMode_0 & nextMoveMode_1) ->(!nextMoveMode_0 & !nextMoveMode_1 | !nextMoveMode_0 & nextMoveMode_1));
gar alw (nextMoveMode_0 & !nextMoveMode_1 -> next(!LeftMotor_0 & !LeftMotor_1 & !LeftMotor_2 & !RightMotor_0 & RightMotor_1 & RightMotor_2));
gar alw (nextMoveMode_0 & nextMoveMode_1 -> next(!LeftMotor_0 & !LeftMotor_1 & LeftMotor_2 & RightMotor_0 & !RightMotor_1 & !RightMotor_2));
gar alw (nextMoveMode_0 & !nextMoveMode_1 <-> next(nextMoveMode_0 & nextMoveMode_1));
gar alw ((!(nextMoveMode_0 & !nextMoveMode_1 | nextMoveMode_0 & nextMoveMode_1)) -> next(!(LeftMotor_0 & !LeftMotor_1 & !LeftMotor_2 | RightMotor_0 & !RightMotor_1 & !RightMotor_2 | !LeftMotor_0 & LeftMotor_1 & LeftMotor_2 | !RightMotor_0 & RightMotor_1 & RightMotor_2)));
gar alw ((!nextMoveMode_0 & !nextMoveMode_1 & next(nextMoveMode_0 & !nextMoveMode_1)) <-> next(LeftMotor_0 & !LeftMotor_1 & LeftMotor_2 & RightMotor_0 & !RightMotor_1 & RightMotor_2));
gar alw ((nextMoveMode_0 & nextMoveMode_1) <-> next(yBoolExpr_4));
gar alw ((!nextMoveMode_0 & !nextMoveMode_1 & yBoolExpr_4) <-> next(LeftMotor_0 & LeftMotor_1 & !LeftMotor_2 & RightMotor_0 & RightMotor_1 & !RightMotor_2));
gar alw (!nextMoveMode_0 & nextMoveMode_1 -> next((!nextMoveMode_0 | nextMoveMode_1)));
gar alwEv (responded_0);
gar alwEv (responded_1);
asm alwEv (TRUE);
