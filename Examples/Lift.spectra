module Cavezza

env boolean b1;
env boolean b2;
env boolean b3;

sys boolean f1;
sys boolean f2;
sys boolean f3;


// phi init
assumption
	!b1 & !b2 & !b3;

// phi1
assumption
	G ((b1 & f1) -> next(!b1));
assumption
	G ((b2 & f2) -> next(!b2));
assumption
	G ((b3 & f3) -> next(!b3));

// phi2
assumption
	G ((b1 & !f1) -> next(b1));
assumption
	G ((b2 & !f2) -> next(b2));
assumption
	G ((b3 & !f3) -> next(b3));

// phi init
guarantee
	f1 & !f2 & !f3;

// phi1
guarantee
	G (!(f1 & f2) & !(f1 & f3) & !(f2 & f3));

// phi2
guarantee
	G (f1 -> (next(f1) | next(f2)));
guarantee
	G (f2 -> (next(f1) | next(f2) | next(f3)));
guarantee
	G (f3 -> (next(f2) | next(f3)));

// phi3
guarantee
	G ((f1 & next(f2)) | (f2 & next(f3)) | (f2 & next(f1)) | (f3 & next(f2))) -> (b1 | b2 | b3);

// phi4
guarantee
	GF (b1 -> f1);
guarantee
	GF (b2 -> f2);
guarantee
	GF (b3 -> f3);

// phi5
guarantee
	GF (f1);
guarantee
	GF (f2);
guarantee
	GF (f3);