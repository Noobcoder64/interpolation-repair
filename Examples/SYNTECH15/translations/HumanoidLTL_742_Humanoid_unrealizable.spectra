module HumanoidLTL_742_Humanoid_unrealizable
env boolean Obstacle_0;
sys boolean LeftMotor_0;
sys boolean LeftMotor_1;
sys boolean LeftMotor_2;
guarantee
	alw (!(LeftMotor_0 & LeftMotor_1 & LeftMotor_2));
sys boolean RightMotor_0;
sys boolean RightMotor_1;
sys boolean RightMotor_2;
guarantee
	alw (!(RightMotor_0 & RightMotor_1 & RightMotor_2));
sys boolean HeadMotor_0;
sys boolean HeadMotor_1;
guarantee
	alw (!(HeadMotor_0 & HeadMotor_1));
sys boolean nextMoveMode_0;
sys boolean nextMoveMode_1;
guarantee
	alw (!(nextMoveMode_0 & nextMoveMode_1));
sys boolean specState_0;
sys boolean specState_1;
sys boolean turnState_0;
sys boolean turnState_1;
guarantee
	!specState_0 & !specState_1;
guarantee
	!turnState_0 & !turnState_1;
guarantee
	alwEv (!nextMoveMode_0 & !nextMoveMode_1);
guarantee
	alw ((!specState_0 & !specState_1 & !nextMoveMode_0 & !nextMoveMode_1 & next(!nextMoveMode_0 & nextMoveMode_1)) -> next(!specState_0 & specState_1));
guarantee
	alw ((!specState_0 & specState_1 & !nextMoveMode_0 & nextMoveMode_1 & next(!nextMoveMode_0 & !nextMoveMode_1)) -> next(specState_0 & !specState_1));
guarantee
	alw (!(specState_0 & !specState_1 & !nextMoveMode_0 & !nextMoveMode_1 & next(!nextMoveMode_0 & nextMoveMode_1)));
guarantee
	alw ((!specState_0 & specState_1 & next(!nextMoveMode_0 & nextMoveMode_1)) -> next(!specState_0 & specState_1));
guarantee
	alw ((specState_0 & !specState_1 & next(!nextMoveMode_0 & !nextMoveMode_1)) -> next(specState_0) & next(!specState_1));
guarantee
	alw (nextMoveMode_0 & !nextMoveMode_1 -> next(!specState_0 & !specState_1));
guarantee
	alw (Obstacle_0 ->(!!nextMoveMode_0 & !nextMoveMode_1));
guarantee
	alw ((!nextMoveMode_0 & nextMoveMode_1 & next(!nextMoveMode_0 & !nextMoveMode_1)) <-> next(!LeftMotor_0 & !LeftMotor_1 & !LeftMotor_2 & !RightMotor_0 & !RightMotor_1 & RightMotor_2));
guarantee
	alw ((!nextMoveMode_0 & !nextMoveMode_1 & next(!nextMoveMode_0 & nextMoveMode_1)) <-> next(!LeftMotor_0 & !LeftMotor_1 & LeftMotor_2 & !RightMotor_0 & !RightMotor_1 & !RightMotor_2));
guarantee
	alw (next(!nextMoveMode_0 & nextMoveMode_1) ->(!nextMoveMode_0 & !nextMoveMode_1 | !nextMoveMode_0 & nextMoveMode_1));
guarantee
	alw (!nextMoveMode_0 & nextMoveMode_1 -> next(!nextMoveMode_0 & !nextMoveMode_1 | !nextMoveMode_0 & nextMoveMode_1));
guarantee
	alw (next(!turnState_0) & next(!turnState_1) ->(!turnState_0 & !turnState_1 | turnState_0 & turnState_1));
guarantee
	alw ((!turnState_0 & !turnState_1 &(!nextMoveMode_0 & !nextMoveMode_1)) -> next(!turnState_0) & next(!turnState_1));
guarantee
	alw ((nextMoveMode_0 & !nextMoveMode_1 & PREV(!nextMoveMode_0 & !nextMoveMode_1) & !turnState_0 & !turnState_1) -> next(!turnState_0) & next(turnState_1));
guarantee
	alw (!turnState_0 & turnState_1 ->(next(turnState_0) & next(!turnState_1) & nextMoveMode_0 & !nextMoveMode_1));
guarantee
	alw ((turnState_0 & !turnState_1 & nextMoveMode_0 & !nextMoveMode_1) -> next(!turnState_0) & next(turnState_1));
guarantee
	alw ((turnState_0 & !turnState_1 & !nextMoveMode_0 & !nextMoveMode_1) -> next(turnState_0) & next(turnState_1));
guarantee
	alw ((turnState_0 & turnState_1 & !nextMoveMode_0 & !nextMoveMode_1) -> next(!turnState_0 & !turnState_1));
guarantee
	alw ((turnState_0 & turnState_1 & (nextMoveMode_0 | nextMoveMode_1)) -> next(turnState_0 & !turnState_1));
guarantee
	alw ((turnState_0 & !turnState_1 & !Obstacle_0) -> !nextMoveMode_0 & !nextMoveMode_1);
guarantee
	alw ((!turnState_0 & !turnState_1 & next(!turnState_0) & next(turnState_1)) <->(LeftMotor_0 & !LeftMotor_1 & LeftMotor_2 & RightMotor_0 & !RightMotor_1 & RightMotor_2));
guarantee
	alw (next(turnState_0) & next(!turnState_1) <->(!LeftMotor_0 & !LeftMotor_1 & !LeftMotor_2 & !RightMotor_0 & RightMotor_1 & RightMotor_2));
guarantee
	alw (turnState_0 & !turnState_1 <->(!LeftMotor_0 & !LeftMotor_1 & LeftMotor_2 & RightMotor_0 & !RightMotor_1 & !RightMotor_2));
guarantee
	alw ((turnState_0 & turnState_1 & !turnState_0 & !turnState_1) <->(LeftMotor_0 & LeftMotor_1 & !LeftMotor_2 & RightMotor_0 & RightMotor_1 & !RightMotor_2));
assumption
	alw ((PREV(!nextMoveMode_0 & !nextMoveMode_1) & Obstacle_0) -> next(Obstacle_0));
assumption
	alw ((PREV(!nextMoveMode_0 & nextMoveMode_1) & !Obstacle_0) -> next((!Obstacle_0)));