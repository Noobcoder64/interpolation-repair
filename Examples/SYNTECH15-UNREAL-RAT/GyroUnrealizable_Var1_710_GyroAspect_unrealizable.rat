<?xml version="1.0" ?>
<project>
	<signals>
		<signal>
			<name>isReady</name>
			<kind>E</kind>
			<type>boolean</type>
			<notes/>
		</signal>
		<signal>
			<name>moveAwayFromFrontObstacle</name>
			<kind>E</kind>
			<type>boolean</type>
			<notes/>
		</signal>
		<signal>
			<name>frontDistSense_0</name>
			<kind>E</kind>
			<type>boolean</type>
			<notes/>
		</signal>
		<signal>
			<name>backDistSense_0</name>
			<kind>E</kind>
			<type>boolean</type>
			<notes/>
		</signal>
		<signal>
			<name>responded_0</name>
			<kind>E</kind>
			<type>boolean</type>
			<notes/>
		</signal>
		<signal>
			<name>responded_1</name>
			<kind>E</kind>
			<type>boolean</type>
			<notes/>
		</signal>
		<signal>
			<name>moveAwayFromBackObstacle</name>
			<kind>E</kind>
			<type>boolean</type>
			<notes/>
		</signal>
		<signal>
			<name>balancer_0</name>
			<kind>S</kind>
			<type>boolean</type>
			<notes/>
		</signal>
		<signal>
			<name>balancer_1</name>
			<kind>S</kind>
			<type>boolean</type>
			<notes/>
		</signal>
		<signal>
			<name>balancer_2</name>
			<kind>S</kind>
			<type>boolean</type>
			<notes/>
		</signal>
	</signals>
	<requirements>
		<requirement>
			<name>assum_0</name>
			<property>!isReady</property>
			<kind>A</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
		<requirement>
			<name>assum_1</name>
			<property>!frontDistSense_0 &amp; !backDistSense_0</property>
			<kind>A</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
		<requirement>
			<name>assum_2</name>
			<property>G(F(isReady))</property>
			<kind>A</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
		<requirement>
			<name>assum_3</name>
			<property>G(isReady -&gt; X(isReady))</property>
			<kind>A</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
		<requirement>
			<name>assum_4</name>
			<property>G(F(responded_0))</property>
			<kind>A</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
		<requirement>
			<name>assum_5</name>
			<property>G(X(responded_0) &lt;-&gt; (((!moveAwayFromFrontObstacle) | !frontDistSense_0) | !(moveAwayFromFrontObstacle)))</property>
			<kind>A</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
		<requirement>
			<name>assum_6</name>
			<property>G(F(responded_1))</property>
			<kind>A</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
		<requirement>
			<name>assum_7</name>
			<property>G(X(responded_1) &lt;-&gt; (((!moveAwayFromBackObstacle) | !backDistSense_0) | !(moveAwayFromBackObstacle)))</property>
			<kind>A</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
		<requirement>
			<name>guar_0</name>
			<property>!balancer_0 &amp; !balancer_1 &amp; !balancer_2</property>
			<kind>G</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
		<requirement>
			<name>guar_1</name>
			<property>G((!isReady) -&gt; !balancer_0 &amp; !balancer_1 &amp; !balancer_2)</property>
			<kind>G</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
		<requirement>
			<name>guar_2</name>
			<property>G(!balancer_0 &amp; !balancer_1 &amp; balancer_2 -&gt; !frontDistSense_0)</property>
			<kind>G</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
		<requirement>
			<name>guar_3</name>
			<property>G(!balancer_0 &amp; balancer_1 &amp; !balancer_2 -&gt; !backDistSense_0)</property>
			<kind>G</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
		<requirement>
			<name>guar_4</name>
			<property>G(F(!balancer_0 &amp; !balancer_1 &amp; balancer_2))</property>
			<kind>G</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
		<requirement>
			<name>guar_5</name>
			<property>G(F(balancer_0 &amp; !balancer_1 &amp; !balancer_2 | !balancer_0 &amp; balancer_1 &amp; balancer_2))</property>
			<kind>G</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
		<requirement>
			<name>guar_6</name>
			<property>G((isReady &amp; !frontDistSense_0) -&gt; !balancer_0 &amp; !balancer_1 &amp; balancer_2)</property>
			<kind>G</kind>
			<notes/>
			<toggled>1</toggled>
		</requirement>
	</requirements>
</project>
