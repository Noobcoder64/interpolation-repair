module HumanoidLTL_750_Humanoid_2
sys boolean responded_0;
env boolean button_0;
env boolean obstacle_0;
env boolean noise_0;
env boolean heading_0;
env boolean heading_1;
sys boolean headMotor_0;
sys boolean headMotor_1;
sys boolean yBoolExpr_2;
sys boolean yBoolExpr_0;
sys boolean rightMotor_0;
sys boolean rightMotor_1;
sys boolean rightMotor_2;
env boolean responded_1;
sys boolean specState_0;
sys boolean specState_1;
sys boolean nextHead_0;
sys boolean nextHead_1;
sys boolean yBoolExpr_1;
sys boolean turnState_0;
sys boolean turnState_1;
sys boolean leftMotor_0;
sys boolean leftMotor_1;
sys boolean leftMotor_2;
sys boolean nextMoveMode_0;
sys boolean nextMoveMode_1;

guarantee
	GF (responded_0);
assumption
	G(next(responded_1) <-> (((heading_0 <-> nextHead_0) & (heading_1 <-> nextHead_1) | (!nextMoveMode_0 | nextMoveMode_1)) | !(nextMoveMode_0 & !nextMoveMode_1)));
guarantee
	!specState_0 & !specState_1;
guarantee
	!turnState_0 & !turnState_1;
guarantee
	nextHead_0 & !nextHead_1;
guarantee
	!nextMoveMode_0 & !nextMoveMode_1;
guarantee
	GF (!nextMoveMode_0 & !nextMoveMode_1);
guarantee
	G(obstacle_0 ->(nextMoveMode_0 & !nextMoveMode_1));
guarantee
	G((!nextMoveMode_0 & nextMoveMode_1 & next(!nextMoveMode_0 & !nextMoveMode_1)) <-> next(!leftMotor_0 & !leftMotor_1 & !leftMotor_2 & !rightMotor_0 & !rightMotor_1 & rightMotor_2));
guarantee
	G((!nextMoveMode_0 & !nextMoveMode_1 & next(!nextMoveMode_0 & nextMoveMode_1)) <-> next(!leftMotor_0 & !leftMotor_1 & leftMotor_2 & !rightMotor_0 & !rightMotor_1 & !rightMotor_2));
guarantee
	G(next(!nextMoveMode_0 & nextMoveMode_1) ->(!nextMoveMode_0 & !nextMoveMode_1 | !nextMoveMode_0 & nextMoveMode_1));
guarantee
	G(!nextMoveMode_0 & nextMoveMode_1 -> next(!nextMoveMode_0 & !nextMoveMode_1 | !nextMoveMode_0 & nextMoveMode_1));
guarantee
	G(next(nextMoveMode_0 & !nextMoveMode_1) ->(!nextMoveMode_0 & !nextMoveMode_1 | nextMoveMode_0 & !nextMoveMode_1));
guarantee
	G(next(nextMoveMode_0 & nextMoveMode_1) ->(!nextMoveMode_0 & !nextMoveMode_1 | nextMoveMode_0 & nextMoveMode_1));
guarantee
	G((!specState_0 & !specState_1 & !nextMoveMode_0 & !nextMoveMode_1 & next(!nextMoveMode_0 & nextMoveMode_1)) -> next(!specState_0 & specState_1));
guarantee
	G((!specState_0 & specState_1 & !nextMoveMode_0 & nextMoveMode_1 & next(!nextMoveMode_0 & !nextMoveMode_1)) -> next(specState_0 & !specState_1));
guarantee
	G(!(specState_0 & !specState_1 & !nextMoveMode_0 & !nextMoveMode_1 & next(!nextMoveMode_0 & nextMoveMode_1)));
guarantee
	G((!specState_0 & specState_1 & next(!nextMoveMode_0 & nextMoveMode_1)) -> next(!specState_0 & specState_1));
guarantee
	G((specState_0 & !specState_1 & next(!nextMoveMode_0 & !nextMoveMode_1)) -> next(specState_0 & !specState_1));
guarantee
	G((nextMoveMode_0 & !nextMoveMode_1 | nextMoveMode_0 & nextMoveMode_1) -> next(!specState_0 & !specState_1));
guarantee
	G(button_0 -> next((nextHead_0 <-> heading_0) & (nextHead_1 <-> heading_1)));
guarantee
	G(!button_0 -> (nextHead_0 <-> next(nextHead_0)) & (nextHead_1 <-> next(nextHead_1)));
guarantee
	G(next(responded_0) <-> (((heading_0 <-> nextHead_0) & (heading_1 <-> nextHead_1)) | !(noise_0)));
guarantee
	G(next(!turnState_0 & !turnState_1) ->(!turnState_0 & !turnState_1 | turnState_0 & turnState_1));
guarantee
	G((!turnState_0 & !turnState_1 &(!(nextMoveMode_0 & !nextMoveMode_1 | nextMoveMode_0 & nextMoveMode_1))) -> next(!turnState_0 & !turnState_1));
guarantee
	G((!nextMoveMode_0 & !nextMoveMode_1) <-> next(yBoolExpr_0));
guarantee
	G(((nextMoveMode_0 & !nextMoveMode_1 | nextMoveMode_0 & nextMoveMode_1) & yBoolExpr_0 & !turnState_0 & !turnState_1) -> next(!turnState_0 & turnState_1));
guarantee
	G(!turnState_0 & turnState_1 ->(next(turnState_0 & !turnState_1) &(nextMoveMode_0 & !nextMoveMode_1 | nextMoveMode_0 & nextMoveMode_1)));
guarantee
	G((turnState_0 & !turnState_1 &(nextMoveMode_0 & !nextMoveMode_1 | nextMoveMode_0 & nextMoveMode_1)) -> next(!turnState_0 & turnState_1));
guarantee
	G((turnState_0 & !turnState_1 & !nextMoveMode_0 & !nextMoveMode_1) -> next(turnState_0 & turnState_1));
guarantee
	G((turnState_0 & turnState_1 & !nextMoveMode_0 & !nextMoveMode_1) -> next(!turnState_0 & !turnState_1));
guarantee
	G((turnState_0 & turnState_1 & (nextMoveMode_0 | nextMoveMode_1)) -> next(turnState_0 & !turnState_1));
guarantee
	G((!turnState_0 & !turnState_1 & next(!turnState_0 & turnState_1)) <->(leftMotor_0 & !leftMotor_1 & leftMotor_2 & rightMotor_0 & !rightMotor_1 & rightMotor_2));
guarantee
	G((next(turnState_0 & !turnState_1) & nextMoveMode_0 & !nextMoveMode_1) <->(!leftMotor_0 & !leftMotor_1 & !leftMotor_2 & !rightMotor_0 & rightMotor_1 & rightMotor_2));
guarantee
	G((nextMoveMode_0 & !nextMoveMode_1) <-> next(yBoolExpr_1));
guarantee
	G((turnState_0 & !turnState_1 & yBoolExpr_1) <->(!leftMotor_0 & !leftMotor_1 & leftMotor_2 & rightMotor_0 & !rightMotor_1 & !rightMotor_2));
guarantee
	G((next(turnState_0 & !turnState_1) & nextMoveMode_0 & nextMoveMode_1) <->(!leftMotor_0 & leftMotor_1 & leftMotor_2 & !rightMotor_0 & !rightMotor_1 & !rightMotor_2));
guarantee
	G((nextMoveMode_0 & nextMoveMode_1) <-> next(yBoolExpr_2));
guarantee
	G((turnState_0 & !turnState_1 & yBoolExpr_2) <->(leftMotor_0 & !leftMotor_1 & !leftMotor_2 & !rightMotor_0 & !rightMotor_1 & rightMotor_2));
guarantee
	G((turnState_0 & turnState_1 & next(!turnState_0 & !turnState_1)) <->(leftMotor_0 & leftMotor_1 & !leftMotor_2 & rightMotor_0 & rightMotor_1 & !rightMotor_2));
assumption
	GF (responded_1);
