module GyroLTL_590_GyroAspect_3
env boolean isReady;
env boolean balancerStatus_0;
env boolean bluetoothCmd_0;
env boolean bluetoothCmd_1;
env boolean bluetoothCmd_2;
env boolean moveAwayFromObstacle;
env boolean responded_0;
env boolean distSense_0;
env boolean responded_1;
sys boolean bluetoothStatus_0;
sys boolean balancer_0;
sys boolean balancer_1;
sys boolean balancer_2;

assumption
	GF (responded_0);
assumption
	G(next(responded_0) <-> (((!moveAwayFromObstacle) | !distSense_0) | !(moveAwayFromObstacle)));
assumption
	GF (isReady);
assumption
	G(isReady -> next(isReady));
assumption
	G(next(responded_1) <-> (((balancer_0 | balancer_1 | !balancer_2) | distSense_0) | !(!balancer_0 & !balancer_1 & balancer_2)));
guarantee
	!balancer_0 & !balancer_1 & !balancer_2;
guarantee
	G((!isReady) -> !balancer_0 & !balancer_1 & !balancer_2);
guarantee
	G(!balancer_0 & !balancer_1 & balancer_2 -> !distSense_0);
guarantee
	GF (!bluetoothCmd_0 & !bluetoothCmd_1 & !bluetoothCmd_2 -> !balancer_0 & !balancer_1 & balancer_2);
guarantee
	GF (!bluetoothCmd_0 & !bluetoothCmd_1 & !bluetoothCmd_2 ->(balancer_0 & !balancer_1 & !balancer_2 | !balancer_0 & balancer_1 & balancer_2));
guarantee
	G(!bluetoothCmd_0 & !bluetoothCmd_1 & !bluetoothCmd_2 ->((!distSense_0 & isReady) -> !balancer_0 & !balancer_1 & balancer_2));
assumption
	GF (responded_1);
