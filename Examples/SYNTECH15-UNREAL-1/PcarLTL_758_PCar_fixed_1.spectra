module PcarLTL_758_PCar_fixed_1
env boolean parkResult_0;
env boolean obstacle_0;
env boolean sideSense_0;
env boolean sideSense_1;
sys boolean parkCommand_0;
sys boolean parkCommand_1;
sys boolean spec_policy_0;
sys boolean spec_policy_1;
sys boolean spec_policy_2;
env boolean responded_0;
sys boolean throttle_0;
sys boolean throttle_1;
sys boolean steer_0;
sys boolean steer_1;

assumption
	G(next(responded_0) <-> ((!spec_policy_0 & spec_policy_1 & !spec_policy_2) | !(!spec_policy_0 & !spec_policy_1 & !spec_policy_2 & !throttle_0 & !throttle_1)));
guarantee
	!spec_policy_0 & !spec_policy_1 & !spec_policy_2 |(!spec_policy_0 & !spec_policy_1 & spec_policy_2 & !parkCommand_0 & !parkCommand_1);
guarantee
	GF (spec_policy_0 & !spec_policy_1 & spec_policy_2);
guarantee
	G(((!spec_policy_0 & !spec_policy_1 & !spec_policy_2 | !spec_policy_0 & !spec_policy_1 & spec_policy_2) & obstacle_0) -> !throttle_0 & throttle_1);
guarantee
	G(obstacle_0 ->(throttle_0 & !throttle_1));
guarantee
	G(sideSense_0 & !sideSense_1 ->(!(!steer_0 & !steer_1 & !throttle_0 & !throttle_1)));
guarantee
	G((!spec_policy_0 & !spec_policy_1 & !spec_policy_2 & sideSense_0 & !sideSense_1) -> (spec_policy_0 <-> next(spec_policy_0)) & (spec_policy_1 <-> next(spec_policy_1)) & (spec_policy_2 <-> next(spec_policy_2)));
guarantee
	G((!spec_policy_0 & !spec_policy_1 & !spec_policy_2 &(!sideSense_0 & !sideSense_1 | !sideSense_0 & sideSense_1) & !obstacle_0) ->(next(!spec_policy_0) & next(!spec_policy_1) & next(spec_policy_2) & !throttle_0 & !throttle_1 & !parkCommand_0 & !parkCommand_1 & steer_0 & !steer_1));
guarantee
	G((!spec_policy_0 & !spec_policy_1 & spec_policy_2 &(!sideSense_0 & !sideSense_1 | !sideSense_0 & sideSense_1) & !obstacle_0 & !parkResult_0) ->((spec_policy_0 <-> next(spec_policy_0)) & (spec_policy_1 <-> next(spec_policy_1)) & (spec_policy_2 <-> next(spec_policy_2)) & !throttle_0 & !throttle_1 & parkCommand_0 & !parkCommand_1 & steer_0 & !steer_1));
guarantee
	G((!spec_policy_0 & !spec_policy_1 & spec_policy_2 &(!sideSense_0 & !sideSense_1 | !sideSense_0 & sideSense_1) & !obstacle_0 & parkResult_0) ->(next(!spec_policy_0) & next(spec_policy_1) & next(!spec_policy_2) & throttle_0 & !throttle_1 & !parkCommand_0 & parkCommand_1 & !steer_0 & !steer_1));
guarantee
	G((!spec_policy_0 & !spec_policy_1 & spec_policy_2 & sideSense_0 & !sideSense_1 & !obstacle_0 & parkResult_0) ->(next(!spec_policy_0) & next(spec_policy_1) & next(!spec_policy_2) & throttle_0 & !throttle_1 & !parkCommand_0 & parkCommand_1 & !steer_0 & !steer_1));
guarantee
	G((!spec_policy_0 & !spec_policy_1 & spec_policy_2 & sideSense_0 & !sideSense_1 & !obstacle_0 & !parkResult_0) ->(next(!spec_policy_0) & next(!spec_policy_1) & next(!spec_policy_2) & !throttle_0 & !throttle_1 & !parkCommand_0 & parkCommand_1));
guarantee
	G(!spec_policy_0 & spec_policy_1 & !spec_policy_2 ->(next(!spec_policy_0) & next(spec_policy_1) & next(spec_policy_2) & !throttle_0 & throttle_1 & !steer_0 & !steer_1 & !parkCommand_0 & parkCommand_1));
guarantee
	G(!spec_policy_0 & spec_policy_1 & spec_policy_2 ->(next(spec_policy_0) & next(!spec_policy_1) & next(!spec_policy_2) & throttle_0 & !throttle_1 & !steer_0 & steer_1 & !parkCommand_0 & parkCommand_1));
guarantee
	G(spec_policy_0 & !spec_policy_1 & !spec_policy_2 ->(next(spec_policy_0) & next(!spec_policy_1) & next(spec_policy_2) & !throttle_0 & throttle_1 & !steer_0 & steer_1 & !parkCommand_0 & parkCommand_1));
guarantee
	G(spec_policy_0 & !spec_policy_1 & spec_policy_2 ->((spec_policy_0 <-> next(spec_policy_0)) & (spec_policy_1 <-> next(spec_policy_1)) & (spec_policy_2 <-> next(spec_policy_2)) & throttle_0 & !throttle_1 & steer_0 & !steer_1 & !parkCommand_0 & parkCommand_1));
guarantee
	G((obstacle_0 &(!(!spec_policy_0 & spec_policy_1 & !spec_policy_2 | !spec_policy_0 & spec_policy_1 & spec_policy_2 | spec_policy_0 & !spec_policy_1 & !spec_policy_2 | spec_policy_0 & !spec_policy_1 & spec_policy_2))) -> next(!spec_policy_0) & next(!spec_policy_1) & next(!spec_policy_2));
guarantee
	G(obstacle_0 -> !parkCommand_0 & parkCommand_1);
guarantee
	G(!spec_policy_0 & !spec_policy_1 & !spec_policy_2 -> (!throttle_0 | throttle_1));
assumption
	GF (responded_0);
