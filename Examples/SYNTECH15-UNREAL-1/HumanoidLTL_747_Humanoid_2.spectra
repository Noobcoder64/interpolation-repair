module HumanoidLTL_747_Humanoid_2
sys boolean responded_0;
env boolean button_0;
env boolean obstacle_0;
env boolean noise_0;
env boolean heading_0;
sys boolean headMotor_0;
sys boolean headMotor_1;
sys boolean spec_turnState_0;
sys boolean spec_turnState_1;
sys boolean rightMotor_0;
sys boolean rightMotor_1;
sys boolean rightMotor_2;
sys boolean spec_nextMoveMode_0;
sys boolean spec_nextMoveMode_1;
sys boolean yBoolExpr_0;
env boolean responded_1;
sys boolean leftMotor_0;
sys boolean leftMotor_1;
sys boolean leftMotor_2;
sys boolean spec_nextHead_0;
sys boolean spec_specState_0;
sys boolean spec_specState_1;

guarantee
	GF (responded_0);
assumption
	G(next(responded_1) <-> (((heading_0 <-> spec_nextHead_0) | (!spec_nextMoveMode_0 | spec_nextMoveMode_1)) | !(spec_nextMoveMode_0 & !spec_nextMoveMode_1)));
guarantee
	!spec_specState_0 & !spec_specState_1;
guarantee
	!spec_turnState_0 & !spec_turnState_1;
guarantee
	spec_nextHead_0;
guarantee
	!spec_nextMoveMode_0 & !spec_nextMoveMode_1;
guarantee
	GF (!spec_nextMoveMode_0 & !spec_nextMoveMode_1);
guarantee
	G(obstacle_0 ->(spec_nextMoveMode_0 & !spec_nextMoveMode_1));
guarantee
	G((!spec_nextMoveMode_0 & spec_nextMoveMode_1 & next(!spec_nextMoveMode_0 & !spec_nextMoveMode_1)) <-> next(!leftMotor_0 & !leftMotor_1 & !leftMotor_2 & !rightMotor_0 & !rightMotor_1 & rightMotor_2));
guarantee
	G((!spec_nextMoveMode_0 & !spec_nextMoveMode_1 & next(!spec_nextMoveMode_0 & spec_nextMoveMode_1)) <-> next(!leftMotor_0 & !leftMotor_1 & leftMotor_2 & !rightMotor_0 & !rightMotor_1 & !rightMotor_2));
guarantee
	G(next(!spec_nextMoveMode_0 & spec_nextMoveMode_1) ->(!spec_nextMoveMode_0 & !spec_nextMoveMode_1 | !spec_nextMoveMode_0 & spec_nextMoveMode_1));
guarantee
	G(!spec_nextMoveMode_0 & spec_nextMoveMode_1 -> next(!spec_nextMoveMode_0 & !spec_nextMoveMode_1 | !spec_nextMoveMode_0 & spec_nextMoveMode_1));
guarantee
	G((!spec_specState_0 & !spec_specState_1 & !spec_nextMoveMode_0 & !spec_nextMoveMode_1 & next(!spec_nextMoveMode_0 & spec_nextMoveMode_1)) -> next(!spec_specState_0 & spec_specState_1));
guarantee
	G((!spec_specState_0 & spec_specState_1 & !spec_nextMoveMode_0 & spec_nextMoveMode_1 & next(!spec_nextMoveMode_0 & !spec_nextMoveMode_1)) -> next(spec_specState_0 & !spec_specState_1));
guarantee
	G(!(spec_specState_0 & !spec_specState_1 & !spec_nextMoveMode_0 & !spec_nextMoveMode_1 & next(!spec_nextMoveMode_0 & spec_nextMoveMode_1)));
guarantee
	G((!spec_specState_0 & spec_specState_1 & next(!spec_nextMoveMode_0 & spec_nextMoveMode_1)) -> next(!spec_specState_0 & spec_specState_1));
guarantee
	G((spec_specState_0 & !spec_specState_1 & next(!spec_nextMoveMode_0 & !spec_nextMoveMode_1)) -> next(spec_specState_0 & !spec_specState_1));
guarantee
	G(spec_nextMoveMode_0 & !spec_nextMoveMode_1 -> next(!spec_specState_0 & !spec_specState_1));
guarantee
	G(button_0 -> next((spec_nextHead_0 <-> heading_0)));
guarantee
	G(!button_0 -> (spec_nextHead_0 <-> next(spec_nextHead_0)));
guarantee
	G(next(responded_0) <-> (((heading_0 <-> spec_nextHead_0)) | !(noise_0)));
guarantee
	G(next(!spec_turnState_0 & !spec_turnState_1) ->(!spec_turnState_0 & !spec_turnState_1 | spec_turnState_0 & spec_turnState_1));
guarantee
	G((!spec_turnState_0 & !spec_turnState_1 &(!spec_nextMoveMode_0 & !spec_nextMoveMode_1)) -> next(!spec_turnState_0 & !spec_turnState_1));
guarantee
	G((!spec_nextMoveMode_0 & !spec_nextMoveMode_1) <-> next(yBoolExpr_0));
guarantee
	G((spec_nextMoveMode_0 & !spec_nextMoveMode_1 & yBoolExpr_0 & !spec_turnState_0 & !spec_turnState_1) -> next(!spec_turnState_0 & spec_turnState_1));
guarantee
	G(!spec_turnState_0 & spec_turnState_1 ->(next(spec_turnState_0 & !spec_turnState_1) & spec_nextMoveMode_0 & !spec_nextMoveMode_1));
guarantee
	G((spec_turnState_0 & !spec_turnState_1 & spec_nextMoveMode_0 & !spec_nextMoveMode_1) -> next(!spec_turnState_0 & spec_turnState_1));
guarantee
	G((spec_turnState_0 & !spec_turnState_1 & !spec_nextMoveMode_0 & !spec_nextMoveMode_1) -> next(spec_turnState_0 & spec_turnState_1));
guarantee
	G((spec_turnState_0 & spec_turnState_1 & !spec_nextMoveMode_0 & !spec_nextMoveMode_1) -> next(!spec_turnState_0 & !spec_turnState_1));
guarantee
	G((spec_turnState_0 & spec_turnState_1 & (spec_nextMoveMode_0 | spec_nextMoveMode_1)) -> next(spec_turnState_0 & !spec_turnState_1));
guarantee
	G((!spec_turnState_0 & !spec_turnState_1 & next(!spec_turnState_0 & spec_turnState_1)) <->(leftMotor_0 & !leftMotor_1 & leftMotor_2 & rightMotor_0 & !rightMotor_1 & rightMotor_2));
guarantee
	G(next(spec_turnState_0 & !spec_turnState_1) <->(!leftMotor_0 & !leftMotor_1 & !leftMotor_2 & !rightMotor_0 & rightMotor_1 & rightMotor_2));
guarantee
	G(spec_turnState_0 & !spec_turnState_1 <->(!leftMotor_0 & !leftMotor_1 & leftMotor_2 & rightMotor_0 & !rightMotor_1 & !rightMotor_2));
guarantee
	G((spec_turnState_0 & spec_turnState_1 & next(!spec_turnState_0 & !spec_turnState_1)) <->(leftMotor_0 & leftMotor_1 & !leftMotor_2 & rightMotor_0 & rightMotor_1 & !rightMotor_2));
assumption
	GF (responded_1);
