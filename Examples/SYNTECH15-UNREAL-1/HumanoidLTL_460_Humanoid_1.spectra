module HumanoidLTL_460_Humanoid_1
env boolean yBoolExpr_0;
env boolean obstacle_0;
env boolean yBoolExpr_1;
env boolean inputMoveMode_0;
env boolean inputMoveMode_1;
sys boolean rightMotor_0;
sys boolean rightMotor_1;
sys boolean rightMotor_2;
sys boolean headMotor_0;
sys boolean headMotor_1;
sys boolean leftMotor_0;
sys boolean leftMotor_1;
sys boolean leftMotor_2;
sys boolean outputMoveMode_0;
sys boolean outputMoveMode_1;

assumption
	G((inputMoveMode_0 & inputMoveMode_1) <-> next(yBoolExpr_0));
assumption
	G(((!inputMoveMode_0 | !inputMoveMode_1)) <-> next(yBoolExpr_1));
guarantee
	G((!inputMoveMode_0 & !inputMoveMode_1 & obstacle_0) ->(outputMoveMode_0 & !outputMoveMode_1 & leftMotor_0 & !leftMotor_1 & leftMotor_2 & rightMotor_0 & !rightMotor_1 & rightMotor_2));
guarantee
	G((!inputMoveMode_0 & inputMoveMode_1 & !obstacle_0) ->(!outputMoveMode_0 & !outputMoveMode_1 & !leftMotor_0 & !leftMotor_1 & !leftMotor_2 & !rightMotor_0 & !rightMotor_1 & rightMotor_2));
guarantee
	G((!inputMoveMode_0 & !inputMoveMode_1 & yBoolExpr_0) ->(leftMotor_0 & leftMotor_1 & !leftMotor_2 & rightMotor_0 & rightMotor_1 & !rightMotor_2));
guarantee
	G((!inputMoveMode_0 & !inputMoveMode_1 & !obstacle_0 & yBoolExpr_1) ->(!leftMotor_0 & !leftMotor_1 & !leftMotor_2 & !rightMotor_0 & !rightMotor_1 & !rightMotor_2));
guarantee
	G(obstacle_0 ->(outputMoveMode_0 & !outputMoveMode_1));
guarantee
	G(inputMoveMode_0 & !inputMoveMode_1 <-> outputMoveMode_0 & outputMoveMode_1);
guarantee
	G(inputMoveMode_0 & !inputMoveMode_1 ->(!leftMotor_0 & !leftMotor_1 & !leftMotor_2 & !rightMotor_0 & rightMotor_1 & rightMotor_2));
guarantee
	G(inputMoveMode_0 & inputMoveMode_1 ->(!leftMotor_0 & !leftMotor_1 & leftMotor_2 & rightMotor_0 & !rightMotor_1 & !rightMotor_2));
guarantee
	G((!(inputMoveMode_0 & !inputMoveMode_1 | inputMoveMode_0 & inputMoveMode_1)) ->(!(leftMotor_0 & !leftMotor_1 & !leftMotor_2 | rightMotor_0 & !rightMotor_1 & !rightMotor_2 |(!leftMotor_0 & leftMotor_1 & leftMotor_2 & !rightMotor_0 & rightMotor_1 & rightMotor_2))));
guarantee
	G((inputMoveMode_0 & !inputMoveMode_1 | inputMoveMode_0 & inputMoveMode_1) -> headMotor_0 & !headMotor_1);
guarantee
	G((inputMoveMode_0 & inputMoveMode_1 & !obstacle_0) -> !outputMoveMode_0 & !outputMoveMode_1);
assumption
	GF (TRUE);
