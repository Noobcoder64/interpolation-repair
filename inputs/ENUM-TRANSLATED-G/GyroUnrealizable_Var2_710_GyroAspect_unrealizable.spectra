
module GyroUnrealizable_Var2_710_GyroAspect_unrealizable

env {CLEAR, BLOCKED} frontDistSense;
env {CLEAR, BLOCKED} backDistSense;
env boolean isReady;

sys {STP, FWD, BWD, TURN_LEFT, TURN_RIGHT} balancer;

env boolean eNV_CONSTRAINT_0_respondsTo_responded;
env boolean eNV_CONSTRAINT_1_respondsTo_responded;
env boolean eNV_CONSTRAINT_2_respondsTo_responded;

assumption
	 (!(isReady));
assumption
	 (((frontDistSense = CLEAR) & (backDistSense = CLEAR)));
assumption
	alwEv (isReady);
assumption
	G ((isReady -> next(isReady)));
assumption
	alwEv (eNV_CONSTRAINT_0_respondsTo_responded);
assumption
	alwEv (eNV_CONSTRAINT_1_respondsTo_responded);
assumption
	alwEv (eNV_CONSTRAINT_2_respondsTo_responded);

guarantee
	 ((balancer = STP));
guarantee
	G ((!(isReady) -> (balancer = STP)));
guarantee
	G (((balancer = FWD) -> (frontDistSense = CLEAR)));
guarantee
	G (((balancer = BWD) -> (backDistSense = CLEAR)));
guarantee
	alwEv ((balancer = FWD));
guarantee
	alwEv (((balancer = TURN_RIGHT) | (balancer = TURN_LEFT)));
guarantee
	G (((isReady & (frontDistSense = CLEAR)) -> (balancer = FWD)));

assumption
	 (eNV_CONSTRAINT_0_respondsTo_responded);
assumption
	G ((next(eNV_CONSTRAINT_0_respondsTo_responded) <-> ((!(!(((balancer = BWD) | (balancer = STP)))) | (backDistSense = CLEAR)) | (eNV_CONSTRAINT_0_respondsTo_responded & !(!(((balancer = BWD) | (balancer = STP))))))));
assumption
	 (eNV_CONSTRAINT_1_respondsTo_responded);
assumption
	G ((next(eNV_CONSTRAINT_1_respondsTo_responded) <-> ((!((balancer = FWD)) | (frontDistSense = BLOCKED)) | (eNV_CONSTRAINT_1_respondsTo_responded & !((balancer = FWD))))));
assumption
	 (eNV_CONSTRAINT_2_respondsTo_responded);
assumption
	G ((next(eNV_CONSTRAINT_2_respondsTo_responded) <-> ((!((balancer = BWD)) | (backDistSense = BLOCKED)) | (eNV_CONSTRAINT_2_respondsTo_responded & !((balancer = BWD))))));

