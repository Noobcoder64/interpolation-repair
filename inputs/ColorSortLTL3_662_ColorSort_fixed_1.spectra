
module ColorSortLTL3_662_ColorSort_fixed_1

env boolean color_0;
env boolean color_1;
env boolean color_2;
assumption
	alw (!(color_0 & color_1 & !color_2));
assumption
	alw (!(color_0 & color_1 & color_2));

env boolean detect_0;
env boolean detect_1;
env boolean detect_2;
assumption
	alw (!(detect_0 & detect_1 & !detect_2));
assumption
	alw (!(detect_0 & detect_1 & detect_2));

env boolean ack_ver_0;

env boolean ack_hor_0;

env boolean ack_bot_0;

env boolean speedButton_0;


sys boolean verMot_0;

sys boolean horMot_0;

sys boolean botMot_0;
sys boolean botMot_1;
guarantee
	alw (!(botMot_0 & botMot_1));

sys boolean motSpeed_0;
sys boolean motSpeed_1;
guarantee
	alw (!(motSpeed_0 & motSpeed_1));

sys boolean spec_state__return_0;
sys boolean spec_state__return_1;
guarantee
	alw (!(spec_state__return_0 & spec_state__return_1));

sys boolean spec_currentColor_0;
sys boolean spec_currentColor_1;
sys boolean spec_currentColor_2;
guarantee
	alw (!(spec_currentColor_0 & spec_currentColor_1 & !spec_currentColor_2));
guarantee
	alw (!(spec_currentColor_0 & spec_currentColor_1 & spec_currentColor_2));

sys boolean spec_dropping;
sys boolean spec_speedButtonValidPressed;

aux boolean pREV_aux_0;
aux boolean pREV_aux_1;
aux boolean pREV_aux_2;
aux boolean pREV_aux_3;
aux boolean pREV_aux_4;

assumption
	alwEv (!((!color_0 & color_1 & color_2)));

guarantee
	alw (((!verMot_0) -> ((!botMot_0 & botMot_1) & (horMot_0))));
guarantee
	alw (((!horMot_0) -> ((!botMot_0 & botMot_1) & (verMot_0))));
guarantee
	alw ((!((!botMot_0 & botMot_1)) -> ((verMot_0) & (horMot_0))));
guarantee
	alw (((verMot_0) -> ((spec_currentColor_0 <-> next(spec_currentColor_0)) & (spec_currentColor_1 <-> next(spec_currentColor_1)) & (spec_currentColor_2 <-> next(spec_currentColor_2)))));
guarantee
	alw (((spec_dropping <-> next(spec_dropping)) <-> (verMot_0)));
guarantee
	alw ((((!ack_ver_0) | (!ack_hor_0)) -> (((verMot_0) & (horMot_0)) & (!botMot_0 & botMot_1))));
guarantee
	alw ((((!color_0 & color_1 & color_2) & !(spec_dropping)) -> (((verMot_0) & (horMot_0)) & (!botMot_0 & botMot_1))));
guarantee
	alw (((!((!color_0 & color_1 & color_2)) & !(spec_dropping)) -> (((!verMot_0) & ((color_0 <-> next(spec_currentColor_0)) & (color_1 <-> next(spec_currentColor_1)) & (color_2 <-> next(spec_currentColor_2)))) & next(spec_dropping))));
guarantee
	alw (((((((ack_ver_0) & (ack_hor_0)) & (ack_bot_0)) & spec_dropping) | ((pREV_aux_0 & (((ack_ver_0) & (ack_hor_0)) & (!ack_bot_0))) & !(((detect_0 <-> spec_currentColor_0) & (detect_1 <-> spec_currentColor_1) & (detect_2 <-> spec_currentColor_2))))) -> (!botMot_0 & !botMot_1)));
guarantee
	alw (((((spec_dropping & (((ack_ver_0) & (ack_hor_0)) & (!ack_bot_0))) & ((detect_0 <-> spec_currentColor_0) & (detect_1 <-> spec_currentColor_1) & (detect_2 <-> spec_currentColor_2))) & pREV_aux_0) -> (!horMot_0)));
guarantee
	 (((!motSpeed_0 & !motSpeed_1) & !(spec_dropping)));
guarantee
	alw ((((!speedButton_0) & pREV_aux_1) <-> spec_speedButtonValidPressed));
guarantee
	alw (((spec_speedButtonValidPressed & pREV_aux_2) -> (!motSpeed_0 & motSpeed_1)));
guarantee
	alw (((spec_speedButtonValidPressed & pREV_aux_3) -> (motSpeed_0 & !motSpeed_1)));
guarantee
	alw (((spec_speedButtonValidPressed & pREV_aux_4) -> (!motSpeed_0 & !motSpeed_1)));
guarantee
	alw (((!(spec_speedButtonValidPressed) & pREV_aux_2) -> (!motSpeed_0 & !motSpeed_1)));
guarantee
	alw (((!(spec_speedButtonValidPressed) & pREV_aux_3) -> (!motSpeed_0 & motSpeed_1)));
guarantee
	alw (((!(spec_speedButtonValidPressed) & pREV_aux_4) -> (motSpeed_0 & !motSpeed_1)));

guarantee
	 (!(pREV_aux_0));
guarantee
	alw ((next(pREV_aux_0) <-> (!botMot_0 & !botMot_1)));
guarantee
	 (!(pREV_aux_1));
guarantee
	alw ((next(pREV_aux_1) <-> (speedButton_0)));
guarantee
	 (!(pREV_aux_2));
guarantee
	alw ((next(pREV_aux_2) <-> (!motSpeed_0 & !motSpeed_1)));
guarantee
	 (!(pREV_aux_3));
guarantee
	alw ((next(pREV_aux_3) <-> (!motSpeed_0 & motSpeed_1)));
guarantee
	 (!(pREV_aux_4));
guarantee
	alw ((next(pREV_aux_4) <-> (motSpeed_0 & !motSpeed_1)));

