
module ColorSortLTLUnrealizable1_790_ColorSort_unrealizable

env {GREEN, BLACK, RED, BLUE, YELLOW, WHITE} color;
env {GREEN, BLACK, RED, BLUE, YELLOW, WHITE} detect;
env {MOVE, SLEEP} ack_ver;
env {MOVE, SLEEP} ack_hor;
env {MOVE, SLEEP} ack_bot;
env {YES, NO} starting_pos;
env {PRESS, RELEASE} speedButton;

sys {MOVE, SLEEP} verMot;
sys {MOVE, SLEEP} horMot;
sys {SEEK, STOP, RETURN} botMot;
sys {LEVEL1, LEVEL2, LEVEL3} motSpeed;
sys {GREEN, BLACK, RED, BLUE, YELLOW, WHITE} spec_currentColor;
sys boolean spec_dropping;
sys boolean spec_speedButtonValidPressed;
sys boolean spec_waiting_ack_ver_mot;
sys boolean spec_waiting_ack_hor_mot;

aux boolean sYS_CONSTRAINT_0_respondsTo_responded;
aux boolean eNV_CONSTRAINT_1_respondsTo_responded;
aux boolean eNV_CONSTRAINT_2_respondsTo_responded;
aux boolean pREV_aux_3;

assumption
	alw ((!(spec_waiting_ack_ver_mot) -> (ack_ver = SLEEP)));
assumption
	alw ((!(spec_waiting_ack_hor_mot) -> (ack_hor = SLEEP)));
assumption
	alwEv (!((color = BLACK)));
assumption
	alwEv ((ack_hor = MOVE));
assumption
	alwEv (eNV_CONSTRAINT_1_respondsTo_responded);
assumption
	alwEv (eNV_CONSTRAINT_2_respondsTo_responded);

guarantee
	alw (((verMot = MOVE) -> ((botMot = STOP) & (horMot = SLEEP))));
guarantee
	alw (((horMot = MOVE) -> ((botMot = STOP) & (verMot = SLEEP))));
guarantee
	alw ((!((botMot = STOP)) -> ((verMot = SLEEP) & (horMot = SLEEP))));
guarantee
	alw ((((ack_ver = MOVE) | (ack_hor = MOVE)) -> (((verMot = SLEEP) & (horMot = SLEEP)) & (botMot = STOP))));
guarantee
	alw (((verMot = SLEEP) <-> (spec_currentColor = next(spec_currentColor))));
guarantee
	alw (((spec_dropping = next(spec_dropping)) <-> ((verMot = SLEEP) & (horMot = SLEEP))));
guarantee
	 ((!(spec_dropping) & (motSpeed = LEVEL1)));
guarantee
	alw ((((!(spec_dropping) & (starting_pos = NO)) & ((ack_ver = SLEEP) & (ack_hor = SLEEP))) <-> (botMot = RETURN)));
guarantee
	alw ((((!(spec_dropping) & (starting_pos = YES)) & (color = BLACK)) -> (((verMot = SLEEP) & (horMot = SLEEP)) & (botMot = STOP))));
guarantee
	alw ((((color = BLACK) | spec_dropping) -> (verMot = SLEEP)));
guarantee
	alw (((((!(spec_dropping) & (starting_pos = YES)) & (((ack_ver = SLEEP) & (ack_hor = SLEEP)) & (ack_bot = SLEEP))) & !((color = BLACK))) <-> ((verMot = MOVE) & (color = next(spec_currentColor)))));
guarantee
	alw ((((spec_dropping & !((detect = spec_currentColor))) & ((ack_ver = SLEEP) & (ack_hor = SLEEP))) <-> (botMot = SEEK)));
guarantee
	alw ((((spec_dropping & (detect = spec_currentColor)) & ((ack_ver = SLEEP) & (ack_hor = SLEEP))) <-> (horMot = MOVE)));
guarantee
	 (((motSpeed = LEVEL1) & !(spec_dropping)));
guarantee
	alw ((((speedButton = PRESS) & pREV_aux_3) <-> spec_speedButtonValidPressed));
guarantee
	alw (((spec_speedButtonValidPressed & (motSpeed = LEVEL1)) -> (next(motSpeed) = LEVEL2)));
guarantee
	alw (((spec_speedButtonValidPressed & (motSpeed = LEVEL2)) -> (next(motSpeed) = LEVEL3)));
guarantee
	alw (((spec_speedButtonValidPressed & (motSpeed = LEVEL3)) -> (next(motSpeed) = LEVEL1)));
guarantee
	alw ((!(spec_speedButtonValidPressed) -> (motSpeed = next(motSpeed))));
guarantee
	 (!(spec_waiting_ack_ver_mot));
guarantee
	alw (((!(spec_waiting_ack_ver_mot) & !((verMot = MOVE))) -> !(next(spec_waiting_ack_ver_mot))));
guarantee
	alw (((!(spec_waiting_ack_ver_mot) & (verMot = MOVE)) -> next(spec_waiting_ack_ver_mot)));
guarantee
	alw (((spec_waiting_ack_ver_mot & (ack_ver = SLEEP)) -> !(next(spec_waiting_ack_ver_mot))));
guarantee
	alw (((spec_waiting_ack_ver_mot & !((ack_ver = SLEEP))) -> next(spec_waiting_ack_ver_mot)));
guarantee
	 (!(spec_waiting_ack_hor_mot));
guarantee
	alw (((!(spec_waiting_ack_hor_mot) & !((horMot = MOVE))) -> !(next(spec_waiting_ack_hor_mot))));
guarantee
	alw (((!(spec_waiting_ack_hor_mot) & (horMot = MOVE)) -> next(spec_waiting_ack_hor_mot)));
guarantee
	alw (((spec_waiting_ack_hor_mot & (ack_hor = SLEEP)) -> !(next(spec_waiting_ack_hor_mot))));
guarantee
	alw (((spec_waiting_ack_hor_mot & !((ack_hor = SLEEP))) -> next(spec_waiting_ack_hor_mot)));
guarantee
	alwEv ((horMot = MOVE));
guarantee
	alwEv (sYS_CONSTRAINT_0_respondsTo_responded);

guarantee
	 (sYS_CONSTRAINT_0_respondsTo_responded);
guarantee
	alw ((next(sYS_CONSTRAINT_0_respondsTo_responded) <-> (((horMot = MOVE) & (detect = spec_currentColor)) | (sYS_CONSTRAINT_0_respondsTo_responded & !(!((color = BLACK)))))));
guarantee
	 (eNV_CONSTRAINT_1_respondsTo_responded);
guarantee
	alw ((next(eNV_CONSTRAINT_1_respondsTo_responded) <-> ((ack_ver = SLEEP) | (eNV_CONSTRAINT_1_respondsTo_responded & !(spec_waiting_ack_ver_mot)))));
guarantee
	 (eNV_CONSTRAINT_2_respondsTo_responded);
guarantee
	alw ((next(eNV_CONSTRAINT_2_respondsTo_responded) <-> ((ack_hor = SLEEP) | (eNV_CONSTRAINT_2_respondsTo_responded & !(spec_waiting_ack_hor_mot)))));
guarantee
	 (!(pREV_aux_3));
guarantee
	alw ((next(pREV_aux_3) <-> (speedButton = RELEASE)));

