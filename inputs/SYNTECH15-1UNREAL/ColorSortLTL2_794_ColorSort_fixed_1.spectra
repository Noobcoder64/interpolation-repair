
module ColorSortLTL2_794_ColorSort_fixed_1

env boolean color_0;
env boolean color_1;
env boolean color_2;
env boolean detect_0;
env boolean detect_1;
env boolean detect_2;
env boolean ack_ver_hor_0;
env boolean ack_bot_0;
env boolean atEdge_0;
env boolean num_of_cubes_0;
env boolean haltButton_0;
env boolean speedButton_0;

sys boolean verMot_0;
sys boolean horMot_0;
sys boolean botMot_0;
sys boolean botMot_1;
sys boolean spec_allsleep;
sys boolean motSpeed_0;
sys boolean motSpeed_1;
sys boolean reduce_num_of_cubes_0;
sys boolean spec_currentColor_0;
sys boolean spec_currentColor_1;
sys boolean spec_currentColor_2;
sys boolean spec_stage_0;
sys boolean spec_stage_1;
sys boolean spec_stage_2;
sys boolean spec_finished_cycle;
sys boolean spec_speedButtonValidPressed;
sys boolean spec_haltButtonValidPressed;
sys boolean spec_pausing_0;

env boolean sYS_CONSTRAINT_0_respondsTo_responded;
env boolean eNV_CONSTRAINT_1_respondsTo_responded;
env boolean eNV_CONSTRAINT_2_respondsTo_responded;
env boolean eNV_CONSTRAINT_3_respondsTo_responded;
env boolean pREV_aux_4;
env boolean pREV_aux_5;
env boolean pREV_aux_6;
env boolean pREV_aux_7;
env boolean pREV_aux_8;
env boolean pREV_aux_9;
env boolean pREV_aux_10;

assumption
	GF (((color_0 | !(color_1)) | !(color_2)));
assumption
	GF (eNV_CONSTRAINT_1_respondsTo_responded);
assumption
	GF (eNV_CONSTRAINT_2_respondsTo_responded);
assumption
	GF (eNV_CONSTRAINT_3_respondsTo_responded);
assumption
	 (!(((color_0 & color_1) & !(color_2))));
assumption
	G (!(((next(color_0) & next(color_1)) & !(next(color_2)))));
assumption
	 (!(((color_0 & color_1) & color_2)));
assumption
	G (!(((next(color_0) & next(color_1)) & next(color_2))));
assumption
	 (!(((detect_0 & detect_1) & !(detect_2))));
assumption
	G (!(((next(detect_0) & next(detect_1)) & !(next(detect_2)))));
assumption
	 (!(((detect_0 & detect_1) & detect_2)));
assumption
	G (!(((next(detect_0) & next(detect_1)) & next(detect_2))));

guarantee
	 ((((((!(motSpeed_0) & !(motSpeed_1)) & !(spec_stage_0)) & !(spec_stage_1)) & !(spec_stage_2)) & spec_pausing_0));
guarantee
	G ((((spec_haltButtonValidPressed & spec_pausing_0) | (!(spec_haltButtonValidPressed) & !(spec_pausing_0))) -> !(next(spec_pausing_0))));
guarantee
	G ((((!(spec_haltButtonValidPressed) & spec_pausing_0) | (spec_haltButtonValidPressed & !(spec_pausing_0))) -> next(spec_pausing_0)));
guarantee
	G (((!(spec_pausing_0) | !(ack_ver_hor_0)) -> (((spec_allsleep & (spec_stage_0 <-> next(spec_stage_0))) & (spec_stage_1 <-> next(spec_stage_1))) & (spec_stage_2 <-> next(spec_stage_2)))));
guarantee
	G ((((spec_stage_0 | spec_stage_1) | spec_stage_2) -> (((spec_currentColor_0 <-> next(spec_currentColor_0)) & (spec_currentColor_1 <-> next(spec_currentColor_1))) & (spec_currentColor_2 <-> next(spec_currentColor_2)))));
guarantee
	G ((((((((!(color_0) & color_1) & color_2) | !(num_of_cubes_0)) & !(spec_stage_0)) & !(spec_stage_1)) & !(spec_stage_2)) -> (((spec_allsleep & !(next(spec_stage_0))) & !(next(spec_stage_1))) & !(next(spec_stage_2)))));
guarantee
	G (((((((((color_0 | !(color_1)) | !(color_2)) & num_of_cubes_0) & !(spec_stage_0)) & !(spec_stage_1)) & !(spec_stage_2)) & spec_pausing_0) -> ((((((!(verMot_0) & (color_0 <-> next(spec_currentColor_0))) & (color_1 <-> next(spec_currentColor_1))) & (color_2 <-> next(spec_currentColor_2))) & !(next(spec_stage_0))) & !(next(spec_stage_1))) & next(spec_stage_2))));
guarantee
	G ((((((ack_ver_hor_0 & !(spec_stage_0)) & !(spec_stage_1)) & spec_stage_2) & spec_pausing_0) -> ((((!(botMot_0) & !(botMot_1)) & !(next(spec_stage_0))) & next(spec_stage_1)) & !(next(spec_stage_2)))));
guarantee
	G (((((!(atEdge_0) & (((!(spec_stage_0) & spec_stage_1) & !(spec_stage_2)) | ((!(spec_stage_0) & spec_stage_1) & spec_stage_2))) & (((detect_0 <-> !(spec_currentColor_0)) | (detect_1 <-> !(spec_currentColor_1))) | (detect_2 <-> !(spec_currentColor_2)))) & spec_pausing_0) -> (((((((!(spec_stage_0) & spec_stage_1) & !(spec_stage_2)) -> (!(botMot_0) & !(botMot_1))) & (((!(spec_stage_0) & spec_stage_1) & spec_stage_2) -> (!(botMot_0) & botMot_1))) & (spec_stage_0 <-> next(spec_stage_0))) & (spec_stage_1 <-> next(spec_stage_1))) & (spec_stage_2 <-> next(spec_stage_2)))));
guarantee
	G (((((atEdge_0 & (((!(spec_stage_0) & spec_stage_1) & !(spec_stage_2)) | ((!(spec_stage_0) & spec_stage_1) & spec_stage_2))) & spec_pausing_0) & (((detect_0 <-> !(spec_currentColor_0)) | (detect_1 <-> !(spec_currentColor_1))) | (detect_2 <-> !(spec_currentColor_2)))) -> ((((!(spec_stage_0) & spec_stage_1) & !(spec_stage_2)) -> ((((!(botMot_0) & botMot_1) & !(next(spec_stage_0))) & next(spec_stage_1)) & next(spec_stage_2))) & (((!(spec_stage_0) & spec_stage_1) & spec_stage_2) -> ((((!(botMot_0) & !(botMot_1)) & !(next(spec_stage_0))) & next(spec_stage_1)) & !(next(spec_stage_2)))))));
guarantee
	G (((((((((!(spec_stage_0) & spec_stage_1) & !(spec_stage_2)) | ((!(spec_stage_0) & spec_stage_1) & spec_stage_2)) & spec_pausing_0) & (detect_0 <-> spec_currentColor_0)) & (detect_1 <-> spec_currentColor_1)) & (detect_2 <-> spec_currentColor_2)) -> ((((((verMot_0 & !(horMot_0)) & botMot_0) & !(botMot_1)) & next(spec_stage_0)) & !(next(spec_stage_1))) & !(next(spec_stage_2)))));
guarantee
	G (((((((ack_ver_hor_0 & spec_stage_0) & !(spec_stage_1)) & !(spec_stage_2)) | ((((!(ack_bot_0) | (ack_bot_0 & pREV_aux_5)) & spec_stage_0) & !(spec_stage_1)) & spec_stage_2)) & spec_pausing_0) -> ((((botMot_0 & botMot_1) & next(spec_stage_0)) & !(next(spec_stage_1))) & next(spec_stage_2))));
guarantee
	G ((spec_finished_cycle -> (((spec_allsleep & !(next(spec_stage_0))) & !(next(spec_stage_1))) & !(next(spec_stage_2)))));
guarantee
	GF (sYS_CONSTRAINT_0_respondsTo_responded);
guarantee
	 (!((motSpeed_0 & motSpeed_1)));
guarantee
	G (!((next(motSpeed_0) & next(motSpeed_1))));
guarantee
	 (!(((spec_currentColor_0 & spec_currentColor_1) & !(spec_currentColor_2))));
guarantee
	G (!(((next(spec_currentColor_0) & next(spec_currentColor_1)) & !(next(spec_currentColor_2)))));
guarantee
	 (!(((spec_currentColor_0 & spec_currentColor_1) & spec_currentColor_2)));
guarantee
	G (!(((next(spec_currentColor_0) & next(spec_currentColor_1)) & next(spec_currentColor_2))));
guarantee
	 (!(((spec_stage_0 & spec_stage_1) & !(spec_stage_2))));
guarantee
	G (!(((next(spec_stage_0) & next(spec_stage_1)) & !(next(spec_stage_2)))));
guarantee
	 (!(((spec_stage_0 & spec_stage_1) & spec_stage_2)));
guarantee
	G (!(((next(spec_stage_0) & next(spec_stage_1)) & next(spec_stage_2))));
guarantee
	 (((!(haltButton_0) & pREV_aux_4) <-> spec_haltButtonValidPressed));
guarantee
	G (((!(next(haltButton_0)) & next(pREV_aux_4)) <-> next(spec_haltButtonValidPressed)));
guarantee
	 ((!(verMot_0) -> ((botMot_0 & !(botMot_1)) & horMot_0)));
guarantee
	G ((!(next(verMot_0)) -> ((next(botMot_0) & !(next(botMot_1))) & next(horMot_0))));
guarantee
	 ((!(horMot_0) -> ((botMot_0 & !(botMot_1)) & verMot_0)));
guarantee
	G ((!(next(horMot_0)) -> ((next(botMot_0) & !(next(botMot_1))) & next(verMot_0))));
guarantee
	 (((!(botMot_0) | botMot_1) -> (verMot_0 & horMot_0)));
guarantee
	G (((!(next(botMot_0)) | next(botMot_1)) -> (next(verMot_0) & next(horMot_0))));
guarantee
	 ((spec_allsleep <-> (((verMot_0 & horMot_0) & botMot_0) & !(botMot_1))));
guarantee
	G ((next(spec_allsleep) <-> (((next(verMot_0) & next(horMot_0)) & next(botMot_0)) & !(next(botMot_1)))));
guarantee
	 ((spec_finished_cycle <-> (((((ack_bot_0 & pREV_aux_6) & spec_stage_0) & !(spec_stage_1)) & spec_stage_2) & spec_pausing_0)));
guarantee
	G ((next(spec_finished_cycle) <-> (((((next(ack_bot_0) & next(pREV_aux_6)) & next(spec_stage_0)) & !(next(spec_stage_1))) & next(spec_stage_2)) & next(spec_pausing_0))));
guarantee
	 ((spec_finished_cycle <-> !(reduce_num_of_cubes_0)));
guarantee
	G ((next(spec_finished_cycle) <-> !(next(reduce_num_of_cubes_0))));
guarantee
	 (((!(speedButton_0) & pREV_aux_7) <-> spec_speedButtonValidPressed));
guarantee
	G (((!(next(speedButton_0)) & next(pREV_aux_7)) <-> next(spec_speedButtonValidPressed)));
guarantee
	 (((spec_speedButtonValidPressed & pREV_aux_8) -> (!(motSpeed_0) & motSpeed_1)));
guarantee
	G (((next(spec_speedButtonValidPressed) & next(pREV_aux_8)) -> (!(next(motSpeed_0)) & next(motSpeed_1))));
guarantee
	 (((spec_speedButtonValidPressed & pREV_aux_9) -> (motSpeed_0 & !(motSpeed_1))));
guarantee
	G (((next(spec_speedButtonValidPressed) & next(pREV_aux_9)) -> (next(motSpeed_0) & !(next(motSpeed_1)))));
guarantee
	 (((spec_speedButtonValidPressed & pREV_aux_10) -> (!(motSpeed_0) & !(motSpeed_1))));
guarantee
	G (((next(spec_speedButtonValidPressed) & next(pREV_aux_10)) -> (!(next(motSpeed_0)) & !(next(motSpeed_1)))));
guarantee
	 (((!(spec_speedButtonValidPressed) & pREV_aux_8) -> (!(motSpeed_0) & !(motSpeed_1))));
guarantee
	G (((!(next(spec_speedButtonValidPressed)) & next(pREV_aux_8)) -> (!(next(motSpeed_0)) & !(next(motSpeed_1)))));
guarantee
	 (((!(spec_speedButtonValidPressed) & pREV_aux_9) -> (!(motSpeed_0) & motSpeed_1)));
guarantee
	G (((!(next(spec_speedButtonValidPressed)) & next(pREV_aux_9)) -> (!(next(motSpeed_0)) & next(motSpeed_1))));
guarantee
	 (((!(spec_speedButtonValidPressed) & pREV_aux_10) -> (motSpeed_0 & !(motSpeed_1))));
guarantee
	G (((!(next(spec_speedButtonValidPressed)) & next(pREV_aux_10)) -> (next(motSpeed_0) & !(next(motSpeed_1)))));

assumption
	 (sYS_CONSTRAINT_0_respondsTo_responded);
assumption
	G ((next(sYS_CONSTRAINT_0_respondsTo_responded) <-> (spec_haltButtonValidPressed | (sYS_CONSTRAINT_0_respondsTo_responded & !((spec_haltButtonValidPressed & spec_pausing_0))))));
assumption
	 (eNV_CONSTRAINT_1_respondsTo_responded);
assumption
	G ((next(eNV_CONSTRAINT_1_respondsTo_responded) <-> (ack_ver_hor_0 | (eNV_CONSTRAINT_1_respondsTo_responded & !(!(ack_ver_hor_0))))));
assumption
	 (eNV_CONSTRAINT_2_respondsTo_responded);
assumption
	G ((next(eNV_CONSTRAINT_2_respondsTo_responded) <-> (ack_bot_0 | (eNV_CONSTRAINT_2_respondsTo_responded & !(!(ack_bot_0))))));
assumption
	 (eNV_CONSTRAINT_3_respondsTo_responded);
assumption
	G ((next(eNV_CONSTRAINT_3_respondsTo_responded) <-> (!(num_of_cubes_0) | (eNV_CONSTRAINT_3_respondsTo_responded & !(num_of_cubes_0)))));
assumption
	 (!(pREV_aux_4));
assumption
	G ((next(pREV_aux_4) <-> haltButton_0));
assumption
	 (!(pREV_aux_5));
assumption
	G ((next(pREV_aux_5) <-> !(spec_pausing_0)));
assumption
	 (!(pREV_aux_6));
assumption
	G ((next(pREV_aux_6) <-> spec_pausing_0));
assumption
	 (!(pREV_aux_7));
assumption
	G ((next(pREV_aux_7) <-> speedButton_0));
assumption
	 (!(pREV_aux_8));
assumption
	G ((next(pREV_aux_8) <-> (!(motSpeed_0) & !(motSpeed_1))));
assumption
	 (!(pREV_aux_9));
assumption
	G ((next(pREV_aux_9) <-> (!(motSpeed_0) & motSpeed_1)));
assumption
	 (!(pREV_aux_10));
assumption
	G ((next(pREV_aux_10) <-> (motSpeed_0 & !(motSpeed_1))));

