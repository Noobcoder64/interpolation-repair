
module HumanoidLTL_533_Humanoid_2

env boolean obstacle_0;

sys boolean leftMotor_0;
sys boolean leftMotor_1;
sys boolean leftMotor_2;
sys boolean rightMotor_0;
sys boolean rightMotor_1;
sys boolean rightMotor_2;
sys boolean headMotor_0;
sys boolean headMotor_1;
sys boolean nextMoveMode_0;
sys boolean nextMoveMode_1;
sys boolean state_0;
sys boolean state_1;

env boolean eNV_CONSTRAINT_0_respondsTo_responded;
env boolean pREV_aux_1;
env boolean pREV_aux_2;
env boolean pREV_aux_3;
env boolean pREV_aux_4;
env boolean pREV_aux_5;

assumption
	GF ((pREV_aux_3 & !(obstacle_0)));
assumption
	G ((((!(nextMoveMode_0) & nextMoveMode_1) & !(obstacle_0)) -> !(next(obstacle_0))));
assumption
	GF (eNV_CONSTRAINT_0_respondsTo_responded);

guarantee
	GF ((!(nextMoveMode_0) & !(nextMoveMode_1)));
guarantee
	G ((((((!(state_0) & !(state_1)) & !(nextMoveMode_0)) & !(nextMoveMode_1)) & (!(next(nextMoveMode_0)) & next(nextMoveMode_1))) -> (!(next(state_0)) & next(state_1))));
guarantee
	G ((((((!(state_0) & state_1) & !(nextMoveMode_0)) & nextMoveMode_1) & (!(next(nextMoveMode_0)) & !(next(nextMoveMode_1)))) -> (next(state_0) & !(next(state_1)))));
guarantee
	G ((((((state_0 & !(state_1)) & !(nextMoveMode_0)) & !(nextMoveMode_1)) & (!(next(nextMoveMode_0)) & next(nextMoveMode_1))) -> (next(state_0) & next(state_1))));
guarantee
	G ((((!(state_0) & state_1) & (!(next(nextMoveMode_0)) & next(nextMoveMode_1))) -> (!(next(state_0)) & next(state_1))));
guarantee
	G ((((state_0 & !(state_1)) & (!(next(nextMoveMode_0)) & !(next(nextMoveMode_1)))) -> (next(state_0) & !(next(state_1)))));
guarantee
	G ((((nextMoveMode_0 & !(nextMoveMode_1)) | (nextMoveMode_0 & !(nextMoveMode_1))) -> (!(next(state_0)) & !(next(state_1)))));
guarantee
	 (!(((leftMotor_0 & leftMotor_1) & leftMotor_2)));
guarantee
	G (!(((next(leftMotor_0) & next(leftMotor_1)) & next(leftMotor_2))));
guarantee
	 (!(((rightMotor_0 & rightMotor_1) & rightMotor_2)));
guarantee
	G (!(((next(rightMotor_0) & next(rightMotor_1)) & next(rightMotor_2))));
guarantee
	 (!((headMotor_0 & headMotor_1)));
guarantee
	G (!((next(headMotor_0) & next(headMotor_1))));
guarantee
	 (!((state_0 & state_1)));
guarantee
	G (!((next(state_0) & next(state_1))));
guarantee
	 ((obstacle_0 -> !((!(nextMoveMode_0) & !(nextMoveMode_1)))));
guarantee
	G ((next(obstacle_0) -> !((!(next(nextMoveMode_0)) & !(next(nextMoveMode_1))))));
guarantee
	 ((((pREV_aux_1 & !(nextMoveMode_0)) & !(nextMoveMode_1)) <-> (((((!(leftMotor_0) & !(leftMotor_1)) & !(leftMotor_2)) & !(rightMotor_0)) & !(rightMotor_1)) & rightMotor_2)));
guarantee
	G ((((next(pREV_aux_1) & !(next(nextMoveMode_0))) & !(next(nextMoveMode_1))) <-> (((((!(next(leftMotor_0)) & !(next(leftMotor_1))) & !(next(leftMotor_2))) & !(next(rightMotor_0))) & !(next(rightMotor_1))) & next(rightMotor_2))));
guarantee
	 ((((pREV_aux_2 & !(nextMoveMode_0)) & nextMoveMode_1) <-> (((((!(leftMotor_0) & !(leftMotor_1)) & leftMotor_2) & !(rightMotor_0)) & !(rightMotor_1)) & !(rightMotor_2))));
guarantee
	G ((((next(pREV_aux_2) & !(next(nextMoveMode_0))) & next(nextMoveMode_1)) <-> (((((!(next(leftMotor_0)) & !(next(leftMotor_1))) & next(leftMotor_2)) & !(next(rightMotor_0))) & !(next(rightMotor_1))) & !(next(rightMotor_2)))));
guarantee
	 (((!(nextMoveMode_0) & nextMoveMode_1) -> (pREV_aux_2 | pREV_aux_1)));
guarantee
	G (((!(next(nextMoveMode_0)) & next(nextMoveMode_1)) -> (next(pREV_aux_2) | next(pREV_aux_1))));
guarantee
	 ((pREV_aux_3 -> !((!(nextMoveMode_0) & nextMoveMode_1))));
guarantee
	G ((next(pREV_aux_3) -> !((!(next(nextMoveMode_0)) & next(nextMoveMode_1)))));
guarantee
	 ((((pREV_aux_2 & nextMoveMode_0) & !(nextMoveMode_1)) <-> (((((leftMotor_0 & !(leftMotor_1)) & leftMotor_2) & rightMotor_0) & !(rightMotor_1)) & rightMotor_2)));
guarantee
	G ((((next(pREV_aux_2) & next(nextMoveMode_0)) & !(next(nextMoveMode_1))) <-> (((((next(leftMotor_0) & !(next(leftMotor_1))) & next(leftMotor_2)) & next(rightMotor_0)) & !(next(rightMotor_1))) & next(rightMotor_2))));
guarantee
	 ((pREV_aux_1 -> (!(nextMoveMode_0) | nextMoveMode_1)));
guarantee
	G ((next(pREV_aux_1) -> (!(next(nextMoveMode_0)) | next(nextMoveMode_1))));
guarantee
	 (((pREV_aux_2 & pREV_aux_4) <-> (((((leftMotor_0 & leftMotor_1) & !(leftMotor_2)) & rightMotor_0) & rightMotor_1) & !(rightMotor_2))));
guarantee
	G (((next(pREV_aux_2) & next(pREV_aux_4)) <-> (((((next(leftMotor_0) & next(leftMotor_1)) & !(next(leftMotor_2))) & next(rightMotor_0)) & next(rightMotor_1)) & !(next(rightMotor_2)))));
guarantee
	 ((pREV_aux_5 <-> (nextMoveMode_0 & nextMoveMode_1)));
guarantee
	G ((next(pREV_aux_5) <-> (next(nextMoveMode_0) & next(nextMoveMode_1))));
guarantee
	 ((pREV_aux_5 -> (((((!(leftMotor_0) & !(leftMotor_1)) & !(leftMotor_2)) & !(rightMotor_0)) & rightMotor_1) & rightMotor_2)));
guarantee
	G ((next(pREV_aux_5) -> (((((!(next(leftMotor_0)) & !(next(leftMotor_1))) & !(next(leftMotor_2))) & !(next(rightMotor_0))) & next(rightMotor_1)) & next(rightMotor_2))));
guarantee
	 ((pREV_aux_3 -> (((((!(leftMotor_0) & !(leftMotor_1)) & leftMotor_2) & rightMotor_0) & !(rightMotor_1)) & !(rightMotor_2))));
guarantee
	G ((next(pREV_aux_3) -> (((((!(next(leftMotor_0)) & !(next(leftMotor_1))) & next(leftMotor_2)) & next(rightMotor_0)) & !(next(rightMotor_1))) & !(next(rightMotor_2)))));
guarantee
	 ((!((pREV_aux_5 | pREV_aux_3)) -> !((((((leftMotor_0 & !(leftMotor_1)) & !(leftMotor_2)) | ((rightMotor_0 & !(rightMotor_1)) & !(rightMotor_2))) | ((!(leftMotor_0) & leftMotor_1) & leftMotor_2)) | ((!(rightMotor_0) & rightMotor_1) & rightMotor_2)))));
guarantee
	G ((!((next(pREV_aux_5) | next(pREV_aux_3))) -> !((((((next(leftMotor_0) & !(next(leftMotor_1))) & !(next(leftMotor_2))) | ((next(rightMotor_0) & !(next(rightMotor_1))) & !(next(rightMotor_2)))) | ((!(next(leftMotor_0)) & next(leftMotor_1)) & next(leftMotor_2))) | ((!(next(rightMotor_0)) & next(rightMotor_1)) & next(rightMotor_2))))));

assumption
	 (eNV_CONSTRAINT_0_respondsTo_responded);
assumption
	G ((next(eNV_CONSTRAINT_0_respondsTo_responded) <-> (!(obstacle_0) | (eNV_CONSTRAINT_0_respondsTo_responded & !((nextMoveMode_0 | nextMoveMode_1))))));
assumption
	 (!(pREV_aux_1));
assumption
	G ((next(pREV_aux_1) <-> (!(nextMoveMode_0) & nextMoveMode_1)));
assumption
	 (!(pREV_aux_2));
assumption
	G ((next(pREV_aux_2) <-> (!(nextMoveMode_0) & !(nextMoveMode_1))));
assumption
	 (!(pREV_aux_3));
assumption
	G ((next(pREV_aux_3) <-> (nextMoveMode_0 & nextMoveMode_1)));
assumption
	 (!(pREV_aux_4));
assumption
	G ((next(pREV_aux_4) <-> pREV_aux_3));
assumption
	 (!(pREV_aux_5));
assumption
	G ((next(pREV_aux_5) <-> (nextMoveMode_0 & !(nextMoveMode_1))));

