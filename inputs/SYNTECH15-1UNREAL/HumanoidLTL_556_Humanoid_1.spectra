
module HumanoidLTL_556_Humanoid_1

env boolean obstacle_0;
env boolean noise_0;
env boolean heading_0;

sys boolean leftMotor_0;
sys boolean leftMotor_1;
sys boolean leftMotor_2;
sys boolean rightMotor_0;
sys boolean rightMotor_1;
sys boolean rightMotor_2;
sys boolean headMotor_0;
sys boolean headMotor_1;
sys boolean spec_nextMoveMode_0;
sys boolean spec_nextMoveMode_1;
sys boolean spec_state_0;
sys boolean spec_state_1;
sys boolean spec_search_0;
sys boolean spec_search_1;

env boolean eNV_CONSTRAINT_0_respondsTo_responded;
env boolean pREV_aux_1;
env boolean pREV_aux_2;
env boolean pREV_aux_3;
env boolean pREV_aux_4;
env boolean pREV_aux_5;

assumption
	GF ((pREV_aux_1 & !(obstacle_0)));
assumption
	G ((((!(spec_nextMoveMode_0) & spec_nextMoveMode_1) & !(obstacle_0)) -> !(next(obstacle_0))));
assumption
	GF (eNV_CONSTRAINT_0_respondsTo_responded);

guarantee
	 ((!(spec_search_0) & !(spec_search_1)));
guarantee
	G ((headMotor_0 & !(headMotor_1)));
guarantee
	GF ((!(spec_nextMoveMode_0) & !(spec_nextMoveMode_1)));
guarantee
	G ((((((!(spec_state_0) & !(spec_state_1)) & !(spec_nextMoveMode_0)) & !(spec_nextMoveMode_1)) & (!(next(spec_nextMoveMode_0)) & next(spec_nextMoveMode_1))) -> (!(next(spec_state_0)) & next(spec_state_1))));
guarantee
	G ((((((!(spec_state_0) & spec_state_1) & !(spec_nextMoveMode_0)) & spec_nextMoveMode_1) & (!(next(spec_nextMoveMode_0)) & !(next(spec_nextMoveMode_1)))) -> (next(spec_state_0) & !(next(spec_state_1)))));
guarantee
	G ((((((spec_state_0 & !(spec_state_1)) & !(spec_nextMoveMode_0)) & !(spec_nextMoveMode_1)) & (!(next(spec_nextMoveMode_0)) & next(spec_nextMoveMode_1))) -> (next(spec_state_0) & next(spec_state_1))));
guarantee
	G ((((!(spec_state_0) & spec_state_1) & (!(next(spec_nextMoveMode_0)) & next(spec_nextMoveMode_1))) -> (!(next(spec_state_0)) & next(spec_state_1))));
guarantee
	G ((((spec_state_0 & !(spec_state_1)) & (!(next(spec_nextMoveMode_0)) & !(next(spec_nextMoveMode_1)))) -> (next(spec_state_0) & !(next(spec_state_1)))));
guarantee
	G ((((spec_nextMoveMode_0 & !(spec_nextMoveMode_1)) | (spec_nextMoveMode_0 & !(spec_nextMoveMode_1))) -> (!(next(spec_state_0)) & !(next(spec_state_1)))));
guarantee
	G (((((((!(spec_search_0) & !(spec_search_1)) & !(spec_nextMoveMode_0)) & !(spec_nextMoveMode_1)) & noise_0) & heading_0) -> ((!(next(spec_search_0)) & next(spec_search_1)) & (!(next(spec_nextMoveMode_0)) & !(next(spec_nextMoveMode_1))))));
guarantee
	G (((!(spec_search_0) & spec_search_1) -> ((next(spec_search_0) & !(next(spec_search_1))) & (next(spec_nextMoveMode_0) & !(next(spec_nextMoveMode_1))))));
guarantee
	G ((((spec_search_0 & !(spec_search_1)) & heading_0) -> ((next(spec_search_0) & !(next(spec_search_1))) & ((spec_nextMoveMode_0 & !(spec_nextMoveMode_1)) | (spec_nextMoveMode_0 & spec_nextMoveMode_1)))));
guarantee
	G ((((spec_search_0 & !(spec_search_1)) & !(heading_0)) -> (!(next(spec_search_0)) & !(next(spec_search_1)))));
guarantee
	 (!(((leftMotor_0 & leftMotor_1) & leftMotor_2)));
guarantee
	G (!(((next(leftMotor_0) & next(leftMotor_1)) & next(leftMotor_2))));
guarantee
	 (!(((rightMotor_0 & rightMotor_1) & rightMotor_2)));
guarantee
	G (!(((next(rightMotor_0) & next(rightMotor_1)) & next(rightMotor_2))));
guarantee
	 (!((headMotor_0 & headMotor_1)));
guarantee
	G (!((next(headMotor_0) & next(headMotor_1))));
guarantee
	 (!((spec_search_0 & spec_search_1)));
guarantee
	G (!((next(spec_search_0) & next(spec_search_1))));
guarantee
	 (!((spec_state_0 & spec_state_1)));
guarantee
	G (!((next(spec_state_0) & next(spec_state_1))));
guarantee
	 (((obstacle_0 & !(pREV_aux_2)) -> !((!(spec_nextMoveMode_0) & !(spec_nextMoveMode_1)))));
guarantee
	G (((next(obstacle_0) & !(next(pREV_aux_2))) -> !((!(next(spec_nextMoveMode_0)) & !(next(spec_nextMoveMode_1))))));
guarantee
	 ((((pREV_aux_3 & !(spec_nextMoveMode_0)) & !(spec_nextMoveMode_1)) <-> (((((!(leftMotor_0) & !(leftMotor_1)) & !(leftMotor_2)) & !(rightMotor_0)) & !(rightMotor_1)) & rightMotor_2)));
guarantee
	G ((((next(pREV_aux_3) & !(next(spec_nextMoveMode_0))) & !(next(spec_nextMoveMode_1))) <-> (((((!(next(leftMotor_0)) & !(next(leftMotor_1))) & !(next(leftMotor_2))) & !(next(rightMotor_0))) & !(next(rightMotor_1))) & next(rightMotor_2))));
guarantee
	 ((((pREV_aux_4 & !(spec_nextMoveMode_0)) & spec_nextMoveMode_1) <-> (((((!(leftMotor_0) & !(leftMotor_1)) & leftMotor_2) & !(rightMotor_0)) & !(rightMotor_1)) & !(rightMotor_2))));
guarantee
	G ((((next(pREV_aux_4) & !(next(spec_nextMoveMode_0))) & next(spec_nextMoveMode_1)) <-> (((((!(next(leftMotor_0)) & !(next(leftMotor_1))) & next(leftMotor_2)) & !(next(rightMotor_0))) & !(next(rightMotor_1))) & !(next(rightMotor_2)))));
guarantee
	 (((!(spec_nextMoveMode_0) & spec_nextMoveMode_1) -> (pREV_aux_4 | pREV_aux_3)));
guarantee
	G (((!(next(spec_nextMoveMode_0)) & next(spec_nextMoveMode_1)) -> (next(pREV_aux_4) | next(pREV_aux_3))));
guarantee
	 ((pREV_aux_1 -> !((!(spec_nextMoveMode_0) & spec_nextMoveMode_1))));
guarantee
	G ((next(pREV_aux_1) -> !((!(next(spec_nextMoveMode_0)) & next(spec_nextMoveMode_1)))));
guarantee
	 ((((pREV_aux_4 & spec_nextMoveMode_0) & !(spec_nextMoveMode_1)) <-> (((((leftMotor_0 & !(leftMotor_1)) & leftMotor_2) & rightMotor_0) & !(rightMotor_1)) & rightMotor_2)));
guarantee
	G ((((next(pREV_aux_4) & next(spec_nextMoveMode_0)) & !(next(spec_nextMoveMode_1))) <-> (((((next(leftMotor_0) & !(next(leftMotor_1))) & next(leftMotor_2)) & next(rightMotor_0)) & !(next(rightMotor_1))) & next(rightMotor_2))));
guarantee
	 ((pREV_aux_3 -> (!(spec_nextMoveMode_0) | spec_nextMoveMode_1)));
guarantee
	G ((next(pREV_aux_3) -> (!(next(spec_nextMoveMode_0)) | next(spec_nextMoveMode_1))));
guarantee
	 (((pREV_aux_4 & pREV_aux_2) <-> (((((leftMotor_0 & leftMotor_1) & !(leftMotor_2)) & rightMotor_0) & rightMotor_1) & !(rightMotor_2))));
guarantee
	G (((next(pREV_aux_4) & next(pREV_aux_2)) <-> (((((next(leftMotor_0) & next(leftMotor_1)) & !(next(leftMotor_2))) & next(rightMotor_0)) & next(rightMotor_1)) & !(next(rightMotor_2)))));
guarantee
	 ((pREV_aux_5 <-> (spec_nextMoveMode_0 & spec_nextMoveMode_1)));
guarantee
	G ((next(pREV_aux_5) <-> (next(spec_nextMoveMode_0) & next(spec_nextMoveMode_1))));
guarantee
	 ((pREV_aux_5 -> (((((!(leftMotor_0) & !(leftMotor_1)) & !(leftMotor_2)) & !(rightMotor_0)) & rightMotor_1) & rightMotor_2)));
guarantee
	G ((next(pREV_aux_5) -> (((((!(next(leftMotor_0)) & !(next(leftMotor_1))) & !(next(leftMotor_2))) & !(next(rightMotor_0))) & next(rightMotor_1)) & next(rightMotor_2))));
guarantee
	 ((pREV_aux_1 -> (((((!(leftMotor_0) & !(leftMotor_1)) & leftMotor_2) & rightMotor_0) & !(rightMotor_1)) & !(rightMotor_2))));
guarantee
	G ((next(pREV_aux_1) -> (((((!(next(leftMotor_0)) & !(next(leftMotor_1))) & next(leftMotor_2)) & next(rightMotor_0)) & !(next(rightMotor_1))) & !(next(rightMotor_2)))));
guarantee
	 ((!((pREV_aux_5 | pREV_aux_1)) -> !((((((leftMotor_0 & !(leftMotor_1)) & !(leftMotor_2)) | ((rightMotor_0 & !(rightMotor_1)) & !(rightMotor_2))) | ((!(leftMotor_0) & leftMotor_1) & leftMotor_2)) | ((!(rightMotor_0) & rightMotor_1) & rightMotor_2)))));
guarantee
	G ((!((next(pREV_aux_5) | next(pREV_aux_1))) -> !((((((next(leftMotor_0) & !(next(leftMotor_1))) & !(next(leftMotor_2))) | ((next(rightMotor_0) & !(next(rightMotor_1))) & !(next(rightMotor_2)))) | ((!(next(leftMotor_0)) & next(leftMotor_1)) & next(leftMotor_2))) | ((!(next(rightMotor_0)) & next(rightMotor_1)) & next(rightMotor_2))))));

assumption
	 (eNV_CONSTRAINT_0_respondsTo_responded);
assumption
	G ((next(eNV_CONSTRAINT_0_respondsTo_responded) <-> (!(obstacle_0) | (eNV_CONSTRAINT_0_respondsTo_responded & !((spec_nextMoveMode_0 | spec_nextMoveMode_1))))));
assumption
	 (!(pREV_aux_1));
assumption
	G ((next(pREV_aux_1) <-> (spec_nextMoveMode_0 & spec_nextMoveMode_1)));
assumption
	 (!(pREV_aux_2));
assumption
	G ((next(pREV_aux_2) <-> pREV_aux_1));
assumption
	 (!(pREV_aux_3));
assumption
	G ((next(pREV_aux_3) <-> (!(spec_nextMoveMode_0) & spec_nextMoveMode_1)));
assumption
	 (!(pREV_aux_4));
assumption
	G ((next(pREV_aux_4) <-> (!(spec_nextMoveMode_0) & !(spec_nextMoveMode_1))));
assumption
	 (!(pREV_aux_5));
assumption
	G ((next(pREV_aux_5) <-> (spec_nextMoveMode_0 & !(spec_nextMoveMode_1))));

