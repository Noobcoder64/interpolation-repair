
module GyroLTLVar3_702_GyroAspect_2

env boolean frontDistSense_0;
env boolean backDistSense_0;
env boolean isReady;

sys boolean balancer_0;
sys boolean balancer_1;
sys boolean balancer_2;

env boolean eNV_CONSTRAINT_0_respondsTo_responded;
env boolean eNV_CONSTRAINT_1_respondsTo_responded;
env boolean eNV_CONSTRAINT_2_respondsTo_responded;
env boolean eNV_CONSTRAINT_3_respondsTo_responded;

assumption
	 (!(isReady));
assumption
	 ((!(frontDistSense_0) & !(backDistSense_0)));
assumption
	G ((isReady -> next(isReady)));
assumption
	GF (eNV_CONSTRAINT_0_respondsTo_responded);
assumption
	GF (eNV_CONSTRAINT_1_respondsTo_responded);
assumption
	GF (eNV_CONSTRAINT_2_respondsTo_responded);
assumption
	GF (eNV_CONSTRAINT_3_respondsTo_responded);

guarantee
	 (((!(balancer_0) & !(balancer_1)) & !(balancer_2)));
guarantee
	GF (((!(balancer_0) & !(balancer_1)) & balancer_2));
guarantee
	GF ((((balancer_0 & !(balancer_1)) & !(balancer_2)) | ((!(balancer_0) & balancer_1) & balancer_2)));
guarantee
	 (!(((balancer_0 & !(balancer_1)) & balancer_2)));
guarantee
	G (!(((next(balancer_0) & !(next(balancer_1))) & next(balancer_2))));
guarantee
	 (!(((balancer_0 & balancer_1) & !(balancer_2))));
guarantee
	G (!(((next(balancer_0) & next(balancer_1)) & !(next(balancer_2)))));
guarantee
	 (!(((balancer_0 & balancer_1) & balancer_2)));
guarantee
	G (!(((next(balancer_0) & next(balancer_1)) & next(balancer_2))));
guarantee
	 ((!(isReady) -> ((!(balancer_0) & !(balancer_1)) & !(balancer_2))));
guarantee
	G ((!(next(isReady)) -> ((!(next(balancer_0)) & !(next(balancer_1))) & !(next(balancer_2)))));
guarantee
	 ((((!(balancer_0) & !(balancer_1)) & balancer_2) -> !(frontDistSense_0)));
guarantee
	G ((((!(next(balancer_0)) & !(next(balancer_1))) & next(balancer_2)) -> !(next(frontDistSense_0))));
guarantee
	 ((((!(balancer_0) & balancer_1) & !(balancer_2)) -> !(backDistSense_0)));
guarantee
	G ((((!(next(balancer_0)) & next(balancer_1)) & !(next(balancer_2))) -> !(next(backDistSense_0))));
guarantee
	 (((isReady & !(frontDistSense_0)) -> ((!(balancer_0) & !(balancer_1)) & balancer_2)));
guarantee
	G (((next(isReady) & !(next(frontDistSense_0))) -> ((!(next(balancer_0)) & !(next(balancer_1))) & next(balancer_2))));

assumption
	 (eNV_CONSTRAINT_0_respondsTo_responded);
assumption
	G ((next(eNV_CONSTRAINT_0_respondsTo_responded) <-> ((!(!((((!(balancer_0) & !(balancer_1)) & balancer_2) | ((!(balancer_0) & !(balancer_1)) & !(balancer_2))))) | !(frontDistSense_0)) | (eNV_CONSTRAINT_0_respondsTo_responded & !(!((((!(balancer_0) & !(balancer_1)) & balancer_2) | ((!(balancer_0) & !(balancer_1)) & !(balancer_2)))))))));
assumption
	 (eNV_CONSTRAINT_1_respondsTo_responded);
assumption
	G ((next(eNV_CONSTRAINT_1_respondsTo_responded) <-> ((!(!((((!(balancer_0) & balancer_1) & !(balancer_2)) | ((!(balancer_0) & !(balancer_1)) & !(balancer_2))))) | !(backDistSense_0)) | (eNV_CONSTRAINT_1_respondsTo_responded & !(!((((!(balancer_0) & balancer_1) & !(balancer_2)) | ((!(balancer_0) & !(balancer_1)) & !(balancer_2)))))))));
assumption
	 (eNV_CONSTRAINT_2_respondsTo_responded);
assumption
	G ((next(eNV_CONSTRAINT_2_respondsTo_responded) <-> ((!(((!(balancer_0) & !(balancer_1)) & balancer_2)) | frontDistSense_0) | (eNV_CONSTRAINT_2_respondsTo_responded & !(((!(balancer_0) & !(balancer_1)) & balancer_2))))));
assumption
	 (eNV_CONSTRAINT_3_respondsTo_responded);
assumption
	G ((next(eNV_CONSTRAINT_3_respondsTo_responded) <-> ((!(((!(balancer_0) & balancer_1) & !(balancer_2))) | backDistSense_0) | (eNV_CONSTRAINT_3_respondsTo_responded & !(((!(balancer_0) & balancer_1) & !(balancer_2)))))));

