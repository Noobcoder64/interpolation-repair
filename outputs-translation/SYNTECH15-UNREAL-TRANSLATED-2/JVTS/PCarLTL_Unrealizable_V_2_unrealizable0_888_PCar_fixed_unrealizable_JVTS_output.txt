Using BDD Package: CUDDFactory, Version: CUDD 3.0
Using BDD Package: CUDDFactory, Version: CUDD 3.0
0    [main] ERROR xt.validation.ResourceValidatorImpl  - The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
java.util.MissingResourceException: The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
	at org.eclipse.emf.common.util.DelegatingResourceLocator.delegatedGetString(DelegatingResourceLocator.java:586)
	at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:450)
	at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:605)
	at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:597)
	at org.eclipse.emf.ecore.util.Diagnostician.createDefaultDiagnostic(Diagnostician.java:110)
	at org.eclipse.emf.ecore.util.Diagnostician.validate(Diagnostician.java:139)
	at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:147)
	at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:125)
	at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:91)
	at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getSpectraModel(SpectraInputProviderNoIDE.java:166)
	at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getGameInput(SpectraInputProviderNoIDE.java:109)
	at tau.smlab.syntech.Spectra.cli.SpecRepair.executeAlgorithm(SpecRepair.java:71)
	at tau.smlab.syntech.Spectra.cli.SpecRepair.main(SpecRepair.java:58)
Executing "inputs-translation/SYNTECH15-UNREAL-TRANSLATED-2/PCarLTL_Unrealizable_V_2_unrealizable0_888_PCar_fixed_unrealizable.spectra".
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 539
Nodes table size: 3066
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 783
Nodes table size: 5110
Checking: 0:1, 1 elements
Checking: 1:2, 1 elements
Checking: 0:1, 1 elements
Checking: 1:2, 1 elements
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:1, 1 elements
check: return false - part is in neg set num 1
Checking: 1:2, 1 elements
check: return false - part is in neg set num 1
Checking: 2:3, 1 elements
check: return false - part is in neg set num 2
Checking: 0:0 and 1:3, 2 elements
Checking: 0:1, 1 elements
check: return false - part is in neg set num 1
Checking: 1:2, 1 elements
check: return false - part is in neg set num 2
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:1, 1 elements
check: return false - part is in neg set num 1
Checking: 1:2, 1 elements
check: return false - part is in neg set num 1
Checking: 2:3, 1 elements
check: return false - part is in neg set num 2
Checking: 0:0 and 1:3, 2 elements
Checking: 0:1, 1 elements
check: return false - part is in neg set num 1
Checking: 1:2, 1 elements
check: return false - part is in neg set num 2
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:1, 1 elements
check: return false - part is in neg set num 1
Checking: 1:2, 1 elements
check: return false - part is in neg set num 1
Checking: 2:3, 1 elements
check: return false - part is in neg set num 2
Checking: 0:0 and 1:3, 2 elements
Checking: 0:1, 1 elements
check: return false - part is in neg set num 1
Checking: 1:2, 1 elements
check: return false - part is in neg set num 2
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 20978
Nodes table size: 49056
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 20998
Nodes table size: 50078
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21018
Nodes table size: 50078
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21032
Nodes table size: 51100
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21039
Nodes table size: 51100
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21036
Nodes table size: 51100
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21045
Nodes table size: 51100
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21107
Nodes table size: 52122
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21116
Nodes table size: 52122
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21125
Nodes table size: 52122
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21120
Nodes table size: 52122
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21138
Nodes table size: 52122
Found 12 repair suggestions
Number of well-separated suggestions is 0
Maximum variables in the best repair is 12
Maximum Node count: 14

Repair #1 [

//Justices//

//Transitions//
asm G (obstacle_0=false -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(spec_policy_0=false -> spec_policy_1=true)) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=false))) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true))) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> spec_policy_1=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> spec_policy_1=true))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> spec_policy_1=true)))) and
	(sideSense_0=true -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(steer_1=false -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))) and
						(steer_1=true -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true))))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true))))));

//Initial//

]

Repair #2 [

//Justices//

//Transitions//
asm G (obstacle_0=false -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(spec_policy_0=false -> spec_policy_1=true)) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=false))) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true))) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> spec_policy_1=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> spec_policy_1=true))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> spec_policy_1=true)))) and
	(sideSense_0=true -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(steer_1=false -> 
							(spec_policy_0=false -> spec_policy_1=true)) and
						(steer_1=true -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true))))) and
			(throttle_0=true -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true)) and
							(parkCommand_1=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true)) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> spec_policy_1=true))))));

//Initial//

]

Repair #3 [

//Justices//

//Transitions//
asm G (obstacle_0=false -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(spec_policy_0=false -> spec_policy_1=true)) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=false))) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true))) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> spec_policy_1=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> spec_policy_1=true))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> spec_policy_1=true)))) and
	(sideSense_0=true -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(steer_1=false -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))) and
						(steer_1=true -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true))))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true)))))) and
(obstacle_0=true -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(spec_policy_0=false -> spec_policy_1=true)) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true))))) and
			(throttle_0=true -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true)) and
							(parkCommand_1=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true)) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> spec_policy_1=true))))));

//Initial//

]

Repair #4 [

//Justices//

//Transitions//
asm G (obstacle_0=false -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(spec_policy_0=false -> 
							(spec_policy_1=false -> spec_policy_2=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> 
						(spec_policy_1=false -> spec_policy_2=true)))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true))))) and
	(sideSense_0=true -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(steer_1=false -> 
							(spec_policy_0=false -> spec_policy_1=true)) and
						(steer_1=true -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true))))) and
			(throttle_0=true -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true)) and
							(parkCommand_1=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true)) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> spec_policy_1=true)))))) and
(obstacle_0=true -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(spec_policy_0=false -> 
						(spec_policy_1=false -> spec_policy_2=true))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true))))));

//Initial//

]

Repair #5 [

//Justices//

//Transitions//
asm G (obstacle_0=false -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(spec_policy_0=false -> 
							(spec_policy_1=false -> spec_policy_2=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> 
						(spec_policy_1=false -> spec_policy_2=true)))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true))))) and
	(sideSense_0=true -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(steer_1=false -> 
							(spec_policy_0=false -> spec_policy_1=true)) and
						(steer_1=true -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true))))) and
			(throttle_0=true -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true)) and
							(parkCommand_1=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true)) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> spec_policy_1=true)))))) and
(obstacle_0=true -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(spec_policy_0=false -> 
						(spec_policy_1=false -> spec_policy_2=true))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true))))));

//Initial//

]

Repair #6 [

//Justices//

//Transitions//
asm G (obstacle_0=false -> 
	(sideSense_0=true -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(steer_1=false -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))) and
						(steer_1=true -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true))))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true))))));
asm G (obstacle_0=true -> 
	(sideSense_0=true -> 
		(next(sideSense_0)=false -> 
			(parkResult_0=false -> 
				(next(parkResult_0)=false -> 
					(throttle_0=false -> 
						(throttle_1=true -> 
							(steer_0=false -> 
								(parkCommand_0=false -> 
									(parkCommand_1=true -> 
										(spec_policy_0=false -> 
											(spec_policy_1=false -> spec_policy_2=true))))) and
							(steer_0=true -> 
								(steer_1=false -> 
									(parkCommand_0=false -> 
										(parkCommand_1=true -> 
											(spec_policy_0=false -> 
												(spec_policy_1=false -> spec_policy_2=true)))))))))))));

//Initial//

]

Repair #7 [

//Justices//

//Transitions//
asm G (obstacle_0=false -> 
	(sideSense_0=true -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(steer_1=false -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))) and
						(steer_1=true -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true))))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true))))));
asm G (obstacle_0=false -> 
	(next(obstacle_0)=false -> 
		(sideSense_0=false -> 
			(next(sideSense_0)=false -> 
				(parkResult_0=false -> 
					(next(parkResult_0)=false -> 
						(throttle_0=false -> 
							(throttle_1=false -> 
								(steer_0=true -> 
									(steer_1=false -> 
										(parkCommand_0=false -> 
											(parkCommand_1=false -> 
												(spec_policy_0=false -> 
													(spec_policy_1=false -> spec_policy_2=true))))))))))))) and
	(next(obstacle_0)=true -> 
		(sideSense_0=false -> 
			(parkResult_0=false -> 
				(next(parkResult_0)=false -> 
					(throttle_0=false -> 
						(throttle_1=false -> 
							(steer_0=true -> 
								(steer_1=false -> 
									(parkCommand_0=false -> 
										(parkCommand_1=false -> 
											(spec_policy_0=false -> 
												(spec_policy_1=false -> spec_policy_2=true))))))))))))) and
(obstacle_0=true -> 
	(next(obstacle_0)=false -> 
		(sideSense_0=false -> 
			(next(sideSense_0)=false -> 
				(parkResult_0=false -> 
					(next(parkResult_0)=false -> 
						(throttle_0=false -> 
							(throttle_1=true -> 
								(steer_0=false -> 
									(parkCommand_0=false -> 
										(parkCommand_1=true -> 
											(spec_policy_0=false -> spec_policy_1=true)))) and
								(steer_0=true -> 
									(steer_1=false -> 
										(parkCommand_0=false -> 
											(parkCommand_1=true -> 
												(spec_policy_0=false -> spec_policy_1=true))))))) and
						(throttle_0=true -> 
							(throttle_1=false -> 
								(steer_0=false -> 
									(parkCommand_0=false -> 
										(parkCommand_1=true -> 
											(spec_policy_0=false -> 
												(spec_policy_1=false -> spec_policy_2=false))))) and
								(steer_0=true -> 
									(steer_1=false -> 
										(parkCommand_0=false -> 
											(parkCommand_1=true -> 
												(spec_policy_0=false -> 
													(spec_policy_1=false -> spec_policy_2=false))))))))))))) and
	(next(obstacle_0)=true -> 
		(sideSense_0=false -> 
			(parkResult_0=false -> 
				(next(parkResult_0)=false -> 
					(throttle_0=false -> 
						(throttle_1=true -> 
							(steer_0=false -> 
								(parkCommand_0=false -> 
									(parkCommand_1=true -> 
										(spec_policy_0=false -> spec_policy_1=true)))) and
							(steer_0=true -> 
								(steer_1=false -> 
									(parkCommand_0=false -> 
										(parkCommand_1=true -> 
											(spec_policy_0=false -> spec_policy_1=true))))))) and
					(throttle_0=true -> 
						(throttle_1=false -> 
							(steer_0=false -> 
								(parkCommand_0=false -> 
									(parkCommand_1=true -> 
										(spec_policy_0=false -> 
											(spec_policy_1=false -> spec_policy_2=false))))) and
							(steer_0=true -> 
								(steer_1=false -> 
									(parkCommand_0=false -> 
										(parkCommand_1=true -> 
											(spec_policy_0=false -> 
												(spec_policy_1=false -> spec_policy_2=false)))))))))))));

//Initial//

]

Repair #8 [

//Justices//

//Transitions//
asm G (obstacle_0=false -> 
	(sideSense_0=true -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(steer_1=false -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))) and
						(steer_1=true -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true))))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true))))));
asm G (obstacle_0=false -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(spec_policy_0=false -> 
							(spec_policy_1=false -> spec_policy_2=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> 
						(spec_policy_1=false -> spec_policy_2=true)))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true)))))) and
(obstacle_0=true -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(spec_policy_0=false -> spec_policy_1=true)) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true))))) and
			(throttle_0=true -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true)) and
							(parkCommand_1=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true)) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> spec_policy_1=true))))) and
	(sideSense_0=true -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(spec_policy_0=false -> 
						(spec_policy_1=false -> spec_policy_2=true))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true))))));

//Initial//

]

Repair #9 [

//Justices//

//Transitions//
asm G (obstacle_0=false -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(spec_policy_0=false -> spec_policy_1=true)) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=false))) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true))) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> spec_policy_1=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> spec_policy_1=true))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> spec_policy_1=true)))) and
	(sideSense_0=true -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(steer_1=false -> 
							(spec_policy_0=false -> spec_policy_1=true)) and
						(steer_1=true -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true))))) and
			(throttle_0=true -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true)) and
							(parkCommand_1=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true)) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> spec_policy_1=true)))))) and
(obstacle_0=true -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(spec_policy_0=false -> 
						(spec_policy_1=false -> spec_policy_2=true))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true))))));

//Initial//

]

Repair #10 [

//Justices//

//Transitions//
asm G (obstacle_0=false -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(spec_policy_0=false -> 
							(spec_policy_1=false -> spec_policy_2=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> 
						(spec_policy_1=false -> spec_policy_2=true)))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true))))) and
	(sideSense_0=true -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(steer_1=false -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))) and
						(steer_1=true -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true))))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true)))))) and
(obstacle_0=true -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(spec_policy_0=false -> spec_policy_1=true)) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true))))) and
			(throttle_0=true -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true)) and
							(parkCommand_1=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true)) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> spec_policy_1=true))))));

//Initial//

]

Repair #11 [

//Justices//

//Transitions//
asm G (obstacle_0=false -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(spec_policy_0=false -> 
							(spec_policy_1=false -> spec_policy_2=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> 
						(spec_policy_1=false -> spec_policy_2=true)))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true))))) and
	(sideSense_0=true -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(steer_1=false -> 
							(spec_policy_0=false -> spec_policy_1=true)) and
						(steer_1=true -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true))))) and
			(throttle_0=true -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true)) and
							(parkCommand_1=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true)) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> spec_policy_1=true))))));

//Initial//

]

Repair #12 [

//Justices//

//Transitions//
asm G (obstacle_0=false -> 
	(sideSense_0=false -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(spec_policy_0=false -> 
							(spec_policy_1=false -> spec_policy_2=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> 
						(spec_policy_1=false -> spec_policy_2=true)))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true))))) and
	(sideSense_0=true -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(steer_1=false -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))) and
						(steer_1=true -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true))))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true))))) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(steer_1=true -> 
							(spec_policy_0=false -> 
								(spec_policy_1=false -> spec_policy_2=true)))))) and
			(throttle_0=true -> 
				(spec_policy_0=false -> 
					(spec_policy_1=false -> spec_policy_2=true)))))) and
(obstacle_0=true -> 
	(sideSense_0=true -> 
		(parkResult_0=false -> 
			(throttle_0=false -> 
				(throttle_1=false -> 
					(spec_policy_0=false -> spec_policy_1=true)) and
				(throttle_1=true -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true))))) and
			(throttle_0=true -> 
				(throttle_1=false -> 
					(steer_0=false -> 
						(parkCommand_0=false -> 
							(parkCommand_1=false -> 
								(spec_policy_0=false -> spec_policy_1=true)) and
							(parkCommand_1=true -> 
								(spec_policy_0=false -> 
									(spec_policy_1=false -> spec_policy_2=true)))) and
						(parkCommand_0=true -> 
							(spec_policy_0=false -> spec_policy_1=true))) and
					(steer_0=true -> 
						(steer_1=false -> 
							(parkCommand_0=false -> 
								(parkCommand_1=false -> 
									(spec_policy_0=false -> spec_policy_1=true)) and
								(parkCommand_1=true -> 
									(spec_policy_0=false -> 
										(spec_policy_1=false -> spec_policy_2=true)))) and
							(parkCommand_0=true -> 
								(spec_policy_0=false -> spec_policy_1=true))) and
						(steer_1=true -> 
							(spec_policy_0=false -> spec_policy_1=true)))) and
				(throttle_1=true -> 
					(spec_policy_0=false -> spec_policy_1=true))))));

//Initial//

]

runtime of repair operation was 517 in millisecs.

