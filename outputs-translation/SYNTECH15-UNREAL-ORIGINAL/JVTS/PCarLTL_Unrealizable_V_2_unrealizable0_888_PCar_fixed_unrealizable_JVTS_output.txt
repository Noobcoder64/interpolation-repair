Using BDD Package: CUDDFactory, Version: CUDD 3.0
Using BDD Package: CUDDFactory, Version: CUDD 3.0
0    [main] ERROR xt.validation.ResourceValidatorImpl  - The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
java.util.MissingResourceException: The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
	at org.eclipse.emf.common.util.DelegatingResourceLocator.delegatedGetString(DelegatingResourceLocator.java:586)
	at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:450)
	at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:605)
	at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:597)
	at org.eclipse.emf.ecore.util.Diagnostician.createDefaultDiagnostic(Diagnostician.java:110)
	at org.eclipse.emf.ecore.util.Diagnostician.validate(Diagnostician.java:139)
	at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:147)
	at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:125)
	at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:91)
	at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getSpectraModel(SpectraInputProviderNoIDE.java:166)
	at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getGameInput(SpectraInputProviderNoIDE.java:109)
	at tau.smlab.syntech.Spectra.cli.SpecRepair.executeAlgorithm(SpecRepair.java:71)
	at tau.smlab.syntech.Spectra.cli.SpecRepair.main(SpecRepair.java:58)
Executing "inputs-translation/SYNTECH15-UNREAL-ORIGINAL/PCarLTL_Unrealizable_V_2_unrealizable0_888_PCar_fixed_unrealizable.spectra".
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 665
Nodes table size: 4088
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 1332
Nodes table size: 7154
Checking: 0:1, 1 elements
Checking: 1:2, 1 elements
Checking: 0:1, 1 elements
Checking: 1:2, 1 elements
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:1, 1 elements
check: return false - part is in neg set num 1
Checking: 1:2, 1 elements
check: return false - part is in neg set num 1
Checking: 2:3, 1 elements
check: return false - part is in neg set num 2
Checking: 0:0 and 1:3, 2 elements
Checking: 0:1, 1 elements
check: return false - part is in neg set num 1
Checking: 1:2, 1 elements
check: return false - part is in neg set num 2
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:1, 1 elements
check: return false - part is in neg set num 1
Checking: 1:2, 1 elements
check: return false - part is in neg set num 1
Checking: 2:3, 1 elements
check: return false - part is in neg set num 2
Checking: 0:0 and 1:3, 2 elements
Checking: 0:1, 1 elements
check: return false - part is in neg set num 1
Checking: 1:2, 1 elements
check: return false - part is in neg set num 2
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:1, 1 elements
check: return false - part is in neg set num 1
Checking: 1:2, 1 elements
check: return false - part is in neg set num 1
Checking: 2:3, 1 elements
check: return false - part is in neg set num 2
Checking: 0:0 and 1:3, 2 elements
Checking: 0:1, 1 elements
check: return false - part is in neg set num 1
Checking: 1:2, 1 elements
check: return false - part is in neg set num 2
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
Checking: 0:2, 2 elements
Checking: 2:3, 1 elements
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21009
Nodes table size: 49056
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21063
Nodes table size: 50078
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21084
Nodes table size: 50078
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21099
Nodes table size: 51100
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21107
Nodes table size: 51100
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21109
Nodes table size: 51100
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21128
Nodes table size: 52122
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21374
Nodes table size: 52122
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21384
Nodes table size: 52122
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21389
Nodes table size: 52122
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21382
Nodes table size: 53144
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 21399
Nodes table size: 53144
Found 12 repair suggestions
Number of well-separated suggestions is 0
Maximum variables in the best repair is 7
Maximum Node count: 25

Repair #1 [

//Justices//

//Transitions//
asm G (obstacle=CLEAR -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!={SEEKING, MEASURING})) and
				(steer=LEFT -> 
					(parkCommand!={} and spec_policy!={SEEKING, MEASURING})) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!=MEASURING) and
					(parkCommand=STOP -> spec_policy!={SEEKING, MEASURING}) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!={SEEKING, MEASURING}))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!={SEEKING, MEASURING}))))) and
	(sideSense=BLOCKED -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=LEFT -> 
					(parkCommand=START -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING)) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))))));

//Initial//

]

Repair #2 [

//Justices//

//Transitions//
asm G (obstacle=CLEAR -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!={SEEKING, MEASURING})) and
				(steer=LEFT -> 
					(parkCommand!={} and spec_policy!={SEEKING, MEASURING})) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!=MEASURING) and
					(parkCommand=STOP -> spec_policy!={SEEKING, MEASURING}) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!={SEEKING, MEASURING}))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!={SEEKING, MEASURING}))))) and
	(sideSense=BLOCKED -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!={SEEKING, MEASURING})) and
				(steer=LEFT -> 
					(parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
					(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING})) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
					(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=STOP -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))))));

//Initial//

]

Repair #3 [

//Justices//

//Transitions//
asm G (obstacle=CLEAR -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!={SEEKING, MEASURING})) and
				(steer=LEFT -> 
					(parkCommand!={} and spec_policy!={SEEKING, MEASURING})) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!=MEASURING) and
					(parkCommand=STOP -> spec_policy!={SEEKING, MEASURING}) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!={SEEKING, MEASURING}))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!={SEEKING, MEASURING}))))) and
	(sideSense=BLOCKED -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=LEFT -> 
					(parkCommand=START -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING)) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING)))))) and
(obstacle=BLOCKED -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!={SEEKING, MEASURING}))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=STOP -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))))));

//Initial//

]

Repair #4 [

//Justices//

//Transitions//
asm G (obstacle=CLEAR -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=LEFT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=CENTER -> 
					(parkCommand=STOP -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))))) and
	(sideSense=BLOCKED -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!={SEEKING, MEASURING})) and
				(steer=LEFT -> 
					(parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
					(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING})) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
					(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=STOP -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING})))))) and
(obstacle=BLOCKED -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))))));

//Initial//

]

Repair #5 [

//Justices//

//Transitions//
asm G (obstacle=CLEAR -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=LEFT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=CENTER -> 
					(parkCommand=STOP -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))))) and
	(sideSense=BLOCKED -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!={SEEKING, MEASURING})) and
				(steer=LEFT -> 
					(parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
					(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING})) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
					(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=STOP -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING})))))) and
(obstacle=BLOCKED -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))))));

//Initial//

]

Repair #6 [

//Justices//

//Transitions//
asm G (obstacle=CLEAR -> 
	(sideSense=BLOCKED -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=LEFT -> 
					(parkCommand=START -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING)) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))))));
asm G (obstacle=BLOCKED -> 
	(sideSense=BLOCKED -> 
		(next(sideSense)=CLEAR -> 
			(parkResult=NA -> 
				(next(parkResult)=NA -> 
					(throttle=BWD -> 
						(parkCommand=STOP -> spec_policy!=SEEKING)))))));

//Initial//

]

Repair #7 [

//Justices//

//Transitions//
asm G (obstacle=CLEAR -> 
	(sideSense=BLOCKED -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=LEFT -> 
					(parkCommand=START -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING)) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))))));
asm G (obstacle=CLEAR -> 
	(next(obstacle)=CLEAR -> 
		(sideSense=CLEAR -> 
			(next(sideSense)=CLEAR -> 
				(parkResult=NA -> 
					(next(parkResult)=NA -> 
						(throttle=FWD -> 
							(steer=CENTER -> 
								(parkCommand=START -> spec_policy!=SEEKING)))))))) and
	(next(obstacle)=BLOCKED -> 
		(sideSense=CLEAR -> 
			(parkResult=NA -> 
				(next(parkResult)=NA -> 
					(throttle=FWD -> 
						(steer=CENTER -> 
							(parkCommand=START -> spec_policy!=SEEKING)))))))) and
(obstacle=BLOCKED -> 
	(next(obstacle)=CLEAR -> 
		(sideSense=CLEAR -> 
			(next(sideSense)=CLEAR -> 
				(parkResult=NA -> 
					(next(parkResult)=NA -> 
						(throttle=BWD -> 
							(steer!={} and (parkCommand=STOP -> spec_policy!={SEEKING, MEASURING}))) and
						(throttle=STOP -> 
							(steer!={} and (parkCommand=STOP -> spec_policy!=MEASURING)))))))) and
	(next(obstacle)=BLOCKED -> 
		(sideSense=CLEAR -> 
			(parkResult=NA -> 
				(next(parkResult)=NA -> 
					(throttle=BWD -> 
						(steer!={} and (parkCommand=STOP -> spec_policy!={SEEKING, MEASURING}))) and
					(throttle=STOP -> 
						(steer!={} and (parkCommand=STOP -> spec_policy!=MEASURING))))))));

//Initial//

]

Repair #8 [

//Justices//

//Transitions//
asm G (obstacle=CLEAR -> 
	(sideSense=BLOCKED -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=LEFT -> 
					(parkCommand=START -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING)) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))))));
asm G (obstacle=CLEAR -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=LEFT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=CENTER -> 
					(parkCommand=STOP -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING)))))) and
(obstacle=BLOCKED -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!={SEEKING, MEASURING}))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=STOP -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))))) and
	(sideSense=BLOCKED -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))))));

//Initial//

]

Repair #9 [

//Justices//

//Transitions//
asm G (obstacle=CLEAR -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!={SEEKING, MEASURING})) and
				(steer=LEFT -> 
					(parkCommand!={} and spec_policy!={SEEKING, MEASURING})) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!=MEASURING) and
					(parkCommand=STOP -> spec_policy!={SEEKING, MEASURING}) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!={SEEKING, MEASURING}))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!={SEEKING, MEASURING}))))) and
	(sideSense=BLOCKED -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!={SEEKING, MEASURING})) and
				(steer=LEFT -> 
					(parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
					(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING})) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
					(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=STOP -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING})))))) and
(obstacle=BLOCKED -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))))));

//Initial//

]

Repair #10 [

//Justices//

//Transitions//
asm G (obstacle=CLEAR -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=LEFT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=CENTER -> 
					(parkCommand=STOP -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))))) and
	(sideSense=BLOCKED -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=LEFT -> 
					(parkCommand=START -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING)) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING)))))) and
(obstacle=BLOCKED -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!={SEEKING, MEASURING}))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=STOP -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))))));

//Initial//

]

Repair #11 [

//Justices//

//Transitions//
asm G (obstacle=CLEAR -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=LEFT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=CENTER -> 
					(parkCommand=STOP -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))))) and
	(sideSense=BLOCKED -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!={SEEKING, MEASURING})) and
				(steer=LEFT -> 
					(parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
					(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING})) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
					(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=STOP -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))))));

//Initial//

]

Repair #12 [

//Justices//

//Transitions//
asm G (obstacle=CLEAR -> 
	(sideSense=CLEAR -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=LEFT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=CENTER -> 
					(parkCommand=STOP -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING))))) and
	(sideSense=BLOCKED -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer=RIGHT -> 
					(parkCommand!={} and spec_policy!=SEEKING)) and
				(steer=LEFT -> 
					(parkCommand=START -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING)) and
				(steer=CENTER -> 
					(parkCommand=START -> spec_policy!=SEEKING) and
					(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!=SEEKING))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand!={} and spec_policy!=SEEKING)))))) and
(obstacle=BLOCKED -> 
	(sideSense=BLOCKED -> 
		(parkResult=NA -> 
			(throttle=FWD -> 
				(steer!={} and (parkCommand!={} and spec_policy!={SEEKING, MEASURING}))) and
			(throttle=BWD -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))) and
			(throttle=STOP -> 
				(steer!={} and (parkCommand=START -> spec_policy!={SEEKING, MEASURING}) and
				(parkCommand=STOP -> spec_policy!=SEEKING) and
				(parkCommand=CHECK -> spec_policy!={SEEKING, MEASURING}))))));

//Initial//

]

runtime of repair operation was 547 in millisecs.

