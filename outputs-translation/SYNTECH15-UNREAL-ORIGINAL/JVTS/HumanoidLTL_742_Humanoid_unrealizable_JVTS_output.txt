Using BDD Package: CUDDFactory, Version: CUDD 3.0
Using BDD Package: CUDDFactory, Version: CUDD 3.0
0    [main] ERROR xt.validation.ResourceValidatorImpl  - The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
java.util.MissingResourceException: The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
	at org.eclipse.emf.common.util.DelegatingResourceLocator.delegatedGetString(DelegatingResourceLocator.java:586)
	at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:450)
	at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:605)
	at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:597)
	at org.eclipse.emf.ecore.util.Diagnostician.createDefaultDiagnostic(Diagnostician.java:110)
	at org.eclipse.emf.ecore.util.Diagnostician.validate(Diagnostician.java:139)
	at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:147)
	at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:125)
	at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:91)
	at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getSpectraModel(SpectraInputProviderNoIDE.java:166)
	at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getGameInput(SpectraInputProviderNoIDE.java:109)
	at tau.smlab.syntech.Spectra.cli.SpecRepair.executeAlgorithm(SpecRepair.java:71)
	at tau.smlab.syntech.Spectra.cli.SpecRepair.main(SpecRepair.java:58)
Executing "inputs-translation/SYNTECH15-UNREAL-ORIGINAL/HumanoidLTL_742_Humanoid_unrealizable.spectra".
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 793
Nodes table size: 4088
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 1009
Nodes table size: 7154
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 5287
Nodes table size: 18396
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 5273
Nodes table size: 18396
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 5487
Nodes table size: 18396
Found 3 repair suggestions
Number of well-separated suggestions is 1
Maximum variables in the best repair is 6
Maximum Node count: 32

Repair #1 [

//Justices//

//Transitions//
asm G (Obstacle=BLOCKED -> 
	(LeftMotor=FWD -> 
		(RightMotor=FWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=BWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0)) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=STOP -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=TURN_BWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=CALIB_TURN -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=CALIB_FWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0)))) and
	(LeftMotor=BWD -> 
		(RightMotor=FWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0)) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=BWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=STOP -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=TURN_FWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=CALIB_TURN -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=CALIB_FWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0)))) and
	(LeftMotor=STOP -> 
		(RightMotor!={} and (nextMoveMode=BWD -> 
			(specState=Q0 -> turnState!=T0)))) and
	(LeftMotor=TURN_FWD -> 
		(RightMotor!={} and (nextMoveMode=BWD -> 
			(specState=Q0 -> turnState!=T0)))) and
	(LeftMotor=TURN_BWD -> 
		(RightMotor!={} and (nextMoveMode=BWD -> 
			(specState=Q0 -> turnState!=T0)))) and
	(LeftMotor=CALIB_TURN -> 
		(RightMotor=FWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=BWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=STOP -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=TURN_FWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=TURN_BWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=CALIB_FWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0)))) and
	(LeftMotor=CALIB_FWD -> 
		(RightMotor=FWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=BWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=STOP -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=TURN_FWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=TURN_BWD -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=CALIB_TURN -> 
			(nextMoveMode=BWD -> 
				(specState=Q0 -> turnState!=T0)))));

//Initial//

]

Repair #2 [

//Justices//
asm GF (Obstacle=CLEAR -> 
	(LeftMotor=FWD -> 
		(RightMotor=TURN_FWD -> 
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T1))))) and
(Obstacle=BLOCKED -> 
	(LeftMotor=FWD -> 
		(RightMotor=FWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=STOP -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=TURN_FWD -> 
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T2))) and
		(RightMotor=TURN_BWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=CALIB_TURN -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=CALIB_FWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0)))) and
	(LeftMotor=BWD -> 
		(RightMotor=BWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=STOP -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=TURN_FWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=TURN_BWD -> 
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T2))) and
		(RightMotor=CALIB_TURN -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=CALIB_FWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0)))) and
	(LeftMotor=STOP -> 
		(RightMotor!={} and (nextMoveMode=BWD -> 
			turnState!=T0) and
		(nextMoveMode=TURN_LEFT -> 
			(specState=Q0 -> turnState!=T0)))) and
	(LeftMotor=TURN_FWD -> 
		(RightMotor!={} and (nextMoveMode=BWD -> 
			turnState!=T0) and
		(nextMoveMode=TURN_LEFT -> 
			(specState=Q0 -> turnState!=T0)))) and
	(LeftMotor=TURN_BWD -> 
		(RightMotor!={} and (nextMoveMode=BWD -> 
			turnState!=T0) and
		(nextMoveMode=TURN_LEFT -> 
			(specState=Q0 -> turnState!=T0)))) and
	(LeftMotor=CALIB_TURN -> 
		(RightMotor=FWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=BWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=STOP -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=TURN_FWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=TURN_BWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=CALIB_TURN -> 
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=CALIB_FWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0)))) and
	(LeftMotor=CALIB_FWD -> 
		(RightMotor=FWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=BWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=STOP -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=TURN_FWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=TURN_BWD -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=CALIB_TURN -> 
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T0)))));

//Transitions//

//Initial//

]

Repair #3 [

//Justices//

//Transitions//
asm G (Obstacle=CLEAR -> 
	(LeftMotor=FWD -> 
		(RightMotor=FWD -> 
			(nextMoveMode=FWD -> 
				(specState=Q0 -> turnState!=T1)) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T1))) and
		(RightMotor=STOP -> 
			(nextMoveMode=FWD -> 
				(specState=Q0 -> turnState!=T1)) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T1))) and
		(RightMotor=TURN_FWD -> 
			(nextMoveMode=FWD -> 
				(specState=Q0 -> turnState!=T1))) and
		(RightMotor=TURN_BWD -> 
			(nextMoveMode=FWD -> 
				(specState=Q0 -> turnState!=T1)) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T1))) and
		(RightMotor=CALIB_TURN -> 
			(nextMoveMode=FWD -> 
				(specState=Q0 -> turnState!=T1)) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T1))) and
		(RightMotor=CALIB_FWD -> 
			(nextMoveMode=FWD -> 
				(specState=Q0 -> turnState!=T1)) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T1)))) and
	(LeftMotor=BWD -> 
		(RightMotor=BWD -> 
			(nextMoveMode=FWD -> 
				(specState=Q0 -> turnState!=T1)) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T1))) and
		(RightMotor=STOP -> 
			(nextMoveMode=FWD -> 
				(specState=Q0 -> turnState!=T1)) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T1))) and
		(RightMotor=TURN_FWD -> 
			(nextMoveMode=FWD -> 
				(specState=Q0 -> turnState!=T1)) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T1))) and
		(RightMotor=TURN_BWD -> 
			(nextMoveMode=FWD -> 
				(specState=Q0 -> turnState!=T1)) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T1))) and
		(RightMotor=CALIB_TURN -> 
			(nextMoveMode=FWD -> 
				(specState=Q0 -> turnState!=T1)) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T1))) and
		(RightMotor=CALIB_FWD -> 
			(nextMoveMode=FWD -> 
				(specState=Q0 -> turnState!=T1)) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T1)))) and
	(LeftMotor=STOP -> 
		(RightMotor!={} and (nextMoveMode=FWD -> 
			(specState=Q0 -> turnState!=T1)) and
		(nextMoveMode=TURN_LEFT -> 
			(specState=Q0 -> turnState!=T1)))) and
	(LeftMotor=TURN_FWD -> 
		(RightMotor!={} and (nextMoveMode=FWD -> 
			(specState=Q0 -> turnState!=T1)) and
		(nextMoveMode=TURN_LEFT -> 
			(specState=Q0 -> turnState!=T1)))) and
	(LeftMotor=TURN_BWD -> 
		(RightMotor!={} and (nextMoveMode=FWD -> 
			(specState=Q0 -> turnState!=T1)) and
		(nextMoveMode=TURN_LEFT -> 
			(specState=Q0 -> turnState!=T1)))) and
	(LeftMotor=CALIB_TURN -> 
		(RightMotor!={} and (nextMoveMode=FWD -> 
			(specState=Q0 -> turnState!=T1)) and
		(nextMoveMode=TURN_LEFT -> 
			(specState=Q0 -> turnState!=T1)))) and
	(LeftMotor=CALIB_FWD -> 
		(RightMotor!={} and (nextMoveMode=FWD -> 
			(specState=Q0 -> turnState!=T1)) and
		(nextMoveMode=TURN_LEFT -> 
			(specState=Q0 -> turnState!=T1))))) and
(Obstacle=BLOCKED -> 
	(LeftMotor=FWD -> 
		(RightMotor=FWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=BWD -> 
			(nextMoveMode=FWD -> turnState!=T0)) and
		(RightMotor=STOP -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=TURN_FWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState!=T2))) and
		(RightMotor=TURN_BWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=CALIB_TURN -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=CALIB_FWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0)))) and
	(LeftMotor=BWD -> 
		(RightMotor=FWD -> 
			(nextMoveMode=FWD -> 
				(specState=Q0 -> turnState!=T0))) and
		(RightMotor=BWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=STOP -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=TURN_FWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=TURN_BWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T2))) and
		(RightMotor=CALIB_TURN -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=CALIB_FWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0)))) and
	(LeftMotor=STOP -> 
		(RightMotor!={} and (nextMoveMode=FWD -> 
			specState!=Q0) and
		(nextMoveMode=TURN_LEFT -> 
			(specState=Q0 -> turnState=T0)))) and
	(LeftMotor=TURN_FWD -> 
		(RightMotor!={} and (nextMoveMode=FWD -> 
			specState!=Q0) and
		(nextMoveMode=TURN_LEFT -> 
			(specState=Q0 -> turnState=T0)))) and
	(LeftMotor=TURN_BWD -> 
		(RightMotor!={} and (nextMoveMode=FWD -> 
			specState!=Q0) and
		(nextMoveMode=TURN_LEFT -> 
			(specState=Q0 -> turnState=T0)))) and
	(LeftMotor=CALIB_TURN -> 
		(RightMotor=FWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=BWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=STOP -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=TURN_FWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=TURN_BWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=CALIB_TURN -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=CALIB_FWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0)))) and
	(LeftMotor=CALIB_FWD -> 
		(RightMotor=FWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=BWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=STOP -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=TURN_FWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=TURN_BWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=CALIB_TURN -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=TURN_LEFT -> 
				(specState=Q0 -> turnState=T0))) and
		(RightMotor=CALIB_FWD -> 
			(nextMoveMode=FWD -> 
				specState!=Q0) and
			(nextMoveMode=BWD -> 
				turnState!=T0) and
			(nextMoveMode=TURN_LEFT -> 
				specState!=Q0))));

//Initial//

]

runtime of repair operation was 79 in millisecs.

