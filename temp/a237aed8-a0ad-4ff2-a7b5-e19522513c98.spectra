
module PcarLTL_463_PCar_1

env boolean obstacle_0;
env boolean obstacle_1;
assumption
	G (!(obstacle_0 & obstacle_1));

env boolean sideSense_0;
env boolean sideSense_1;
assumption
	G (!(sideSense_0 & sideSense_1));


sys boolean throttle_0;
sys boolean throttle_1;
guarantee
	G (!(throttle_0 & throttle_1));

sys boolean steer_0;
sys boolean steer_1;
guarantee
	G (!(steer_0 & steer_1));


aux boolean eNV_CONSTRAINT_0_respondsTo_responded;

assumption
	GF (eNV_CONSTRAINT_0_respondsTo_responded);

guarantee
	G (((!obstacle_0 & obstacle_1) -> !((!throttle_0 & !throttle_1))));
guarantee
	G ((((!obstacle_0 & !obstacle_1) & (!sideSense_0 & !sideSense_1)) -> (steer_0 & !steer_1)));
guarantee
	GF (((!throttle_0 & !throttle_1) & (steer_0 & !steer_1)));

guarantee
	 (eNV_CONSTRAINT_0_respondsTo_responded);
guarantee
	G ((next(eNV_CONSTRAINT_0_respondsTo_responded) <-> ((!sideSense_0 & !sideSense_1) | (eNV_CONSTRAINT_0_respondsTo_responded & !((((!throttle_0 & !throttle_1) & (steer_0 & !steer_1)) & (sideSense_0 & !sideSense_1)))))));


assumption
	GF (!(!obstacle_0 & !sideSense_1 & steer_0 & !sideSense_0 & !steer_1 & !throttle_1 & eNV_CONSTRAINT_0_respondsTo_responded & obstacle_1 & throttle_0 & !(obstacle_1 & obstacle_0 & !(sideSense_1 & sideSense_0))));

assumption
	G(!(!(obstacle_1 & obstacle_0) & !obstacle_0 & obstacle_1 & !sideSense_1 & !sideSense_0 & !(sideSense_1 & sideSense_0)));

assumption
	G(!(sideSense_1 & !sideSense_0 & obstacle_1 & !(!obstacle_0 & !(obstacle_1 & obstacle_0) & obstacle_1 & !sideSense_1 & !sideSense_0 & !(sideSense_1 & sideSense_0)) & !obstacle_0));

assumption
	G(!(!(!sideSense_0 & sideSense_1 & obstacle_1 & !(!obstacle_0 & !(obstacle_1 & obstacle_0) & obstacle_1 & !sideSense_1 & !sideSense_0 & !(sideSense_1 & sideSense_0)) & !obstacle_0) & !(obstacle_1 & obstacle_0)));
