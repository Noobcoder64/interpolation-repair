
module ColorSortLTL3_679_ColorSort_fixed_2

env boolean color_0;
env boolean color_1;
env boolean color_2;
assumption
	G (!(color_0 & color_1 & !color_2));
assumption
	G (!(color_0 & color_1 & color_2));

env boolean detect_0;
env boolean detect_1;
env boolean detect_2;
assumption
	G (!(detect_0 & detect_1 & !detect_2));
assumption
	G (!(detect_0 & detect_1 & detect_2));

env boolean ack_ver_0;

env boolean ack_hor_0;

env boolean ack_bot_0;

env boolean speedButton_0;


sys boolean verMot_0;

sys boolean horMot_0;

sys boolean botMot_0;
sys boolean botMot_1;

sys boolean motSpeed_0;
sys boolean motSpeed_1;



sys boolean spec_currentColor_0;
sys boolean spec_currentColor_1;
sys boolean spec_currentColor_2;

sys boolean spec_dropping;
sys boolean spec_prevBotMotReturn;
sys boolean spec_waiting_ack_ver_mot;

aux boolean eNV_CONSTRAINT_0_respondsTo_responded;
aux boolean eNV_CONSTRAINT_1_respondsTo_responded;
aux boolean pREV_aux_2;
aux boolean pREV_aux_3;
aux boolean pREV_aux_4;
aux boolean pREV_aux_5;
aux boolean pREV_aux_6;
aux boolean pREV_aux_7;
aux boolean pREV_aux_8;
aux boolean pREV_aux_9;

assumption
	G ((!(spec_dropping) -> (((ack_ver_0) & (ack_hor_0)) & (ack_bot_0))));
assumption
	G ((!(spec_waiting_ack_ver_mot) -> (ack_ver_0)));
assumption
	GF (!((!color_0 & color_1 & color_2)));
assumption
	GF (eNV_CONSTRAINT_0_respondsTo_responded);
assumption
	GF (eNV_CONSTRAINT_1_respondsTo_responded);



guarantee
	G(((spec_dropping<->next(spec_dropping))<->((verMot_0)&!((spec_prevBotMotReturn&(ack_bot_0))))));
guarantee
	G((((!ack_ver_0)|(!ack_hor_0))->(((verMot_0)&(horMot_0))&(!botMot_0&botMot_1))));
guarantee
	G(((!((!color_0&color_1&color_2))&!(spec_dropping))->((!verMot_0)&((color_0<->next(spec_currentColor_0))&(color_1<->next(spec_currentColor_1))&(color_2<->next(spec_currentColor_2))))));
guarantee
	G(((((((ack_ver_0)&(ack_hor_0))&(ack_bot_0))&spec_dropping)&pREV_aux_4)->(!botMot_0&!botMot_1)));
guarantee
	G(((((((ack_ver_0)&(ack_hor_0))&(ack_bot_0))&pREV_aux_5)&spec_dropping)->(botMot_0&!botMot_1)));
guarantee
	(((!motSpeed_0&!motSpeed_1)&!(spec_dropping)));
guarantee
	(!(spec_waiting_ack_ver_mot));
guarantee
	G(((!(spec_waiting_ack_ver_mot)&(!verMot_0))->next(spec_waiting_ack_ver_mot)));
guarantee
	G((next(pREV_aux_4)<->(!ack_ver_0)));
guarantee
	G((next(pREV_aux_5)<->(!ack_hor_0)));
