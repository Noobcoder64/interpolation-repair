
module GyroLTL_590_GyroAspect_2

env boolean distSense_0;

env boolean isReady;
env boolean bluetoothCmd_0;
env boolean bluetoothCmd_1;
env boolean bluetoothCmd_2;
assumption
	G (!(bluetoothCmd_0 & bluetoothCmd_1 & !bluetoothCmd_2));
assumption
	G (!(bluetoothCmd_0 & bluetoothCmd_1 & bluetoothCmd_2));

env boolean balancerStatus_0;


sys boolean balancer_0;
sys boolean balancer_1;
sys boolean balancer_2;
guarantee
	G (!(balancer_0 & !balancer_1 & balancer_2));
guarantee
	G (!(balancer_0 & balancer_1 & !balancer_2));
guarantee
	G (!(balancer_0 & balancer_1 & balancer_2));

sys boolean bluetoothStatus_0;


aux boolean eNV_CONSTRAINT_0_respondsTo_responded;
aux boolean eNV_CONSTRAINT_1_respondsTo_responded;

assumption
	G ((isReady -> next(isReady)));
assumption
	 (!(isReady));
assumption
	 ((!bluetoothCmd_0 & !bluetoothCmd_1 & !bluetoothCmd_2));
assumption
	G ((((!distSense_0) & ((!balancer_0 & !balancer_1 & !balancer_2) | (!balancer_0 & balancer_1 & !balancer_2))) -> (next(!distSense_0))));
assumption
	G ((((distSense_0) & ((!balancer_0 & !balancer_1 & !balancer_2) | (!balancer_0 & !balancer_1 & balancer_2))) -> (next(distSense_0))));
assumption
	GF (eNV_CONSTRAINT_0_respondsTo_responded);
assumption
	GF (eNV_CONSTRAINT_1_respondsTo_responded);

guarantee
	 ((!balancer_0 & !balancer_1 & !balancer_2));
guarantee
	G ((!(isReady) -> (!balancer_0 & !balancer_1 & !balancer_2)));
guarantee
	G (((!balancer_0 & !balancer_1 & balancer_2) -> (!distSense_0)));
guarantee
	GF (((!bluetoothCmd_0 & !bluetoothCmd_1 & !bluetoothCmd_2) -> (!balancer_0 & !balancer_1 & balancer_2)));
guarantee
	GF (((!bluetoothCmd_0 & !bluetoothCmd_1 & !bluetoothCmd_2) -> ((balancer_0 & !balancer_1 & !balancer_2) | (!balancer_0 & balancer_1 & balancer_2))));
guarantee
	G (((!bluetoothCmd_0 & !bluetoothCmd_1 & !bluetoothCmd_2) -> (((!distSense_0) & isReady) -> (!balancer_0 & !balancer_1 & balancer_2))));

guarantee
	 (eNV_CONSTRAINT_0_respondsTo_responded);
guarantee
	G ((next(eNV_CONSTRAINT_0_respondsTo_responded) <-> ((!(!(((!balancer_0 & !balancer_1 & balancer_2) | (!balancer_0 & !balancer_1 & !balancer_2)))) | (!distSense_0)) | (eNV_CONSTRAINT_0_respondsTo_responded & !(!(((!balancer_0 & !balancer_1 & balancer_2) | (!balancer_0 & !balancer_1 & !balancer_2))))))));
guarantee
	 (eNV_CONSTRAINT_1_respondsTo_responded);
guarantee
	G ((next(eNV_CONSTRAINT_1_respondsTo_responded) <-> ((!((!balancer_0 & !balancer_1 & balancer_2)) | (distSense_0)) | (eNV_CONSTRAINT_1_respondsTo_responded & !((!balancer_0 & !balancer_1 & balancer_2))))));


assumption
	!(!bluetoothCmd_1 & !bluetoothCmd_2 & !bluetoothCmd_0);
