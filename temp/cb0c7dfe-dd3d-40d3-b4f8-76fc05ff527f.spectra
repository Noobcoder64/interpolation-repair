
module GyroLTLVar3_702_GyroAspect_2

env boolean frontDistSense_0;

env boolean backDistSense_0;

env boolean isReady;

sys boolean balancer_0;
sys boolean balancer_1;
sys boolean balancer_2;
guarantee
	G (!(balancer_0 & !balancer_1 & balancer_2));
guarantee
	G (!(balancer_0 & balancer_1 & !balancer_2));
guarantee
	G (!(balancer_0 & balancer_1 & balancer_2));


aux boolean eNV_CONSTRAINT_0_respondsTo_responded;
aux boolean eNV_CONSTRAINT_1_respondsTo_responded;
aux boolean eNV_CONSTRAINT_2_respondsTo_responded;
aux boolean eNV_CONSTRAINT_3_respondsTo_responded;

assumption
	 (!(isReady));
assumption
	 (((!frontDistSense_0) & (!backDistSense_0)));
assumption
	G ((isReady -> next(isReady)));
assumption
	GF (eNV_CONSTRAINT_0_respondsTo_responded);
assumption
	GF (eNV_CONSTRAINT_1_respondsTo_responded);
assumption
	GF (eNV_CONSTRAINT_2_respondsTo_responded);
assumption
	GF (eNV_CONSTRAINT_3_respondsTo_responded);

guarantee
	 ((!balancer_0 & !balancer_1 & !balancer_2));
guarantee
	G ((!(isReady) -> (!balancer_0 & !balancer_1 & !balancer_2)));
guarantee
	G (((!balancer_0 & !balancer_1 & balancer_2) -> (!frontDistSense_0)));
guarantee
	G (((!balancer_0 & balancer_1 & !balancer_2) -> (!backDistSense_0)));
guarantee
	GF ((!balancer_0 & !balancer_1 & balancer_2));
guarantee
	GF (((balancer_0 & !balancer_1 & !balancer_2) | (!balancer_0 & balancer_1 & balancer_2)));
guarantee
	G (((isReady & (!frontDistSense_0)) -> (!balancer_0 & !balancer_1 & balancer_2)));

guarantee
	 (eNV_CONSTRAINT_0_respondsTo_responded);
guarantee
	G ((next(eNV_CONSTRAINT_0_respondsTo_responded) <-> ((!(!(((!balancer_0 & !balancer_1 & balancer_2) | (!balancer_0 & !balancer_1 & !balancer_2)))) | (!frontDistSense_0)) | (eNV_CONSTRAINT_0_respondsTo_responded & !(!(((!balancer_0 & !balancer_1 & balancer_2) | (!balancer_0 & !balancer_1 & !balancer_2))))))));
guarantee
	 (eNV_CONSTRAINT_1_respondsTo_responded);
guarantee
	G ((next(eNV_CONSTRAINT_1_respondsTo_responded) <-> ((!(!(((!balancer_0 & balancer_1 & !balancer_2) | (!balancer_0 & !balancer_1 & !balancer_2)))) | (!backDistSense_0)) | (eNV_CONSTRAINT_1_respondsTo_responded & !(!(((!balancer_0 & balancer_1 & !balancer_2) | (!balancer_0 & !balancer_1 & !balancer_2))))))));
guarantee
	 (eNV_CONSTRAINT_2_respondsTo_responded);
guarantee
	G ((next(eNV_CONSTRAINT_2_respondsTo_responded) <-> ((!((!balancer_0 & !balancer_1 & balancer_2)) | (frontDistSense_0)) | (eNV_CONSTRAINT_2_respondsTo_responded & !((!balancer_0 & !balancer_1 & balancer_2))))));
guarantee
	 (eNV_CONSTRAINT_3_respondsTo_responded);
guarantee
	G ((next(eNV_CONSTRAINT_3_respondsTo_responded) <-> ((!((!balancer_0 & balancer_1 & !balancer_2)) | (backDistSense_0)) | (eNV_CONSTRAINT_3_respondsTo_responded & !((!balancer_0 & balancer_1 & !balancer_2))))));


assumption
	G(!(!backDistSense_0 & !isReady & !frontDistSense_0));
