
module ColorSortLTL3_681_ColorSort_fixed_1

env boolean color_0;
env boolean color_1;
env boolean color_2;
assumption
	G (!(color_0 & color_1 & !color_2));
assumption
	G (!(color_0 & color_1 & color_2));

env boolean detect_0;
env boolean detect_1;
env boolean detect_2;
assumption
	G (!(detect_0 & detect_1 & !detect_2));
assumption
	G (!(detect_0 & detect_1 & detect_2));

env boolean ack_ver_0;

env boolean ack_hor_0;

env boolean ack_bot_0;

env boolean speedButton_0;


sys boolean verMot_0;

sys boolean horMot_0;

sys boolean botMot_0;
sys boolean botMot_1;

sys boolean motSpeed_0;
sys boolean motSpeed_1;

sys boolean spec_state_seek_0;
sys boolean spec_state_seek_1;


sys boolean spec_currentColor_0;
sys boolean spec_currentColor_1;
sys boolean spec_currentColor_2;

sys boolean spec_dropping;
sys boolean spec_prevBotMotReturn;
sys boolean spec_prevBotMotSeek;
sys boolean spec_waiting_ack_ver_mot;
sys boolean spec_waiting_ack_hor_mot;

aux boolean eNV_CONSTRAINT_0_respondsTo_responded;
aux boolean eNV_CONSTRAINT_1_respondsTo_responded;
aux boolean eNV_CONSTRAINT_2_respondsTo_responded;
aux boolean eNV_CONSTRAINT_3_respondsTo_responded;
aux boolean eNV_CONSTRAINT_4_respondsTo_responded;
aux boolean pREV_aux_5;
aux boolean pREV_aux_6;
aux boolean pREV_aux_7;

assumption
	G ((!(spec_dropping) -> (((ack_ver_0) & (ack_hor_0)) & (ack_bot_0))));
assumption
	G ((!(spec_waiting_ack_hor_mot) -> (ack_hor_0)));
assumption
	GF (!((!color_0 & color_1 & color_2)));
assumption
	GF (eNV_CONSTRAINT_0_respondsTo_responded);
assumption
	GF (eNV_CONSTRAINT_1_respondsTo_responded);
assumption
	GF (eNV_CONSTRAINT_2_respondsTo_responded);
assumption
	GF (eNV_CONSTRAINT_3_respondsTo_responded);
assumption
	GF (eNV_CONSTRAINT_4_respondsTo_responded);




assumption
	G(!(!ack_hor_0));

assumption
	GF (!(eNV_CONSTRAINT_2_respondsTo_responded & !ack_ver_0));
guarantee
	G((spec_prevBotMotReturn<->pREV_aux_5));
guarantee
	G((spec_prevBotMotSeek<->pREV_aux_6));
guarantee
	G((!((!botMot_0&botMot_1))->((verMot_0)&(horMot_0))));
guarantee
	G(((verMot_0)->((spec_currentColor_0<->next(spec_currentColor_0))&(spec_currentColor_1<->next(spec_currentColor_1))&(spec_currentColor_2<->next(spec_currentColor_2)))));
guarantee
	G(((spec_dropping<->next(spec_dropping))<->((verMot_0)&!((spec_prevBotMotReturn&(ack_bot_0))))));
guarantee
	G((((!ack_ver_0)|(!ack_hor_0))->(((verMot_0)&(horMot_0))&(!botMot_0&botMot_1))));
guarantee
	G(((!((!color_0&color_1&color_2))&!(spec_dropping))->((!verMot_0)&((color_0<->next(spec_currentColor_0))&(color_1<->next(spec_currentColor_1))&(color_2<->next(spec_currentColor_2))))));
guarantee
	G(((((((ack_ver_0)&(ack_hor_0))&(ack_bot_0))&spec_dropping)&pREV_aux_7)->(!botMot_0&!botMot_1)));
guarantee
	G((((((((((((!spec_state_seek_0&!spec_state_seek_1)&(!((spec_prevBotMotSeek&(!ack_bot_0)))|((spec_prevBotMotSeek&(((detect_0<->spec_currentColor_0)|(detect_1<->spec_currentColor_1)|(detect_2<->spec_currentColor_2))))&(spec_prevBotMotSeek&(!ack_bot_0)))))&(next(!spec_state_seek_0)&next(!spec_state_seek_1)))|(((!spec_state_seek_0&!spec_state_seek_1)&((!((spec_prevBotMotSeek&(((detect_0<->spec_currentColor_0)|(detect_1<->spec_currentColor_1)|(detect_2<->spec_currentColor_2)))))&((spec_dropping&!((((detect_0<->spec_currentColor_0)|(detect_1<->spec_currentColor_1)|(detect_2<->spec_currentColor_2)))))->(!botMot_0&!botMot_1)))&(spec_prevBotMotSeek&(!ack_bot_0))))&(next(!spec_state_seek_0)&next(spec_state_seek_1))))|(((!spec_state_seek_0&!spec_state_seek_1)&((!((spec_prevBotMotSeek&(((detect_0<->spec_currentColor_0)|(detect_1<->spec_currentColor_1)|(detect_2<->spec_currentColor_2)))))&!(((spec_dropping&!((((detect_0<->spec_currentColor_0)|(detect_1<->spec_currentColor_1)|(detect_2<->spec_currentColor_2)))))->(!botMot_0&!botMot_1))))&(spec_prevBotMotSeek&(!ack_bot_0))))&(next(spec_state_seek_0)&next(spec_state_seek_1))))|(((!spec_state_seek_0&spec_state_seek_1)&(spec_prevBotMotSeek&(((detect_0<->spec_currentColor_0)|(detect_1<->spec_currentColor_1)|(detect_2<->spec_currentColor_2)))))&(next(!spec_state_seek_0)&next(!spec_state_seek_1))))|(((!spec_state_seek_0&spec_state_seek_1)&(!((spec_prevBotMotSeek&(((detect_0<->spec_currentColor_0)|(detect_1<->spec_currentColor_1)|(detect_2<->spec_currentColor_2)))))&((spec_dropping&!((((detect_0<->spec_currentColor_0)|(detect_1<->spec_currentColor_1)|(detect_2<->spec_currentColor_2)))))->(!botMot_0&!botMot_1))))&(next(!spec_state_seek_0)&next(spec_state_seek_1))))|(((!spec_state_seek_0&spec_state_seek_1)&(!((spec_prevBotMotSeek&(((detect_0<->spec_currentColor_0)|(detect_1<->spec_currentColor_1)|(detect_2<->spec_currentColor_2)))))&!(((spec_dropping&!((((detect_0<->spec_currentColor_0)|(detect_1<->spec_currentColor_1)|(detect_2<->spec_currentColor_2)))))->(!botMot_0&!botMot_1)))))&(next(spec_state_seek_0)&next(spec_state_seek_1))))|((spec_state_seek_0&!spec_state_seek_1)&(next(spec_state_seek_0)&next(!spec_state_seek_1))))|(((spec_state_seek_0&spec_state_seek_1)&(spec_prevBotMotSeek&(((detect_0<->spec_currentColor_0)|(detect_1<->spec_currentColor_1)|(detect_2<->spec_currentColor_2)))))&(next(spec_state_seek_0)&next(!spec_state_seek_1))))|(((spec_state_seek_0&spec_state_seek_1)&!((spec_prevBotMotSeek&(((detect_0<->spec_currentColor_0)|(detect_1<->spec_currentColor_1)|(detect_2<->spec_currentColor_2))))))&(next(spec_state_seek_0)&next(spec_state_seek_1)))));
guarantee
	GF ((((!spec_state_seek_0&!spec_state_seek_1)|(!spec_state_seek_0&spec_state_seek_1))|(spec_state_seek_0&spec_state_seek_1)));
guarantee
	(((!motSpeed_0&!motSpeed_1)&!(spec_dropping)));
guarantee
	G((next(eNV_CONSTRAINT_0_respondsTo_responded)<->((ack_ver_0)|(eNV_CONSTRAINT_0_respondsTo_responded&!(spec_waiting_ack_ver_mot)))));
guarantee
	G((next(eNV_CONSTRAINT_1_respondsTo_responded)<->((ack_hor_0)|(eNV_CONSTRAINT_1_respondsTo_responded&!(spec_waiting_ack_hor_mot)))));
guarantee
	G((next(eNV_CONSTRAINT_2_respondsTo_responded)<->((ack_ver_0)|(eNV_CONSTRAINT_2_respondsTo_responded&!((!ack_ver_0))))));
guarantee
	G((next(eNV_CONSTRAINT_3_respondsTo_responded)<->((ack_hor_0)|(eNV_CONSTRAINT_3_respondsTo_responded&!((!ack_hor_0))))));
guarantee
	G((next(eNV_CONSTRAINT_4_respondsTo_responded)<->((ack_bot_0)|(eNV_CONSTRAINT_4_respondsTo_responded&!((!ack_bot_0))))));
guarantee
	G((next(pREV_aux_5)<->(botMot_0&!botMot_1)));
guarantee
	G((next(pREV_aux_6)<->(!botMot_0&!botMot_1)));
guarantee
	G((next(pREV_aux_7)<->(!ack_ver_0)));
