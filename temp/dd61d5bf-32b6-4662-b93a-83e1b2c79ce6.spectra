
module HumanoidLTL_462_Humanoid_1

env boolean obstacle_0;

env boolean inputMoveMode_0;
env boolean inputMoveMode_1;
env boolean inputMoveMode_2;
assumption
	G (!(inputMoveMode_0 & !inputMoveMode_1 & inputMoveMode_2));
assumption
	G (!(inputMoveMode_0 & inputMoveMode_1 & !inputMoveMode_2));
assumption
	G (!(inputMoveMode_0 & inputMoveMode_1 & inputMoveMode_2));

env boolean button_0;


sys boolean leftMotor_0;
sys boolean leftMotor_1;
sys boolean leftMotor_2;

sys boolean rightMotor_0;
sys boolean rightMotor_1;
sys boolean rightMotor_2;

sys boolean headMotor_0;
sys boolean headMotor_1;

sys boolean outputMoveMode_0;
sys boolean outputMoveMode_1;
sys boolean outputMoveMode_2;
guarantee
	G (!(outputMoveMode_0 & !outputMoveMode_1 & outputMoveMode_2));
guarantee
	G (!(outputMoveMode_0 & outputMoveMode_1 & !outputMoveMode_2));
guarantee
	G (!(outputMoveMode_0 & outputMoveMode_1 & outputMoveMode_2));


aux boolean pREV_aux_0;
aux boolean pREV_aux_1;


guarantee
	G ((((!inputMoveMode_0 & !inputMoveMode_1 & !inputMoveMode_2) & (obstacle_0)) -> (((!outputMoveMode_0 & outputMoveMode_1 & !outputMoveMode_2) & (leftMotor_0 & !leftMotor_1 & leftMotor_2)) & (rightMotor_0 & !rightMotor_1 & rightMotor_2))));
guarantee
	G ((((!inputMoveMode_0 & !inputMoveMode_1 & inputMoveMode_2) & (!obstacle_0)) -> (((!outputMoveMode_0 & !outputMoveMode_1 & !outputMoveMode_2) & (!leftMotor_0 & !leftMotor_1 & !leftMotor_2)) & (!rightMotor_0 & !rightMotor_1 & rightMotor_2))));
guarantee
	G (((((!inputMoveMode_0 & !inputMoveMode_1 & !inputMoveMode_2) & (!button_0)) & pREV_aux_0) -> ((leftMotor_0 & leftMotor_1 & !leftMotor_2) & (rightMotor_0 & rightMotor_1 & !rightMotor_2))));
guarantee
	G ((((((!inputMoveMode_0 & !inputMoveMode_1 & !inputMoveMode_2) & (!obstacle_0)) & (!button_0)) & pREV_aux_1) -> ((!leftMotor_0 & !leftMotor_1 & !leftMotor_2) & (!rightMotor_0 & !rightMotor_1 & !rightMotor_2))));
guarantee
	G (((obstacle_0) -> !((!outputMoveMode_0 & !outputMoveMode_1 & !outputMoveMode_2))));
guarantee
	G (((!inputMoveMode_0 & inputMoveMode_1 & !inputMoveMode_2) <-> (!outputMoveMode_0 & outputMoveMode_1 & outputMoveMode_2)));
guarantee
	G (((!inputMoveMode_0 & inputMoveMode_1 & !inputMoveMode_2) -> ((!leftMotor_0 & !leftMotor_1 & !leftMotor_2) & (!rightMotor_0 & rightMotor_1 & rightMotor_2))));
guarantee
	G (((!inputMoveMode_0 & inputMoveMode_1 & inputMoveMode_2) -> ((!leftMotor_0 & !leftMotor_1 & leftMotor_2) & (rightMotor_0 & !rightMotor_1 & !rightMotor_2))));
guarantee
	G ((!(((!inputMoveMode_0 & inputMoveMode_1 & !inputMoveMode_2) | (!inputMoveMode_0 & inputMoveMode_1 & inputMoveMode_2))) -> !((((leftMotor_0 & !leftMotor_1 & !leftMotor_2) | (rightMotor_0 & !rightMotor_1 & !rightMotor_2)) | ((!leftMotor_0 & leftMotor_1 & leftMotor_2) & (!rightMotor_0 & rightMotor_1 & rightMotor_2))))));
guarantee
	G ((((!inputMoveMode_0 & inputMoveMode_1 & !inputMoveMode_2) | (!inputMoveMode_0 & inputMoveMode_1 & inputMoveMode_2)) -> (headMotor_0 & !headMotor_1)));
guarantee
	G ((((!inputMoveMode_0 & inputMoveMode_1 & inputMoveMode_2) & (!obstacle_0)) -> (!outputMoveMode_0 & !outputMoveMode_1 & !outputMoveMode_2)));
guarantee
	G ((((inputMoveMode_0 & !inputMoveMode_1 & !inputMoveMode_2) & (outputMoveMode_0 & !outputMoveMode_1 & !outputMoveMode_2)) -> (((!rightMotor_0 & rightMotor_1 & !rightMotor_2) & (leftMotor_0 & leftMotor_1 & leftMotor_2)) & (headMotor_0 & headMotor_1))));
guarantee
	G (((!button_0) -> ((((outputMoveMode_0 <-> inputMoveMode_0) | (outputMoveMode_1 <-> inputMoveMode_1) | (outputMoveMode_2 <-> inputMoveMode_2))) | !((inputMoveMode_0 & !inputMoveMode_1 & !inputMoveMode_2)))));
guarantee
	G (((((button_0) & (!inputMoveMode_0 & !inputMoveMode_1 & !inputMoveMode_2)) & (!obstacle_0)) -> (((outputMoveMode_0 & !outputMoveMode_1 & !outputMoveMode_2) & (leftMotor_0 & !leftMotor_1 & leftMotor_2)) & (rightMotor_0 & !rightMotor_1 & rightMotor_2))));
guarantee
	G (((((button_0) & (inputMoveMode_0 & !inputMoveMode_1 & !inputMoveMode_2)) & (!obstacle_0)) -> (((!outputMoveMode_0 & !outputMoveMode_1 & !outputMoveMode_2) & (leftMotor_0 & leftMotor_1 & !leftMotor_2)) & (rightMotor_0 & rightMotor_1 & !rightMotor_2))));
guarantee
	G ((!(((button_0) | (inputMoveMode_0 & !inputMoveMode_1 & !inputMoveMode_2))) -> !((outputMoveMode_0 & !outputMoveMode_1 & !outputMoveMode_2))));

guarantee
	 (!(pREV_aux_0));
guarantee
	G ((next(pREV_aux_0) <-> (!inputMoveMode_0 & inputMoveMode_1 & inputMoveMode_2)));
guarantee
	 (!(pREV_aux_1));
guarantee
	G ((next(pREV_aux_1) <-> !((!inputMoveMode_0 & inputMoveMode_1 & inputMoveMode_2))));


assumption
	!(!(inputMoveMode_1 & inputMoveMode_0 & inputMoveMode_2) & inputMoveMode_2 & !button_0 & !obstacle_0 & !(inputMoveMode_2 & !inputMoveMode_1 & inputMoveMode_0) & inputMoveMode_1 & !inputMoveMode_0 & !(!inputMoveMode_2 & inputMoveMode_1 & inputMoveMode_0));

assumption
	!(!(inputMoveMode_1 & inputMoveMode_0 & inputMoveMode_2) & !(!inputMoveMode_2 & inputMoveMode_1 & inputMoveMode_0) & !inputMoveMode_0 & !(!(!inputMoveMode_2 & inputMoveMode_1 & inputMoveMode_0) & !inputMoveMode_0 & !(inputMoveMode_2 & !inputMoveMode_1 & inputMoveMode_0) & !obstacle_0 & !button_0 & !(inputMoveMode_1 & inputMoveMode_0 & inputMoveMode_2) & inputMoveMode_2 & inputMoveMode_1) & inputMoveMode_1 & inputMoveMode_2 & button_0 & !obstacle_0 & !(inputMoveMode_2 & !inputMoveMode_1 & inputMoveMode_0));

assumption
	G(!(!(inputMoveMode_2 & !inputMoveMode_1 & inputMoveMode_0) & !obstacle_0 & !(!inputMoveMode_2 & inputMoveMode_1 & inputMoveMode_0) & !inputMoveMode_0 & !button_0 & !inputMoveMode_1 & !(inputMoveMode_1 & inputMoveMode_0 & inputMoveMode_2)));

assumption
	FALSE;
