
module ColorSortLTL3_662_ColorSort_fixed_1

env boolean color_0;
env boolean color_1;
env boolean color_2;
assumption
	G (!(color_0 & color_1 & !color_2));
assumption
	G (!(color_0 & color_1 & color_2));

env boolean detect_0;
env boolean detect_1;
env boolean detect_2;
assumption
	G (!(detect_0 & detect_1 & !detect_2));
assumption
	G (!(detect_0 & detect_1 & detect_2));

env boolean ack_ver_0;

env boolean ack_hor_0;

env boolean ack_bot_0;

env boolean speedButton_0;


sys boolean verMot_0;

sys boolean horMot_0;

sys boolean botMot_0;
sys boolean botMot_1;

sys boolean motSpeed_0;
sys boolean motSpeed_1;


sys boolean spec_currentColor_0;
sys boolean spec_currentColor_1;
sys boolean spec_currentColor_2;

sys boolean spec_dropping;

aux boolean pREV_aux_0;
aux boolean pREV_aux_1;
aux boolean pREV_aux_2;
aux boolean pREV_aux_3;
aux boolean pREV_aux_4;

assumption
	GF (!((!color_0 & color_1 & color_2)));




assumption
	!(!ack_ver_0 & !color_2);

assumption
	!(!color_2 & !ack_hor_0);

assumption
	!(!color_1 & !ack_ver_0);

assumption
	!(!color_1 & !ack_hor_0);
guarantee
	G(((spec_dropping<->next(spec_dropping))<->(verMot_0)));
guarantee
	G((((!ack_ver_0)|(!ack_hor_0))->(((verMot_0)&(horMot_0))&(!botMot_0&botMot_1))));
guarantee
	G(((!((!color_0&color_1&color_2))&!(spec_dropping))->(((!verMot_0)&((color_0<->next(spec_currentColor_0))&(color_1<->next(spec_currentColor_1))&(color_2<->next(spec_currentColor_2))))&next(spec_dropping))));
guarantee
	(((!motSpeed_0&!motSpeed_1)&!(spec_dropping)));
