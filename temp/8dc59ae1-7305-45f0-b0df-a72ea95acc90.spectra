
module HumanoidLTLVar3_872_Humanoid_2

env boolean obstacle_0;

env boolean btInput_0;
env boolean btInput_1;
env boolean btInput_2;
assumption
	G (!(btInput_0 & !btInput_1 & btInput_2));
assumption
	G (!(btInput_0 & btInput_1 & !btInput_2));
assumption
	G (!(btInput_0 & btInput_1 & btInput_2));


sys boolean leftMotor_0;
sys boolean leftMotor_1;
sys boolean leftMotor_2;
sys boolean leftMotor_3;
guarantee
	G (!(leftMotor_0 & !leftMotor_1 & !leftMotor_2 & leftMotor_3));
guarantee
	G (!(leftMotor_0 & !leftMotor_1 & leftMotor_2 & !leftMotor_3));
guarantee
	G (!(leftMotor_0 & !leftMotor_1 & leftMotor_2 & leftMotor_3));
guarantee
	G (!(leftMotor_0 & leftMotor_1 & !leftMotor_2 & !leftMotor_3));
guarantee
	G (!(leftMotor_0 & leftMotor_1 & !leftMotor_2 & leftMotor_3));
guarantee
	G (!(leftMotor_0 & leftMotor_1 & leftMotor_2 & !leftMotor_3));
guarantee
	G (!(leftMotor_0 & leftMotor_1 & leftMotor_2 & leftMotor_3));

sys boolean rightMotor_0;
sys boolean rightMotor_1;
sys boolean rightMotor_2;
sys boolean rightMotor_3;
guarantee
	G (!(rightMotor_0 & !rightMotor_1 & !rightMotor_2 & rightMotor_3));
guarantee
	G (!(rightMotor_0 & !rightMotor_1 & rightMotor_2 & !rightMotor_3));
guarantee
	G (!(rightMotor_0 & !rightMotor_1 & rightMotor_2 & rightMotor_3));
guarantee
	G (!(rightMotor_0 & rightMotor_1 & !rightMotor_2 & !rightMotor_3));
guarantee
	G (!(rightMotor_0 & rightMotor_1 & !rightMotor_2 & rightMotor_3));
guarantee
	G (!(rightMotor_0 & rightMotor_1 & rightMotor_2 & !rightMotor_3));
guarantee
	G (!(rightMotor_0 & rightMotor_1 & rightMotor_2 & rightMotor_3));

sys boolean headMotor_0;
sys boolean headMotor_1;
guarantee
	G (!(headMotor_0 & headMotor_1));

sys boolean spec_nextMoveMode_0;
sys boolean spec_nextMoveMode_1;

sys boolean spec_specState_0;
sys boolean spec_specState_1;

sys boolean spec_turnState_0;
sys boolean spec_turnState_1;


aux boolean pREV_aux_0;
aux boolean pREV_aux_1;
aux boolean pREV_aux_2;
aux boolean pREV_aux_3;
aux boolean pREV_aux_4;
aux boolean pREV_aux_5;

assumption
	 ((!obstacle_0));
assumption
	G (((pREV_aux_0 & (obstacle_0)) -> (next(obstacle_0))));
assumption
	G (((pREV_aux_5 & (!obstacle_0)) -> !((next(obstacle_0)))));
assumption
	G ((((spec_turnState_0 & !spec_turnState_1) & (!obstacle_0)) -> (next(!obstacle_0))));

guarantee
	 ((!spec_specState_0 & !spec_specState_1));
guarantee
	 ((!spec_turnState_0 & !spec_turnState_1));
guarantee
	 ((!spec_nextMoveMode_0 & !spec_nextMoveMode_1));
guarantee
	GF ((!spec_nextMoveMode_0 & !spec_nextMoveMode_1));
guarantee
	G (((obstacle_0) -> !((!spec_nextMoveMode_0 & !spec_nextMoveMode_1))));
guarantee
	G ((((!spec_nextMoveMode_0 & spec_nextMoveMode_1) & (next(!spec_nextMoveMode_0) & next(!spec_nextMoveMode_1))) <-> ((next(!leftMotor_0) & next(!leftMotor_1) & next(!leftMotor_2) & next(!leftMotor_3)) & (next(!rightMotor_0) & next(!rightMotor_1) & next(!rightMotor_2) & next(rightMotor_3)))));
guarantee
	G ((((!spec_nextMoveMode_0 & !spec_nextMoveMode_1) & (next(!spec_nextMoveMode_0) & next(spec_nextMoveMode_1))) <-> ((next(!leftMotor_0) & next(!leftMotor_1) & next(!leftMotor_2) & next(leftMotor_3)) & (next(!rightMotor_0) & next(!rightMotor_1) & next(!rightMotor_2) & next(!rightMotor_3)))));
guarantee
	G (((next(!spec_nextMoveMode_0) & next(spec_nextMoveMode_1)) -> ((!spec_nextMoveMode_0 & !spec_nextMoveMode_1) | (!spec_nextMoveMode_0 & spec_nextMoveMode_1))));
guarantee
	G (((!spec_nextMoveMode_0 & spec_nextMoveMode_1) -> ((next(!spec_nextMoveMode_0) & next(!spec_nextMoveMode_1)) | (next(!spec_nextMoveMode_0) & next(spec_nextMoveMode_1)))));
guarantee
	G (((next(spec_nextMoveMode_0) & next(!spec_nextMoveMode_1)) -> ((!spec_nextMoveMode_0 & !spec_nextMoveMode_1) | (spec_nextMoveMode_0 & !spec_nextMoveMode_1))));
guarantee
	G (((next(spec_nextMoveMode_0) & next(spec_nextMoveMode_1)) -> ((!spec_nextMoveMode_0 & !spec_nextMoveMode_1) | (spec_nextMoveMode_0 & spec_nextMoveMode_1))));
guarantee
	G (((((!spec_specState_0 & !spec_specState_1) & (!spec_nextMoveMode_0 & !spec_nextMoveMode_1)) & (next(!spec_nextMoveMode_0) & next(spec_nextMoveMode_1))) -> (next(!spec_specState_0) & next(spec_specState_1))));
guarantee
	G (((((!spec_specState_0 & spec_specState_1) & (!spec_nextMoveMode_0 & spec_nextMoveMode_1)) & (next(!spec_nextMoveMode_0) & next(!spec_nextMoveMode_1))) -> (next(spec_specState_0) & next(!spec_specState_1))));
guarantee
	G (!((((spec_specState_0 & !spec_specState_1) & (!spec_nextMoveMode_0 & !spec_nextMoveMode_1)) & (next(!spec_nextMoveMode_0) & next(spec_nextMoveMode_1)))));
guarantee
	G ((((!spec_specState_0 & spec_specState_1) & (next(!spec_nextMoveMode_0) & next(spec_nextMoveMode_1))) -> (next(!spec_specState_0) & next(spec_specState_1))));
guarantee
	G ((((spec_specState_0 & !spec_specState_1) & (next(!spec_nextMoveMode_0) & next(!spec_nextMoveMode_1))) -> (next(spec_specState_0) & next(!spec_specState_1))));
guarantee
	G ((((spec_nextMoveMode_0 & !spec_nextMoveMode_1) | (spec_nextMoveMode_0 & spec_nextMoveMode_1)) -> (next(!spec_specState_0) & next(!spec_specState_1))));
guarantee
	G (((next(!spec_turnState_0) & next(!spec_turnState_1)) -> ((!spec_turnState_0 & !spec_turnState_1) | (spec_turnState_0 & spec_turnState_1))));
guarantee
	G ((((!spec_turnState_0 & !spec_turnState_1) & !(((spec_nextMoveMode_0 & !spec_nextMoveMode_1) | (spec_nextMoveMode_0 & spec_nextMoveMode_1)))) -> (next(!spec_turnState_0) & next(!spec_turnState_1))));
guarantee
	G ((((((spec_nextMoveMode_0 & !spec_nextMoveMode_1) | (spec_nextMoveMode_0 & spec_nextMoveMode_1)) & pREV_aux_0) & (!spec_turnState_0 & !spec_turnState_1)) -> (next(!spec_turnState_0) & next(spec_turnState_1))));
guarantee
	G (((!spec_turnState_0 & spec_turnState_1) -> ((next(spec_turnState_0) & next(!spec_turnState_1)) & ((spec_nextMoveMode_0 & !spec_nextMoveMode_1) | (spec_nextMoveMode_0 & spec_nextMoveMode_1)))));
guarantee
	G ((((spec_turnState_0 & !spec_turnState_1) & ((spec_nextMoveMode_0 & !spec_nextMoveMode_1) | (spec_nextMoveMode_0 & spec_nextMoveMode_1))) -> (next(!spec_turnState_0) & next(spec_turnState_1))));
guarantee
	G ((((spec_turnState_0 & !spec_turnState_1) & (!spec_nextMoveMode_0 & !spec_nextMoveMode_1)) -> (next(spec_turnState_0) & next(spec_turnState_1))));
guarantee
	G (((spec_turnState_0 & spec_turnState_1) -> (next(!spec_turnState_0) & next(!spec_turnState_1))));
guarantee
	G (((((!spec_turnState_0 & !spec_turnState_1) & (next(!spec_turnState_0) & next(spec_turnState_1))) & (spec_nextMoveMode_0 & !spec_nextMoveMode_1)) <-> ((!leftMotor_0 & leftMotor_1 & leftMotor_2 & !leftMotor_3) & (!rightMotor_0 & rightMotor_1 & rightMotor_2 & !rightMotor_3))));
guarantee
	G (((((!spec_turnState_0 & !spec_turnState_1) & (next(!spec_turnState_0) & next(spec_turnState_1))) & (spec_nextMoveMode_0 & spec_nextMoveMode_1)) <-> ((!leftMotor_0 & leftMotor_1 & !leftMotor_2 & leftMotor_3) & (!rightMotor_0 & rightMotor_1 & !rightMotor_2 & rightMotor_3))));
guarantee
	G (((next(spec_turnState_0) & next(!spec_turnState_1)) <-> ((!leftMotor_0 & !leftMotor_1 & !leftMotor_2 & !leftMotor_3) & (!rightMotor_0 & !rightMotor_1 & rightMotor_2 & rightMotor_3))));
guarantee
	G (((spec_turnState_0 & !spec_turnState_1) <-> ((!leftMotor_0 & !leftMotor_1 & !leftMotor_2 & leftMotor_3) & (!rightMotor_0 & rightMotor_1 & !rightMotor_2 & !rightMotor_3))));
guarantee
	G (((((spec_turnState_0 & spec_turnState_1) & (next(!spec_turnState_0) & next(!spec_turnState_1))) & pREV_aux_2) <-> ((leftMotor_0 & !leftMotor_1 & !leftMotor_2 & !leftMotor_3) & (rightMotor_0 & !rightMotor_1 & !rightMotor_2 & !rightMotor_3))));
guarantee
	G (((((spec_turnState_0 & spec_turnState_1) & (next(!spec_turnState_0) & next(!spec_turnState_1))) & pREV_aux_4) <-> ((!leftMotor_0 & leftMotor_1 & leftMotor_2 & leftMotor_3) & (!rightMotor_0 & rightMotor_1 & rightMotor_2 & rightMotor_3))));

guarantee
	 (!(pREV_aux_0));
guarantee
	G ((next(pREV_aux_0) <-> (!spec_nextMoveMode_0 & !spec_nextMoveMode_1)));
guarantee
	 (!(pREV_aux_1));
guarantee
	G ((next(pREV_aux_1) <-> (spec_nextMoveMode_0 & !spec_nextMoveMode_1)));
guarantee
	 (!(pREV_aux_2));
guarantee
	G ((next(pREV_aux_2) <-> pREV_aux_1));
guarantee
	 (!(pREV_aux_3));
guarantee
	G ((next(pREV_aux_3) <-> (spec_nextMoveMode_0 & spec_nextMoveMode_1)));
guarantee
	 (!(pREV_aux_4));
guarantee
	G ((next(pREV_aux_4) <-> pREV_aux_3));
guarantee
	 (!(pREV_aux_5));
guarantee
	G ((next(pREV_aux_5) <-> (!spec_nextMoveMode_0 & spec_nextMoveMode_1)));


assumption
	GF (!(obstacle_0));

assumption
	FALSE;
