
module PcarLTL_860_PCar_fixed_1

env boolean obstacle_0;

env boolean sideSense_0;
env boolean sideSense_1;
env boolean sideSense_2;
assumption
	G (!(sideSense_0 & sideSense_1 & !sideSense_2));
assumption
	G (!(sideSense_0 & sideSense_1 & sideSense_2));

env boolean parkResult_0;

env boolean colorSense_0;
env boolean colorSense_1;
assumption
	G (!(colorSense_0 & colorSense_1));

env boolean command_0;
env boolean command_1;
env boolean command_2;
env boolean command_3;
assumption
	G (!(command_0 & !command_1 & command_2 & command_3));
assumption
	G (!(command_0 & command_1 & !command_2 & !command_3));
assumption
	G (!(command_0 & command_1 & !command_2 & command_3));
assumption
	G (!(command_0 & command_1 & command_2 & !command_3));
assumption
	G (!(command_0 & command_1 & command_2 & command_3));

env boolean reset_0;


sys boolean throttle_0;
sys boolean throttle_1;
sys boolean throttle_2;

sys boolean steer_0;
sys boolean steer_1;
sys boolean steer_2;

sys boolean parkCommand_0;
sys boolean parkCommand_1;

sys boolean spec_policy_0;
sys boolean spec_policy_1;
sys boolean spec_policy_2;


aux boolean eNV_CONSTRAINT_0_respondsTo_responded;
aux boolean pREV_aux_1;
aux boolean pREV_aux_2;
aux boolean pREV_aux_3;
aux boolean pREV_aux_4;
aux boolean pREV_aux_5;
aux boolean pREV_aux_6;
aux boolean pREV_aux_7;
aux boolean pREV_aux_8;
aux boolean pREV_aux_9;

assumption
	G (((!spec_policy_0 & !spec_policy_1 & !spec_policy_2) -> (next(!parkResult_0))));
assumption
	GF ((((!spec_policy_0 & !spec_policy_1 & spec_policy_2) & (parkResult_0)) & (!obstacle_0)));
assumption
	 ((((!parkResult_0) & (!command_0 & !command_1 & !command_2 & !command_3)) & (!reset_0)));
assumption
	G ((!((spec_policy_0 & !spec_policy_1 & spec_policy_2)) -> (next(!colorSense_0) & next(!colorSense_1))));
assumption
	GF ((((spec_policy_0 & !spec_policy_1 & spec_policy_2) & (!colorSense_0 & colorSense_1)) & (!reset_0)));
assumption
	GF (eNV_CONSTRAINT_0_respondsTo_responded);




assumption
	G((!sideSense_2 & sideSense_0 & ((!sideSense_0 | !sideSense_1) | sideSense_2)) -> next(!(!sideSense_0)));

assumption
	G(!(parkResult_0 & !sideSense_1 & !command_2 & sideSense_0 & !obstacle_0 & !sideSense_2 & !command_1 & !command_0));

assumption
	G((sideSense_1 & !command_1 & sideSense_2 & !command_0 & !command_2 & !command_3 & !obstacle_0) -> next(!(!sideSense_1 & !command_2 & sideSense_0 & !command_0 & !sideSense_2 & obstacle_0 & !command_3 & !command_1)));
guarantee
	((!spec_policy_0&!spec_policy_1&!spec_policy_2));
guarantee
	(eNV_CONSTRAINT_0_respondsTo_responded);
guarantee
	(!(pREV_aux_1));
guarantee
	(!(pREV_aux_2));
guarantee
	(!(pREV_aux_3));
guarantee
	(!(pREV_aux_4));
guarantee
	(!(pREV_aux_5));
guarantee
	(!(pREV_aux_6));
guarantee
	(!(pREV_aux_7));
guarantee
	(!(pREV_aux_8));
guarantee
	(!(pREV_aux_9));
guarantee
	G(((((obstacle_0)&((!spec_policy_0&!spec_policy_1&!spec_policy_2)|(!spec_policy_0&!spec_policy_1&spec_policy_2)))&(!command_0&!command_1&!command_2&!command_3))->(((next(!spec_policy_0)&next(!spec_policy_1)&next(!spec_policy_2))&!((((!throttle_0&!throttle_1&!throttle_2)|(throttle_0&!throttle_1&!throttle_2))|(!throttle_0&throttle_1&throttle_2))))&!(((!steer_0&steer_1&steer_2)|(steer_0&!steer_1&!steer_2))))));
guarantee
	G((((((!spec_policy_0&!spec_policy_1&!spec_policy_2)&!((((!sideSense_0&!sideSense_1&!sideSense_2)|(!sideSense_0&!sideSense_1&sideSense_2))|(!sideSense_0&sideSense_1&!sideSense_2))))&(!obstacle_0))&(!command_0&!command_1&!command_2&!command_3))->((((next(!spec_policy_0)&next(!spec_policy_1)&next(spec_policy_2))&(!throttle_0&!throttle_1&!throttle_2))&(!parkCommand_0&!parkCommand_1))&(!steer_0&steer_1&!steer_2))));
guarantee
	G((((((((!spec_policy_0&!spec_policy_1&spec_policy_2)&(sideSense_0&!sideSense_1&!sideSense_2))|(((!spec_policy_0&!spec_policy_1&!spec_policy_2)&pREV_aux_6)&pREV_aux_9))&(!obstacle_0))&(parkResult_0))&(!command_0&!command_1&!command_2&!command_3))->(((next(!spec_policy_0)&next(spec_policy_1)&next(!spec_policy_2))&(!throttle_0&throttle_1&!throttle_2))&(!parkCommand_0&parkCommand_1))));
guarantee
	G((next(pREV_aux_6)<->(sideSense_0&!sideSense_1&!sideSense_2)));
guarantee
	G((next(pREV_aux_9)<->(!spec_policy_0&!spec_policy_1&spec_policy_2)));
