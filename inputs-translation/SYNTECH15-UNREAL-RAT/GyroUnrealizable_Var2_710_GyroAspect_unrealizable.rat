<project>
  <signals>
    <signal>
      <name>backDistSense_0</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>isReady</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>moveAwayFromBackObstacle</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>responded_0</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>frontDistSense_0</name>
      <kind>E</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>responded_2</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>responded_1</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>balancer_0</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>balancer_1</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
    <signal>
      <name>balancer_2</name>
      <kind>S</kind>
      <type>boolean</type>
      <auto_signal value="False"/>
      <notes></notes>
    </signal>
  </signals>
  <requirements>
    <requirement>
      <name>assum_0</name>
      <property>!isReady</property>
      <kind>A</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_1</name>
      <property>!frontDistSense_0 &amp; !backDistSense_0</property>
      <kind>A</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_2</name>
      <property>G(F(isReady))</property>
      <kind>A</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_3</name>
      <property>G(isReady -&gt; X(isReady))</property>
      <kind>A</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_4</name>
      <property>G(F(responded_0))</property>
      <kind>A</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_5</name>
      <property>G(X(responded_0) &lt;-&gt; (((!moveAwayFromBackObstacle) | !backDistSense_0) | !(moveAwayFromBackObstacle)))</property>
      <kind>A</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_6</name>
      <property>G(X(responded_1) &lt;-&gt; (((balancer_0 &amp; !balancer_1 &amp; balancer_2) | frontDistSense_0) | !(!balancer_0 &amp; !balancer_1 &amp; balancer_2)))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>assum_7</name>
      <property>G(X(responded_2) &lt;-&gt; (((balancer_0 &amp; balancer_1 &amp; !balancer_2) | backDistSense_0) | !(!balancer_0 &amp; balancer_1 &amp; !balancer_2)))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_0</name>
      <property>!balancer_0 &amp; !balancer_1 &amp; !balancer_2</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_1</name>
      <property>G((!isReady) -&gt; !balancer_0 &amp; !balancer_1 &amp; !balancer_2)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_2</name>
      <property>G(!balancer_0 &amp; !balancer_1 &amp; balancer_2 -&gt; !frontDistSense_0)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_3</name>
      <property>G(!balancer_0 &amp; balancer_1 &amp; !balancer_2 -&gt; !backDistSense_0)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_4</name>
      <property>G(F(!balancer_0 &amp; !balancer_1 &amp; balancer_2))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_5</name>
      <property>G(F(balancer_0 &amp; !balancer_1 &amp; !balancer_2 | !balancer_0 &amp; balancer_1 &amp; balancer_2))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_6</name>
      <property>G((isReady &amp; !frontDistSense_0) -&gt; !balancer_0 &amp; !balancer_1 &amp; balancer_2)</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_7</name>
      <property>G(F(responded_1))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
    <requirement>
      <name>guar_8</name>
      <property>G(F(responded_2))</property>
      <kind>G</kind>
      <base_automaton_name></base_automaton_name>
      <notes></notes>
      <toggled>1</toggled>
    </requirement>
  </requirements>
  <property_assurance>
    <possibilities/>
    <assertions/>
  </property_assurance>
  <property_simulation/>
  <categories>
    <category>
      <name>New</name>
      <editable>no</editable>
      <notes>This is the category of those traces that have been just created</notes>
    </category>
    <category>
      <name>Default</name>
      <editable>no</editable>
      <notes>This is the default category for traces</notes>
    </category>
    <category>
      <name>Out of Date</name>
      <editable>no</editable>
      <notes>Contains the traces whose dependencies might be no longer consistent</notes>
    </category>
    <category>
      <name>Trash</name>
      <editable>no</editable>
      <notes>Contains the traces that have been deleted</notes>
    </category>
  </categories>
  <automata/>
  <active_view>ga</active_view>
  <notes></notes>
</project>
