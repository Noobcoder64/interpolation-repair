
module PcarLTL_758_PCar_fixed_2

env boolean obstacle_0;
env boolean sideSense_0;
env boolean sideSense_1;
env boolean parkResult_0;

sys boolean throttle_0;
sys boolean throttle_1;
sys boolean steer_0;
sys boolean steer_1;
sys boolean parkCommand_0;
sys boolean parkCommand_1;
sys boolean spec_policy_0;
sys boolean spec_policy_1;
sys boolean spec_policy_2;

env boolean eNV_CONSTRAINT_0_respondsTo_responded;

assumption
	 (!(parkResult_0));
assumption
	alw (((throttle_0 & !(throttle_1)) -> (((obstacle_0 <-> next(obstacle_0)) & (sideSense_0 <-> next(sideSense_0))) & (sideSense_1 <-> next(sideSense_1)))));
assumption
	alwEv (eNV_CONSTRAINT_0_respondsTo_responded);
assumption
	 (!((sideSense_0 & sideSense_1)));
assumption
	alw (!((next(sideSense_0) & next(sideSense_1))));

guarantee
	 ((((!(spec_policy_0) & !(spec_policy_1)) & !(spec_policy_2)) | ((((!(spec_policy_0) & !(spec_policy_1)) & spec_policy_2) & !(parkCommand_0)) & !(parkCommand_1))));
guarantee
	alwEv (((spec_policy_0 & !(spec_policy_1)) & spec_policy_2));
guarantee
	alw ((((((!(spec_policy_0) & !(spec_policy_1)) & !(spec_policy_2)) & sideSense_0) & !(sideSense_1)) -> (((spec_policy_0 <-> next(spec_policy_0)) & (spec_policy_1 <-> next(spec_policy_1))) & (spec_policy_2 <-> next(spec_policy_2)))));
guarantee
	alw ((((((!(spec_policy_0) & !(spec_policy_1)) & !(spec_policy_2)) & ((!(sideSense_0) & !(sideSense_1)) | (!(sideSense_0) & sideSense_1))) & !(obstacle_0)) -> ((((((((!(next(spec_policy_0)) & !(next(spec_policy_1))) & next(spec_policy_2)) & !(throttle_0)) & !(throttle_1)) & !(parkCommand_0)) & !(parkCommand_1)) & steer_0) & !(steer_1))));
guarantee
	alw (((((((!(spec_policy_0) & !(spec_policy_1)) & spec_policy_2) & ((!(sideSense_0) & !(sideSense_1)) | (!(sideSense_0) & sideSense_1))) & !(obstacle_0)) & !(parkResult_0)) -> (((((((((spec_policy_0 <-> next(spec_policy_0)) & (spec_policy_1 <-> next(spec_policy_1))) & (spec_policy_2 <-> next(spec_policy_2))) & !(throttle_0)) & !(throttle_1)) & parkCommand_0) & !(parkCommand_1)) & steer_0) & !(steer_1))));
guarantee
	alw (((((((!(spec_policy_0) & !(spec_policy_1)) & spec_policy_2) & ((!(sideSense_0) & !(sideSense_1)) | (!(sideSense_0) & sideSense_1))) & !(obstacle_0)) & parkResult_0) -> ((((((((!(next(spec_policy_0)) & next(spec_policy_1)) & !(next(spec_policy_2))) & throttle_0) & !(throttle_1)) & !(parkCommand_0)) & parkCommand_1) & !(steer_0)) & !(steer_1))));
guarantee
	alw ((((((((!(spec_policy_0) & !(spec_policy_1)) & spec_policy_2) & sideSense_0) & !(sideSense_1)) & !(obstacle_0)) & parkResult_0) -> ((((((((!(next(spec_policy_0)) & next(spec_policy_1)) & !(next(spec_policy_2))) & throttle_0) & !(throttle_1)) & !(parkCommand_0)) & parkCommand_1) & !(steer_0)) & !(steer_1))));
guarantee
	alw ((((((((!(spec_policy_0) & !(spec_policy_1)) & spec_policy_2) & sideSense_0) & !(sideSense_1)) & !(obstacle_0)) & !(parkResult_0)) -> ((((((!(next(spec_policy_0)) & !(next(spec_policy_1))) & !(next(spec_policy_2))) & !(throttle_0)) & !(throttle_1)) & !(parkCommand_0)) & parkCommand_1)));
guarantee
	alw ((((!(spec_policy_0) & spec_policy_1) & !(spec_policy_2)) -> ((((((((!(next(spec_policy_0)) & next(spec_policy_1)) & next(spec_policy_2)) & !(throttle_0)) & throttle_1) & !(steer_0)) & !(steer_1)) & !(parkCommand_0)) & parkCommand_1)));
guarantee
	alw ((((!(spec_policy_0) & spec_policy_1) & spec_policy_2) -> ((((((((next(spec_policy_0) & !(next(spec_policy_1))) & !(next(spec_policy_2))) & throttle_0) & !(throttle_1)) & !(steer_0)) & steer_1) & !(parkCommand_0)) & parkCommand_1)));
guarantee
	alw ((((spec_policy_0 & !(spec_policy_1)) & !(spec_policy_2)) -> ((((((((next(spec_policy_0) & !(next(spec_policy_1))) & next(spec_policy_2)) & !(throttle_0)) & throttle_1) & !(steer_0)) & steer_1) & !(parkCommand_0)) & parkCommand_1)));
guarantee
	alw ((((spec_policy_0 & !(spec_policy_1)) & spec_policy_2) -> (((((((((spec_policy_0 <-> next(spec_policy_0)) & (spec_policy_1 <-> next(spec_policy_1))) & (spec_policy_2 <-> next(spec_policy_2))) & throttle_0) & !(throttle_1)) & steer_0) & !(steer_1)) & !(parkCommand_0)) & parkCommand_1)));
guarantee
	alw (((obstacle_0 & !((((((!(spec_policy_0) & spec_policy_1) & !(spec_policy_2)) | ((!(spec_policy_0) & spec_policy_1) & spec_policy_2)) | ((spec_policy_0 & !(spec_policy_1)) & !(spec_policy_2))) | ((spec_policy_0 & !(spec_policy_1)) & spec_policy_2)))) -> ((!(next(spec_policy_0)) & !(next(spec_policy_1))) & !(next(spec_policy_2)))));
guarantee
	 (!((throttle_0 & throttle_1)));
guarantee
	alw (!((next(throttle_0) & next(throttle_1))));
guarantee
	 (!((steer_0 & steer_1)));
guarantee
	alw (!((next(steer_0) & next(steer_1))));
guarantee
	 (!((parkCommand_0 & parkCommand_1)));
guarantee
	alw (!((next(parkCommand_0) & next(parkCommand_1))));
guarantee
	 (!(((spec_policy_0 & spec_policy_1) & !(spec_policy_2))));
guarantee
	alw (!(((next(spec_policy_0) & next(spec_policy_1)) & !(next(spec_policy_2)))));
guarantee
	 (!(((spec_policy_0 & spec_policy_1) & spec_policy_2)));
guarantee
	alw (!(((next(spec_policy_0) & next(spec_policy_1)) & next(spec_policy_2))));
guarantee
	 ((((((!(spec_policy_0) & !(spec_policy_1)) & !(spec_policy_2)) | ((!(spec_policy_0) & !(spec_policy_1)) & spec_policy_2)) & obstacle_0) -> (!(throttle_0) & throttle_1)));
guarantee
	alw ((((((!(next(spec_policy_0)) & !(next(spec_policy_1))) & !(next(spec_policy_2))) | ((!(next(spec_policy_0)) & !(next(spec_policy_1))) & next(spec_policy_2))) & next(obstacle_0)) -> (!(next(throttle_0)) & next(throttle_1))));
guarantee
	 ((obstacle_0 -> !((!(throttle_0) & !(throttle_1)))));
guarantee
	alw ((next(obstacle_0) -> !((!(next(throttle_0)) & !(next(throttle_1))))));
guarantee
	 (((sideSense_0 & !(sideSense_1)) -> !((((!(steer_0) & !(steer_1)) & !(throttle_0)) & !(throttle_1)))));
guarantee
	alw (((next(sideSense_0) & !(next(sideSense_1))) -> !((((!(next(steer_0)) & !(next(steer_1))) & !(next(throttle_0))) & !(next(throttle_1))))));
guarantee
	 ((obstacle_0 -> (!(parkCommand_0) & parkCommand_1)));
guarantee
	alw ((next(obstacle_0) -> (!(next(parkCommand_0)) & next(parkCommand_1))));
guarantee
	 ((((!(spec_policy_0) & !(spec_policy_1)) & !(spec_policy_2)) -> (!(throttle_0) | throttle_1)));
guarantee
	alw ((((!(next(spec_policy_0)) & !(next(spec_policy_1))) & !(next(spec_policy_2))) -> (!(next(throttle_0)) | next(throttle_1))));

assumption
	 (eNV_CONSTRAINT_0_respondsTo_responded);
assumption
	alw ((next(eNV_CONSTRAINT_0_respondsTo_responded) <-> (!(obstacle_0) | (eNV_CONSTRAINT_0_respondsTo_responded & !((!(throttle_0) & throttle_1))))));

