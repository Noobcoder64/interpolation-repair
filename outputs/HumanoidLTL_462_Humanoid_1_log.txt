Parsing...done
Parsing...done
Removing non-boolean ITEs...done
Removing non-boolean ITEs...done
Canonizing...done
Canonizing...done
Converting formula to CNF...done
Converting formula to CNF...done

Solving time: 0.001139 sec
Original proof size: 25
Computing interpolant #1...done
Interpolant #1 written to INTERP.1.msat

DPLL Engine Statistics:
Atoms: 104 (39 bool, 0 theory, 65 cnf) 
Clauses: 120
Avg clause length: 2.3
Restarts: 0
Decisions: 0
All propagations: 62
All conflicts: 0

Theory Solvers Statistics:
------------------------------------
Total time: 0.001 sec
Memory used: 22.949 MBytes

unsat
=== INPUT VARS ===
obstacle_0
inputMoveMode_0
inputMoveMode_1
inputMoveMode_2
button_0
pREV_aux_0
pREV_aux_1
=== OUTPUT VARS ===
leftMotor_0
leftMotor_1
leftMotor_2
rightMotor_0
rightMotor_1
rightMotor_2
headMotor_0
headMotor_1
outputMoveMode_0
outputMoveMode_1
outputMoveMode_2
=== ASSUMPTIONS ===
(!(((inputMoveMode_0&!(inputMoveMode_1))&inputMoveMode_2)))
G(!(((X(inputMoveMode_0)&!(X(inputMoveMode_1)))&X(inputMoveMode_2))))
(!(((inputMoveMode_0&inputMoveMode_1)&!(inputMoveMode_2))))
G(!(((X(inputMoveMode_0)&X(inputMoveMode_1))&!(X(inputMoveMode_2)))))
(!(((inputMoveMode_0&inputMoveMode_1)&inputMoveMode_2)))
G(!(((X(inputMoveMode_0)&X(inputMoveMode_1))&X(inputMoveMode_2))))
(!(pREV_aux_0))
G((X(pREV_aux_0)<->((!(inputMoveMode_0)&inputMoveMode_1)&inputMoveMode_2)))
(!(pREV_aux_1))
G((X(pREV_aux_1)<->((inputMoveMode_0|!(inputMoveMode_1))|!(inputMoveMode_2))))
=== GUARANTEES ===
(!(((outputMoveMode_0&!(outputMoveMode_1))&outputMoveMode_2)))
G(!(((X(outputMoveMode_0)&!(X(outputMoveMode_1)))&X(outputMoveMode_2))))
(!(((outputMoveMode_0&outputMoveMode_1)&!(outputMoveMode_2))))
G(!(((X(outputMoveMode_0)&X(outputMoveMode_1))&!(X(outputMoveMode_2)))))
(!(((outputMoveMode_0&outputMoveMode_1)&outputMoveMode_2)))
G(!(((X(outputMoveMode_0)&X(outputMoveMode_1))&X(outputMoveMode_2))))
(((((!(inputMoveMode_0)&!(inputMoveMode_1))&!(inputMoveMode_2))&obstacle_0)->((((((((!(outputMoveMode_0)&outputMoveMode_1)&!(outputMoveMode_2))&leftMotor_0)&!(leftMotor_1))&leftMotor_2)&rightMotor_0)&!(rightMotor_1))&rightMotor_2)))
G(((((!(X(inputMoveMode_0))&!(X(inputMoveMode_1)))&!(X(inputMoveMode_2)))&X(obstacle_0))->((((((((!(X(outputMoveMode_0))&X(outputMoveMode_1))&!(X(outputMoveMode_2)))&X(leftMotor_0))&!(X(leftMotor_1)))&X(leftMotor_2))&X(rightMotor_0))&!(X(rightMotor_1)))&X(rightMotor_2))))
(((((!(inputMoveMode_0)&!(inputMoveMode_1))&inputMoveMode_2)&!(obstacle_0))->((((((((!(outputMoveMode_0)&!(outputMoveMode_1))&!(outputMoveMode_2))&!(leftMotor_0))&!(leftMotor_1))&!(leftMotor_2))&!(rightMotor_0))&!(rightMotor_1))&rightMotor_2)))
G(((((!(X(inputMoveMode_0))&!(X(inputMoveMode_1)))&X(inputMoveMode_2))&!(X(obstacle_0)))->((((((((!(X(outputMoveMode_0))&!(X(outputMoveMode_1)))&!(X(outputMoveMode_2)))&!(X(leftMotor_0)))&!(X(leftMotor_1)))&!(X(leftMotor_2)))&!(X(rightMotor_0)))&!(X(rightMotor_1)))&X(rightMotor_2))))
((((((!(inputMoveMode_0)&!(inputMoveMode_1))&!(inputMoveMode_2))&!(button_0))&pREV_aux_0)->(((((leftMotor_0&leftMotor_1)&!(leftMotor_2))&rightMotor_0)&rightMotor_1)&!(rightMotor_2))))
G((((((!(X(inputMoveMode_0))&!(X(inputMoveMode_1)))&!(X(inputMoveMode_2)))&!(X(button_0)))&X(pREV_aux_0))->(((((X(leftMotor_0)&X(leftMotor_1))&!(X(leftMotor_2)))&X(rightMotor_0))&X(rightMotor_1))&!(X(rightMotor_2)))))
(((((((!(inputMoveMode_0)&!(inputMoveMode_1))&!(inputMoveMode_2))&!(obstacle_0))&!(button_0))&pREV_aux_1)->(((((!(leftMotor_0)&!(leftMotor_1))&!(leftMotor_2))&!(rightMotor_0))&!(rightMotor_1))&!(rightMotor_2))))
G(((((((!(X(inputMoveMode_0))&!(X(inputMoveMode_1)))&!(X(inputMoveMode_2)))&!(X(obstacle_0)))&!(X(button_0)))&X(pREV_aux_1))->(((((!(X(leftMotor_0))&!(X(leftMotor_1)))&!(X(leftMotor_2)))&!(X(rightMotor_0)))&!(X(rightMotor_1)))&!(X(rightMotor_2)))))
((obstacle_0->!(((!(outputMoveMode_0)&!(outputMoveMode_1))&!(outputMoveMode_2)))))
G((X(obstacle_0)->!(((!(X(outputMoveMode_0))&!(X(outputMoveMode_1)))&!(X(outputMoveMode_2))))))
((((!(inputMoveMode_0)&inputMoveMode_1)&!(inputMoveMode_2))<->((!(outputMoveMode_0)&outputMoveMode_1)&outputMoveMode_2)))
G((((!(X(inputMoveMode_0))&X(inputMoveMode_1))&!(X(inputMoveMode_2)))<->((!(X(outputMoveMode_0))&X(outputMoveMode_1))&X(outputMoveMode_2))))
((((!(inputMoveMode_0)&inputMoveMode_1)&!(inputMoveMode_2))->(((((!(leftMotor_0)&!(leftMotor_1))&!(leftMotor_2))&!(rightMotor_0))&rightMotor_1)&rightMotor_2)))
G((((!(X(inputMoveMode_0))&X(inputMoveMode_1))&!(X(inputMoveMode_2)))->(((((!(X(leftMotor_0))&!(X(leftMotor_1)))&!(X(leftMotor_2)))&!(X(rightMotor_0)))&X(rightMotor_1))&X(rightMotor_2))))
((((!(inputMoveMode_0)&inputMoveMode_1)&inputMoveMode_2)->(((((!(leftMotor_0)&!(leftMotor_1))&leftMotor_2)&rightMotor_0)&!(rightMotor_1))&!(rightMotor_2))))
G((((!(X(inputMoveMode_0))&X(inputMoveMode_1))&X(inputMoveMode_2))->(((((!(X(leftMotor_0))&!(X(leftMotor_1)))&X(leftMotor_2))&X(rightMotor_0))&!(X(rightMotor_1)))&!(X(rightMotor_2)))))
((!((((!(inputMoveMode_0)&inputMoveMode_1)&!(inputMoveMode_2))|((!(inputMoveMode_0)&inputMoveMode_1)&inputMoveMode_2)))->!(((((leftMotor_0&!(leftMotor_1))&!(leftMotor_2))|((rightMotor_0&!(rightMotor_1))&!(rightMotor_2)))|(((((!(leftMotor_0)&leftMotor_1)&leftMotor_2)&!(rightMotor_0))&rightMotor_1)&rightMotor_2)))))
G((!((((!(X(inputMoveMode_0))&X(inputMoveMode_1))&!(X(inputMoveMode_2)))|((!(X(inputMoveMode_0))&X(inputMoveMode_1))&X(inputMoveMode_2))))->!(((((X(leftMotor_0)&!(X(leftMotor_1)))&!(X(leftMotor_2)))|((X(rightMotor_0)&!(X(rightMotor_1)))&!(X(rightMotor_2))))|(((((!(X(leftMotor_0))&X(leftMotor_1))&X(leftMotor_2))&!(X(rightMotor_0)))&X(rightMotor_1))&X(rightMotor_2))))))
(((((!(inputMoveMode_0)&inputMoveMode_1)&!(inputMoveMode_2))|((!(inputMoveMode_0)&inputMoveMode_1)&inputMoveMode_2))->(headMotor_0&!(headMotor_1))))
G(((((!(X(inputMoveMode_0))&X(inputMoveMode_1))&!(X(inputMoveMode_2)))|((!(X(inputMoveMode_0))&X(inputMoveMode_1))&X(inputMoveMode_2)))->(X(headMotor_0)&!(X(headMotor_1)))))
(((((!(inputMoveMode_0)&inputMoveMode_1)&inputMoveMode_2)&!(obstacle_0))->((!(outputMoveMode_0)&!(outputMoveMode_1))&!(outputMoveMode_2))))
G(((((!(X(inputMoveMode_0))&X(inputMoveMode_1))&X(inputMoveMode_2))&!(X(obstacle_0)))->((!(X(outputMoveMode_0))&!(X(outputMoveMode_1)))&!(X(outputMoveMode_2)))))
(((((((inputMoveMode_0&!(inputMoveMode_1))&!(inputMoveMode_2))&outputMoveMode_0)&!(outputMoveMode_1))&!(outputMoveMode_2))->(((((((!(rightMotor_0)&rightMotor_1)&!(rightMotor_2))&leftMotor_0)&leftMotor_1)&leftMotor_2)&headMotor_0)&headMotor_1)))
G(((((((X(inputMoveMode_0)&!(X(inputMoveMode_1)))&!(X(inputMoveMode_2)))&X(outputMoveMode_0))&!(X(outputMoveMode_1)))&!(X(outputMoveMode_2)))->(((((((!(X(rightMotor_0))&X(rightMotor_1))&!(X(rightMotor_2)))&X(leftMotor_0))&X(leftMotor_1))&X(leftMotor_2))&X(headMotor_0))&X(headMotor_1))))
((!(button_0)->((((outputMoveMode_0<->inputMoveMode_0)&(outputMoveMode_1<->inputMoveMode_1))&(outputMoveMode_2<->inputMoveMode_2))|((!(inputMoveMode_0)|inputMoveMode_1)|inputMoveMode_2))))
G((!(X(button_0))->((((X(outputMoveMode_0)<->X(inputMoveMode_0))&(X(outputMoveMode_1)<->X(inputMoveMode_1)))&(X(outputMoveMode_2)<->X(inputMoveMode_2)))|((!(X(inputMoveMode_0))|X(inputMoveMode_1))|X(inputMoveMode_2)))))
((((((button_0&!(inputMoveMode_0))&!(inputMoveMode_1))&!(inputMoveMode_2))&!(obstacle_0))->((((((((outputMoveMode_0&!(outputMoveMode_1))&!(outputMoveMode_2))&leftMotor_0)&!(leftMotor_1))&leftMotor_2)&rightMotor_0)&!(rightMotor_1))&rightMotor_2)))
G((((((X(button_0)&!(X(inputMoveMode_0)))&!(X(inputMoveMode_1)))&!(X(inputMoveMode_2)))&!(X(obstacle_0)))->((((((((X(outputMoveMode_0)&!(X(outputMoveMode_1)))&!(X(outputMoveMode_2)))&X(leftMotor_0))&!(X(leftMotor_1)))&X(leftMotor_2))&X(rightMotor_0))&!(X(rightMotor_1)))&X(rightMotor_2))))
((((((button_0&inputMoveMode_0)&!(inputMoveMode_1))&!(inputMoveMode_2))&!(obstacle_0))->((((((((!(outputMoveMode_0)&!(outputMoveMode_1))&!(outputMoveMode_2))&leftMotor_0)&leftMotor_1)&!(leftMotor_2))&rightMotor_0)&rightMotor_1)&!(rightMotor_2))))
G((((((X(button_0)&X(inputMoveMode_0))&!(X(inputMoveMode_1)))&!(X(inputMoveMode_2)))&!(X(obstacle_0)))->((((((((!(X(outputMoveMode_0))&!(X(outputMoveMode_1)))&!(X(outputMoveMode_2)))&X(leftMotor_0))&X(leftMotor_1))&!(X(leftMotor_2)))&X(rightMotor_0))&X(rightMotor_1))&!(X(rightMotor_2)))))
((!((button_0|((inputMoveMode_0&!(inputMoveMode_1))&!(inputMoveMode_2))))->!(((outputMoveMode_0&!(outputMoveMode_1))&!(outputMoveMode_2)))))
G((!((X(button_0)|((X(inputMoveMode_0)&!(X(inputMoveMode_1)))&!(X(inputMoveMode_2)))))->!(((X(outputMoveMode_0)&!(X(outputMoveMode_1)))&!(X(outputMoveMode_2))))))
+++++++++++ inputs/SYNTECH15-1UNREAL/HumanoidLTL_462_Humanoid_1.spectra
Resetting temp...
Reset complete!
++++ ELAPSED TIME 0
++++ QUEUE LENGTH 0
++++ Solutions 0
++++ Duplicates 0
++++ Node number 1
++++ Refinement []
++++ Length 0
++ REALIZABILITY CHECK
++ COUNTERSTRATEGY COMPUTATION - REFINEMENT GENERATION
b"Using BDD Package: CUDDFactory, Version: CUDD 3.0
Using BDD Package: CUDDFactory, Version: CUDD 3.0
0    [main] ERROR xt.validation.ResourceValidatorImpl  - The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
java.util.MissingResourceException: The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
at org.eclipse.emf.common.util.DelegatingResourceLocator.delegatedGetString(DelegatingResourceLocator.java:586)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:450)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:605)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:597)
at org.eclipse.emf.ecore.util.Diagnostician.createDefaultDiagnostic(Diagnostician.java:110)
at org.eclipse.emf.ecore.util.Diagnostician.validate(Diagnostician.java:139)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:147)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:125)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:91)
at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getSpectraModel(SpectraInputProviderNoIDE.java:166)
at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getGameInput(SpectraInputProviderNoIDE.java:109)
at tau.smlab.syntech.Spectra.cli.SpectraCliTool.main(SpectraCliTool.java:162)
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 636
Nodes table size: 2044
Result: Specification is unrealizable
extract strategy - Start

extract strategy - End
Initial State 0 <obstacle_0:false, inputMoveMode_0:false, inputMoveMode_1:true, inputMoveMode_2:true, button_0:false, pREV_aux_0:false, pREV_aux_1:false, leftMotor_0:false, leftMotor_1:false, leftMotor_2:true, rightMotor_0:true, rightMotor_1:false, rightMotor_2:false, headMotor_0:true, headMotor_1:false, outputMoveMode_0:false, outputMoveMode_1:false, outputMoveMode_2:false>
With successors : 1
State 1 <obstacle_0:true, inputMoveMode_0:false, inputMoveMode_1:false, inputMoveMode_2:false, button_0:false, pREV_aux_0:true, pREV_aux_1:false>
With no successors.
"
INI:  <counterstrategy.State object at 0x7ff68e292460>
TRANSIENT:  [<counterstrategy.State object at 0x7ff5fbdc2dc0>]
=== COUNTERRUN ===
S0 -> S1

LTL TOKENS:  ['(', '!', '(', '(', '(', 'X', '(', 'inputMoveMode_0', ')', '&', '!', '(', 'X', '(', 'inputMoveMode_1', ')', ')', ')', '&', 'X', '(', 'inputMoveMode_2', ')', ')', ')', ')']
LTL TOKENS:  ['(', '!', '(', '(', '(', 'X', '(', 'inputMoveMode_0', ')', '&', 'X', '(', 'inputMoveMode_1', ')', ')', '&', '!', '(', 'X', '(', 'inputMoveMode_2', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '!', '(', '(', '(', 'X', '(', 'inputMoveMode_0', ')', '&', 'X', '(', 'inputMoveMode_1', ')', ')', '&', 'X', '(', 'inputMoveMode_2', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', 'X', '(', 'pREV_aux_0', ')', '<->', '(', '(', '!', '(', 'inputMoveMode_0', ')', '&', 'inputMoveMode_1', ')', '&', 'inputMoveMode_2', ')', ')', ')']
LTL TOKENS:  ['(', '(', 'X', '(', 'pREV_aux_1', ')', '<->', '(', '(', 'inputMoveMode_0', '|', '!', '(', 'inputMoveMode_1', ')', ')', '|', '!', '(', 'inputMoveMode_2', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '(', '(', '(', '!', '(', 'X', '(', 'inputMoveMode_0', ')', ')', '&', '!', '(', 'X', '(', 'inputMoveMode_1', ')', ')', ')', '&', '!', '(', 'X', '(', 'inputMoveMode_2', ')', ')', ')', '&', 'X', '(', 'obstacle_0', ')', ')', '->', '(', '(', '(', '(', '(', '(', '(', '(', '!', '(', 'X', '(', 'outputMoveMode_0', ')', ')', '&', 'X', '(', 'outputMoveMode_1', ')', ')', '&', '!', '(', 'X', '(', 'outputMoveMode_2', ')', ')', ')', '&', 'X', '(', 'leftMotor_0', ')', ')', '&', '!', '(', 'X', '(', 'leftMotor_1', ')', ')', ')', '&', 'X', '(', 'leftMotor_2', ')', ')', '&', 'X', '(', 'rightMotor_0', ')', ')', '&', '!', '(', 'X', '(', 'rightMotor_1', ')', ')', ')', '&', 'X', '(', 'rightMotor_2', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '(', '(', '(', '(', '!', '(', 'X', '(', 'inputMoveMode_0', ')', ')', '&', '!', '(', 'X', '(', 'inputMoveMode_1', ')', ')', ')', '&', '!', '(', 'X', '(', 'inputMoveMode_2', ')', ')', ')', '&', '!', '(', 'X', '(', 'button_0', ')', ')', ')', '&', 'X', '(', 'pREV_aux_0', ')', ')', '->', '(', '(', '(', '(', '(', 'X', '(', 'leftMotor_0', ')', '&', 'X', '(', 'leftMotor_1', ')', ')', '&', '!', '(', 'X', '(', 'leftMotor_2', ')', ')', ')', '&', 'X', '(', 'rightMotor_0', ')', ')', '&', 'X', '(', 'rightMotor_1', ')', ')', '&', '!', '(', 'X', '(', 'rightMotor_2', ')', ')', ')', ')', ')']
=== UNREALIZABLE CORE ===
G(((((!(X(inputMoveMode_0))&!(X(inputMoveMode_1)))&!(X(inputMoveMode_2)))&X(obstacle_0))->((((((((!(X(outputMoveMode_0))&X(outputMoveMode_1))&!(X(outputMoveMode_2)))&X(leftMotor_0))&!(X(leftMotor_1)))&X(leftMotor_2))&X(rightMotor_0))&!(X(rightMotor_1)))&X(rightMotor_2))))
G((((((!(X(inputMoveMode_0))&!(X(inputMoveMode_1)))&!(X(inputMoveMode_2)))&!(X(button_0)))&X(pREV_aux_0))->(((((X(leftMotor_0)&X(leftMotor_1))&!(X(leftMotor_2)))&X(rightMotor_0))&X(rightMotor_1))&!(X(rightMotor_2)))))

=== ASSUMPTIONS BOOLEAN ===
((!(((inputMoveMode_0__S0&!(inputMoveMode_1__S0))&inputMoveMode_2__S0)))) & ((!((((inputMoveMode_0__S1)&!((inputMoveMode_1__S1)))&(inputMoveMode_2__S1))))) & ((!((((inputMoveMode_0__Sf)&!((inputMoveMode_1__Sf)))&(inputMoveMode_2__Sf))))) & ((!(((inputMoveMode_0__S0&inputMoveMode_1__S0)&!(inputMoveMode_2__S0))))) & ((!((((inputMoveMode_0__S1)&(inputMoveMode_1__S1))&!((inputMoveMode_2__S1)))))) & ((!((((inputMoveMode_0__Sf)&(inputMoveMode_1__Sf))&!((inputMoveMode_2__Sf)))))) & ((!(((inputMoveMode_0__S0&inputMoveMode_1__S0)&inputMoveMode_2__S0)))) & ((!((((inputMoveMode_0__S1)&(inputMoveMode_1__S1))&(inputMoveMode_2__S1))))) & ((!((((inputMoveMode_0__Sf)&(inputMoveMode_1__Sf))&(inputMoveMode_2__Sf))))) & ((!(pREV_aux_0__S0))) & ((((pREV_aux_0__S1)<->((!(inputMoveMode_0__S0)&inputMoveMode_1__S0)&inputMoveMode_2__S0)))) & ((((pREV_aux_0__Sf)<->((!(inputMoveMode_0__Sf)&inputMoveMode_1__Sf)&inputMoveMode_2__Sf)))) & ((!(pREV_aux_1__S0))) & ((((pREV_aux_1__S1)<->((inputMoveMode_0__S0|!(inputMoveMode_1__S0))|!(inputMoveMode_2__S0))))) & ((((pREV_aux_1__Sf)<->((inputMoveMode_0__Sf|!(inputMoveMode_1__Sf))|!(inputMoveMode_2__Sf)))))

=== VALUATIONS BOOLEAN ===
!inputMoveMode_0__S0 & inputMoveMode_1__S0 & !button_0__S0 & !obstacle_0__S0 & inputMoveMode_2__S0 & !pREV_aux_1__S0 & !pREV_aux_0__S0 & !inputMoveMode_0__S1 & !inputMoveMode_2__S1 & !button_0__S1 & obstacle_0__S1 & !pREV_aux_1__S1 & !inputMoveMode_1__S1 & pREV_aux_0__S1

=== GUARANTEES BOOLEAN ===
((((((!((inputMoveMode_0__S1))&!((inputMoveMode_1__S1)))&!((inputMoveMode_2__S1)))&(obstacle_0__S1))->((((((((!((outputMoveMode_0__S1))&(outputMoveMode_1__S1))&!((outputMoveMode_2__S1)))&(leftMotor_0__S1))&!((leftMotor_1__S1)))&(leftMotor_2__S1))&(rightMotor_0__S1))&!((rightMotor_1__S1)))&(rightMotor_2__S1))))) & ((((((!((inputMoveMode_0__Sf))&!((inputMoveMode_1__Sf)))&!((inputMoveMode_2__Sf)))&(obstacle_0__Sf))->((((((((!((outputMoveMode_0__Sf))&(outputMoveMode_1__Sf))&!((outputMoveMode_2__Sf)))&(leftMotor_0__Sf))&!((leftMotor_1__Sf)))&(leftMotor_2__Sf))&(rightMotor_0__Sf))&!((rightMotor_1__Sf)))&(rightMotor_2__Sf))))) & (((((((!((inputMoveMode_0__S1))&!((inputMoveMode_1__S1)))&!((inputMoveMode_2__S1)))&!((button_0__S1)))&(pREV_aux_0__S1))->((((((leftMotor_0__S1)&(leftMotor_1__S1))&!((leftMotor_2__S1)))&(rightMotor_0__S1))&(rightMotor_1__S1))&!((rightMotor_2__S1)))))) & (((((((!((inputMoveMode_0__Sf))&!((inputMoveMode_1__Sf)))&!((inputMoveMode_2__Sf)))&!((button_0__Sf)))&(pREV_aux_0__Sf))->((((((leftMotor_0__Sf)&(leftMotor_1__Sf))&!((leftMotor_2__Sf)))&(rightMotor_0__Sf))&(rightMotor_1__Sf))&!((rightMotor_2__Sf))))))


=== INTERPOLANT ===
obstacle_0__S1 & !button_0__S1 & !inputMoveMode_0__S1 & !inputMoveMode_2__S1 & !inputMoveMode_1__S1 & pREV_aux_0__S1

=== STATE COMPONENTS ===
{'S1': '!inputMoveMode_2 & !inputMoveMode_1 & !inputMoveMode_0 & pREV_aux_0 & !button_0 & obstacle_0'}

=== Refinements === 
['G(!(!inputMoveMode_2 & !inputMoveMode_1 & !inputMoveMode_0 & pREV_aux_0 & !button_0 & obstacle_0))']
++++ ELAPSED TIME 2.8064766949974
++++ QUEUE LENGTH 0
++++ Solutions 0
++++ Duplicates 0
++++ Node number 2
++++ Refinement ['G(!(!inputMoveMode_2 & !inputMoveMode_1 & !inputMoveMode_0 & pREV_aux_0 & !button_0 & obstacle_0))']
++++ Length 1
++ REALIZABILITY CHECK
++ REALIZABLE REFINEMENT: SAT CHECK
