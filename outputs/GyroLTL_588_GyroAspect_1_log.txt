Parsing...done
Parsing...done
Removing non-boolean ITEs...done
Removing non-boolean ITEs...done
Canonizing...done
Canonizing...done
The formula is already in CNF
Converting formula to CNF...done
Searching...
s

DPLL Engine Statistics:
Atoms: 50 (32 bool, 0 theory, 18 cnf) 
Clauses: 48
Avg clause length: 2.125
Restarts: 1
Decisions: 5
All propagations: 50
All conflicts: 0

Theory Solvers Statistics:
------------------------------------
Total time: 0.001 sec
Memory used: 22.820 MBytes

sat
=== INPUT VARS ===
distSense_0
isReady
bluetoothCmd_0
bluetoothCmd_1
bluetoothCmd_2
balancerStatus_0
=== OUTPUT VARS ===
balancer_0
balancer_1
balancer_2
bluetoothStatus_0
=== ASSUMPTIONS ===
G(F(isReady))
(!(isReady))
(((!(bluetoothCmd_0)&!(bluetoothCmd_1))&!(bluetoothCmd_2)))
(!(balancerStatus_0))
G((isReady->X(isReady)))
(!(((bluetoothCmd_0&bluetoothCmd_1)&!(bluetoothCmd_2))))
G(!(((X(bluetoothCmd_0)&X(bluetoothCmd_1))&!(X(bluetoothCmd_2)))))
(!(((bluetoothCmd_0&bluetoothCmd_1)&bluetoothCmd_2)))
G(!(((X(bluetoothCmd_0)&X(bluetoothCmd_1))&X(bluetoothCmd_2))))
=== GUARANTEES ===
(((!(balancer_0)&!(balancer_1))&!(balancer_2)))
G(F((((!(bluetoothCmd_0))&!(bluetoothCmd_1))&!(bluetoothCmd_2))->((!(balancer_0)&!(balancer_1))&balancer_2)))
G((((!(bluetoothCmd_0)&!(bluetoothCmd_1))&!(bluetoothCmd_2))->(((!(balancer_0)&!(balancer_1))&balancer_2)->(((!(X(bluetoothCmd_0))&!(X(bluetoothCmd_1)))&!(X(bluetoothCmd_2)))->!((((X(balancer_0)&!(X(balancer_1)))&!(X(balancer_2)))|((!(X(balancer_0))&X(balancer_1))&X(balancer_2))))))))
G((((!(bluetoothCmd_0)&!(bluetoothCmd_1))&!(bluetoothCmd_2))->(((((distSense_0&!(balancer_0))&!(balancer_1))&!(balancer_2))&isReady)->!(((!(X(balancer_0))&!(X(balancer_1)))&!(X(balancer_2)))))))
(!(((balancer_0&!(balancer_1))&balancer_2)))
G(!(((X(balancer_0)&!(X(balancer_1)))&X(balancer_2))))
(!(((balancer_0&balancer_1)&!(balancer_2))))
G(!(((X(balancer_0)&X(balancer_1))&!(X(balancer_2)))))
(!(((balancer_0&balancer_1)&balancer_2)))
G(!(((X(balancer_0)&X(balancer_1))&X(balancer_2))))
((!(isReady)->((!(balancer_0)&!(balancer_1))&!(balancer_2))))
G((!(X(isReady))->((!(X(balancer_0))&!(X(balancer_1)))&!(X(balancer_2)))))
((((!(balancer_0)&!(balancer_1))&balancer_2)->!(distSense_0)))
G((((!(X(balancer_0))&!(X(balancer_1)))&X(balancer_2))->!(X(distSense_0))))
((((!(bluetoothCmd_0)&!(bluetoothCmd_1))&!(bluetoothCmd_2))->((!(distSense_0)&isReady)->((!(balancer_0)&!(balancer_1))&balancer_2))))
G((((!(X(bluetoothCmd_0))&!(X(bluetoothCmd_1)))&!(X(bluetoothCmd_2)))->((!(X(distSense_0))&X(isReady))->((!(X(balancer_0))&!(X(balancer_1)))&X(balancer_2)))))
((((!(bluetoothCmd_0)&bluetoothCmd_1)&!(bluetoothCmd_2))->((!(distSense_0)&isReady)->((!(balancer_0)&!(balancer_1))&balancer_2))))
G((((!(X(bluetoothCmd_0))&X(bluetoothCmd_1))&!(X(bluetoothCmd_2)))->((!(X(distSense_0))&X(isReady))->((!(X(balancer_0))&!(X(balancer_1)))&X(balancer_2)))))
((((!(bluetoothCmd_0)&bluetoothCmd_1)&bluetoothCmd_2)->(isReady->((!(balancer_0)&balancer_1)&!(balancer_2)))))
G((((!(X(bluetoothCmd_0))&X(bluetoothCmd_1))&X(bluetoothCmd_2))->(X(isReady)->((!(X(balancer_0))&X(balancer_1))&!(X(balancer_2))))))
((((bluetoothCmd_0&!(bluetoothCmd_1))&bluetoothCmd_2)->(isReady->((balancer_0&!(balancer_1))&!(balancer_2)))))
G((((X(bluetoothCmd_0)&!(X(bluetoothCmd_1)))&X(bluetoothCmd_2))->(X(isReady)->((X(balancer_0)&!(X(balancer_1)))&!(X(balancer_2))))))
((((bluetoothCmd_0&!(bluetoothCmd_1))&!(bluetoothCmd_2))->(isReady->((!(balancer_0)&balancer_1)&balancer_2))))
G((((X(bluetoothCmd_0)&!(X(bluetoothCmd_1)))&!(X(bluetoothCmd_2)))->(X(isReady)->((!(X(balancer_0))&X(balancer_1))&X(balancer_2)))))
((((!(bluetoothCmd_0)&!(bluetoothCmd_1))&bluetoothCmd_2)->(isReady->((!(balancer_0)&!(balancer_1))&!(balancer_2)))))
G((((!(X(bluetoothCmd_0))&!(X(bluetoothCmd_1)))&X(bluetoothCmd_2))->(X(isReady)->((!(X(balancer_0))&!(X(balancer_1)))&!(X(balancer_2))))))
((!(balancerStatus_0)->!(bluetoothStatus_0)))
G((!(X(balancerStatus_0))->!(X(bluetoothStatus_0))))
((balancerStatus_0->bluetoothStatus_0))
G((X(balancerStatus_0)->X(bluetoothStatus_0)))
+++++++++++ inputs/SYNTECH15-1UNREAL/GyroLTL_588_GyroAspect_1.spectra
Resetting temp...
Reset complete!
++++ ELAPSED TIME 0
++++ QUEUE LENGTH 0
++++ Solutions 0
++++ Duplicates 0
++++ Node number 1
++++ Refinement []
++++ Length 0
++ REALIZABILITY CHECK
++ COUNTERSTRATEGY COMPUTATION - REFINEMENT GENERATION
b"Using BDD Package: CUDDFactory, Version: CUDD 3.0
Using BDD Package: CUDDFactory, Version: CUDD 3.0
0    [main] ERROR xt.validation.ResourceValidatorImpl  - The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
java.util.MissingResourceException: The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
at org.eclipse.emf.common.util.DelegatingResourceLocator.delegatedGetString(DelegatingResourceLocator.java:586)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:450)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:605)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:597)
at org.eclipse.emf.ecore.util.Diagnostician.createDefaultDiagnostic(Diagnostician.java:110)
at org.eclipse.emf.ecore.util.Diagnostician.validate(Diagnostician.java:139)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:147)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:125)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:91)
at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getSpectraModel(SpectraInputProviderNoIDE.java:166)
at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getGameInput(SpectraInputProviderNoIDE.java:109)
at tau.smlab.syntech.Spectra.cli.SpectraCliTool.main(SpectraCliTool.java:162)
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 327
Nodes table size: 1022
Result: Specification is unrealizable
extract strategy - Start

extract strategy - End
Initial State 0 <distSense_0:false, isReady:false, bluetoothCmd_0:false, bluetoothCmd_1:false, bluetoothCmd_2:false, balancerStatus_0:false, balancer_0:false, balancer_1:false, balancer_2:false, bluetoothStatus_0:false>
With successors : 1, 2, 3, 4
State 1 <distSense_0:true, isReady:true, bluetoothCmd_0:false, bluetoothCmd_1:false, bluetoothCmd_2:false, balancerStatus_0:false, balancer_0:false, balancer_1:false, balancer_2:false, bluetoothStatus_0:false>
With successors : 5
State 2 <distSense_0:true, isReady:true, bluetoothCmd_0:false, bluetoothCmd_1:false, bluetoothCmd_2:false, balancerStatus_0:false, balancer_0:false, balancer_1:true, balancer_2:false, bluetoothStatus_0:false>
With successors : 1, 2, 3, 4
State 3 <distSense_0:true, isReady:true, bluetoothCmd_0:false, bluetoothCmd_1:false, bluetoothCmd_2:false, balancerStatus_0:false, balancer_0:false, balancer_1:true, balancer_2:true, bluetoothStatus_0:false>
With successors : 1, 2, 3, 4
State 4 <distSense_0:true, isReady:true, bluetoothCmd_0:false, bluetoothCmd_1:false, bluetoothCmd_2:false, balancerStatus_0:false, balancer_0:true, balancer_1:false, balancer_2:false, bluetoothStatus_0:false>
With successors : 1, 2, 3, 4
State 5 <distSense_0:false, isReady:true, bluetoothCmd_0:false, bluetoothCmd_1:false, bluetoothCmd_2:true, balancerStatus_0:false>
With no successors.
"
INI:  <counterstrategy.State object at 0x7fcf62e08fa0>
TRANSIENT:  [<counterstrategy.State object at 0x7fcfe53dae20>, <counterstrategy.State object at 0x7fcf626b2a00>]
=== COUNTERRUN ===
S0 -> S1 -> S5

LTL TOKENS:  ['(', '(', 'isReady', '->', 'X', '(', 'isReady', ')', ')', ')']
LTL TOKENS:  ['(', '!', '(', '(', '(', 'X', '(', 'bluetoothCmd_0', ')', '&', 'X', '(', 'bluetoothCmd_1', ')', ')', '&', '!', '(', 'X', '(', 'bluetoothCmd_2', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '!', '(', '(', '(', 'X', '(', 'bluetoothCmd_0', ')', '&', 'X', '(', 'bluetoothCmd_1', ')', ')', '&', 'X', '(', 'bluetoothCmd_2', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '(', '(', '!', '(', 'X', '(', 'balancer_0', ')', ')', '&', '!', '(', 'X', '(', 'balancer_1', ')', ')', ')', '&', 'X', '(', 'balancer_2', ')', ')', '->', '!', '(', 'X', '(', 'distSense_0', ')', ')', ')', ')']
=== UNREALIZABLE CORE ===
G(F((((!(bluetoothCmd_0))&!(bluetoothCmd_1))&!(bluetoothCmd_2))->((!(balancer_0)&!(balancer_1))&balancer_2)))
G((((!(X(balancer_0))&!(X(balancer_1)))&X(balancer_2))->!(X(distSense_0))))

=== ASSUMPTIONS BOOLEAN ===
((!(isReady__S0))) & ((((!(bluetoothCmd_0__S0)&!(bluetoothCmd_1__S0))&!(bluetoothCmd_2__S0)))) & ((!(balancerStatus_0__S0))) & (((isReady__S0->(isReady__S1)))) & (((isReady__S1->(isReady__S5)))) & (((isReady__S5->(isReady__Sf)))) & ((!(((bluetoothCmd_0__S0&bluetoothCmd_1__S0)&!(bluetoothCmd_2__S0))))) & ((!((((bluetoothCmd_0__S1)&(bluetoothCmd_1__S1))&!((bluetoothCmd_2__S1)))))) & ((!((((bluetoothCmd_0__S5)&(bluetoothCmd_1__S5))&!((bluetoothCmd_2__S5)))))) & ((!((((bluetoothCmd_0__Sf)&(bluetoothCmd_1__Sf))&!((bluetoothCmd_2__Sf)))))) & ((!(((bluetoothCmd_0__S0&bluetoothCmd_1__S0)&bluetoothCmd_2__S0)))) & ((!((((bluetoothCmd_0__S1)&(bluetoothCmd_1__S1))&(bluetoothCmd_2__S1))))) & ((!((((bluetoothCmd_0__S5)&(bluetoothCmd_1__S5))&(bluetoothCmd_2__S5))))) & ((!((((bluetoothCmd_0__Sf)&(bluetoothCmd_1__Sf))&(bluetoothCmd_2__Sf)))))

=== VALUATIONS BOOLEAN ===
!distSense_0__S0 & !bluetoothCmd_0__S0 & !balancerStatus_0__S0 & !isReady__S0 & !bluetoothCmd_2__S0 & !bluetoothCmd_1__S0 & isReady__S1 & !bluetoothCmd_0__S1 & !balancerStatus_0__S1 & !bluetoothCmd_2__S1 & !balancer_1__S1 & distSense_0__S1 & !balancer_2__S1 & !bluetoothCmd_1__S1 & !balancer_0__S1 & !distSense_0__S5 & bluetoothCmd_2__S5 & isReady__S5 & !bluetoothCmd_0__S5 & !balancerStatus_0__S5 & !bluetoothCmd_1__S5

=== GUARANTEES BOOLEAN ===
(((((!((balancer_0__S1))&!((balancer_1__S1)))&(balancer_2__S1))->!((distSense_0__S1))))) & (((((!((balancer_0__S5))&!((balancer_1__S5)))&(balancer_2__S5))->!((distSense_0__S5))))) & (((((!((balancer_0__Sf))&!((balancer_1__Sf)))&(balancer_2__Sf))->!((distSense_0__Sf)))))

Traceback (most recent call last):
  File "refinement_fifo_search_duplicatecheck.py", line 140, in <module>
    main()
  File "refinement_fifo_search_duplicatecheck.py", line 137, in main
    FifoDuplicateCheckRefinement()
  File "refinement_fifo_search_duplicatecheck.py", line 83, in FifoDuplicateCheckRefinement
    candidate_ref_nodes = cur_node.refine()
  File "/homes/fa1622/interpolation-repair/refinement.py", line 257, in refine
    candidate_refs = self.generateAlternativeRefinements()
  File "/homes/fa1622/interpolation-repair/refinement.py", line 318, in generateAlternativeRefinements
    refinements = interpolation.GenerateAlternativeRefinements(self.counterstrategy, exp.initialGR1Units + self.gr1_units, self.getUnrealizableCore(), exp.inputVarsList, exp.outputVarsList)
  File "/homes/fa1622/interpolation-repair/interpolation.py", line 256, in GenerateAlternativeRefinements
    path = c.extendFinitePath(path)
  File "/homes/fa1622/interpolation-repair/counterstrategy.py", line 757, in extendFinitePath
    last_id = int((path.transient_states[-1].id_state)[2:])
ValueError: invalid literal for int() with base 10: ''
