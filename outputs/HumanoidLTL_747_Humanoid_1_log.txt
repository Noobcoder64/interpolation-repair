Parsing...done
Parsing...done
Removing non-boolean ITEs...done
Removing non-boolean ITEs...done
Canonizing...done
Canonizing...done
Converting formula to CNF...done
Converting formula to CNF...done

Solving time: 0.001027 sec
Original proof size: 7
Computing interpolant #1...done
Interpolant #1 written to INTERP.1.msat

DPLL Engine Statistics:
Atoms: 92 (24 bool, 0 theory, 68 cnf) 
Clauses: 16
Avg clause length: 2
Restarts: 0
Decisions: 0
All propagations: 50
All conflicts: 0

Theory Solvers Statistics:
------------------------------------
Total time: 0.001 sec
Memory used: 22.949 MBytes

unsat
=== INPUT VARS ===
obstacle_0
noise_0
heading_0
button_0
sYS_CONSTRAINT_0_respondsTo_responded
eNV_CONSTRAINT_1_respondsTo_responded
eNV_CONSTRAINT_2_respondsTo_responded
pREV_aux_3
pREV_aux_4
=== OUTPUT VARS ===
leftMotor_0
leftMotor_1
leftMotor_2
rightMotor_0
rightMotor_1
rightMotor_2
headMotor_0
headMotor_1
spec_nextMoveMode_0
spec_nextMoveMode_1
spec_specState_0
spec_specState_1
spec_turnState_0
spec_turnState_1
spec_nextHead_0
=== ASSUMPTIONS ===
(!(heading_0))
G(((pREV_aux_3&obstacle_0)->X(obstacle_0)))
G(((pREV_aux_4&!(obstacle_0))->!(X(obstacle_0))))
G((((!(spec_nextMoveMode_0)&!(spec_nextMoveMode_1))|(!(spec_nextMoveMode_0)&spec_nextMoveMode_1))->(heading_0<->X(heading_0))))
G(F(eNV_CONSTRAINT_1_respondsTo_responded))
G(F(eNV_CONSTRAINT_2_respondsTo_responded))
(sYS_CONSTRAINT_0_respondsTo_responded)
G((X(sYS_CONSTRAINT_0_respondsTo_responded)<->((heading_0<->spec_nextHead_0)|(sYS_CONSTRAINT_0_respondsTo_responded&!(noise_0)))))
(eNV_CONSTRAINT_1_respondsTo_responded)
G((X(eNV_CONSTRAINT_1_respondsTo_responded)<->((!(obstacle_0)&!(X(obstacle_0)))|(eNV_CONSTRAINT_1_respondsTo_responded&!((!(spec_turnState_0)&spec_turnState_1))))))
(eNV_CONSTRAINT_2_respondsTo_responded)
G((X(eNV_CONSTRAINT_2_respondsTo_responded)<->(((heading_0<->spec_nextHead_0)|(!(spec_nextMoveMode_0)|spec_nextMoveMode_1))|(eNV_CONSTRAINT_2_respondsTo_responded&!((spec_nextMoveMode_0&!(spec_nextMoveMode_1)))))))
(!(pREV_aux_3))
G((X(pREV_aux_3)<->(!(spec_nextMoveMode_0)&!(spec_nextMoveMode_1))))
(!(pREV_aux_4))
G((X(pREV_aux_4)<->(!(spec_nextMoveMode_0)&spec_nextMoveMode_1)))
=== GUARANTEES ===
((!(spec_specState_0)&!(spec_specState_1)))
((!(spec_turnState_0)&!(spec_turnState_1)))
(spec_nextHead_0)
((!(spec_nextMoveMode_0)&!(spec_nextMoveMode_1)))
G(F((!(spec_nextMoveMode_0))&!(spec_nextMoveMode_1)))
G((((!(spec_nextMoveMode_0)&spec_nextMoveMode_1)&(!(X(spec_nextMoveMode_0))&!(X(spec_nextMoveMode_1))))<->(((((!(X(leftMotor_0))&!(X(leftMotor_1)))&!(X(leftMotor_2)))&!(X(rightMotor_0)))&!(X(rightMotor_1)))&X(rightMotor_2))))
G((((!(spec_nextMoveMode_0)&!(spec_nextMoveMode_1))&(!(X(spec_nextMoveMode_0))&X(spec_nextMoveMode_1)))<->(((((!(X(leftMotor_0))&!(X(leftMotor_1)))&X(leftMotor_2))&!(X(rightMotor_0)))&!(X(rightMotor_1)))&!(X(rightMotor_2)))))
G(((!(X(spec_nextMoveMode_0))&X(spec_nextMoveMode_1))->((!(spec_nextMoveMode_0)&!(spec_nextMoveMode_1))|(!(spec_nextMoveMode_0)&spec_nextMoveMode_1))))
G(((!(spec_nextMoveMode_0)&spec_nextMoveMode_1)->((!(X(spec_nextMoveMode_0))&!(X(spec_nextMoveMode_1)))|(!(X(spec_nextMoveMode_0))&X(spec_nextMoveMode_1)))))
G((((((!(spec_specState_0)&!(spec_specState_1))&!(spec_nextMoveMode_0))&!(spec_nextMoveMode_1))&(!(X(spec_nextMoveMode_0))&X(spec_nextMoveMode_1)))->(!(X(spec_specState_0))&X(spec_specState_1))))
G((((((!(spec_specState_0)&spec_specState_1)&!(spec_nextMoveMode_0))&spec_nextMoveMode_1)&(!(X(spec_nextMoveMode_0))&!(X(spec_nextMoveMode_1))))->(X(spec_specState_0)&!(X(spec_specState_1)))))
G(!(((((spec_specState_0&!(spec_specState_1))&!(spec_nextMoveMode_0))&!(spec_nextMoveMode_1))&(!(X(spec_nextMoveMode_0))&X(spec_nextMoveMode_1)))))
G((((!(spec_specState_0)&spec_specState_1)&(!(X(spec_nextMoveMode_0))&X(spec_nextMoveMode_1)))->(!(X(spec_specState_0))&X(spec_specState_1))))
G((((spec_specState_0&!(spec_specState_1))&(!(X(spec_nextMoveMode_0))&!(X(spec_nextMoveMode_1))))->(X(spec_specState_0)&!(X(spec_specState_1)))))
G(((spec_nextMoveMode_0&!(spec_nextMoveMode_1))->(!(X(spec_specState_0))&!(X(spec_specState_1)))))
G((button_0->(X(spec_nextHead_0)<->X(heading_0))))
G((!(button_0)->(spec_nextHead_0<->X(spec_nextHead_0))))
G(((!(X(spec_turnState_0))&!(X(spec_turnState_1)))->((!(spec_turnState_0)&!(spec_turnState_1))|(spec_turnState_0&spec_turnState_1))))
G((((!(spec_turnState_0)&!(spec_turnState_1))&!((spec_nextMoveMode_0&!(spec_nextMoveMode_1))))->(!(X(spec_turnState_0))&!(X(spec_turnState_1)))))
G((((((spec_nextMoveMode_0&!(spec_nextMoveMode_1))&pREV_aux_3)&!(spec_turnState_0))&!(spec_turnState_1))->(!(X(spec_turnState_0))&X(spec_turnState_1))))
G(((!(spec_turnState_0)&spec_turnState_1)->(((X(spec_turnState_0)&!(X(spec_turnState_1)))&spec_nextMoveMode_0)&!(spec_nextMoveMode_1))))
G(((((spec_turnState_0&!(spec_turnState_1))&spec_nextMoveMode_0)&!(spec_nextMoveMode_1))->(!(X(spec_turnState_0))&X(spec_turnState_1))))
G(((((spec_turnState_0&!(spec_turnState_1))&!(spec_nextMoveMode_0))&!(spec_nextMoveMode_1))->(X(spec_turnState_0)&X(spec_turnState_1))))
G(((((spec_turnState_0&spec_turnState_1)&!(spec_nextMoveMode_0))&!(spec_nextMoveMode_1))->(!(X(spec_turnState_0))&!(X(spec_turnState_1)))))
G((((spec_turnState_0&spec_turnState_1)&(spec_nextMoveMode_0|spec_nextMoveMode_1))->(X(spec_turnState_0)&!(X(spec_turnState_1)))))
G(((((!(spec_turnState_0)&!(spec_turnState_1))&!(X(spec_turnState_0)))&X(spec_turnState_1))<->(((((leftMotor_0&!(leftMotor_1))&leftMotor_2)&rightMotor_0)&!(rightMotor_1))&rightMotor_2)))
G(((X(spec_turnState_0)&!(X(spec_turnState_1)))<->(((((!(leftMotor_0)&!(leftMotor_1))&!(leftMotor_2))&!(rightMotor_0))&rightMotor_1)&rightMotor_2)))
G((((spec_turnState_0&spec_turnState_1)&(!(X(spec_turnState_0))&!(X(spec_turnState_1))))<->(((((leftMotor_0&leftMotor_1)&!(leftMotor_2))&rightMotor_0)&rightMotor_1)&!(rightMotor_2))))
G(F(sYS_CONSTRAINT_0_respondsTo_responded))
(!(((leftMotor_0&leftMotor_1)&leftMotor_2)))
G(!(((X(leftMotor_0)&X(leftMotor_1))&X(leftMotor_2))))
(!(((rightMotor_0&rightMotor_1)&rightMotor_2)))
G(!(((X(rightMotor_0)&X(rightMotor_1))&X(rightMotor_2))))
(!((headMotor_0&headMotor_1)))
G(!((X(headMotor_0)&X(headMotor_1))))
(!((spec_nextMoveMode_0&spec_nextMoveMode_1)))
G(!((X(spec_nextMoveMode_0)&X(spec_nextMoveMode_1))))
((obstacle_0->!((!(spec_nextMoveMode_0)&!(spec_nextMoveMode_1)))))
G((X(obstacle_0)->!((!(X(spec_nextMoveMode_0))&!(X(spec_nextMoveMode_1))))))
(((spec_turnState_0&!(spec_turnState_1))<->(((((!(leftMotor_0)&!(leftMotor_1))&leftMotor_2)&rightMotor_0)&!(rightMotor_1))&!(rightMotor_2))))
G(((X(spec_turnState_0)&!(X(spec_turnState_1)))<->(((((!(X(leftMotor_0))&!(X(leftMotor_1)))&X(leftMotor_2))&X(rightMotor_0))&!(X(rightMotor_1)))&!(X(rightMotor_2)))))
+++++++++++ inputs/SYNTECH15-1UNREAL/HumanoidLTL_747_Humanoid_1.spectra
Resetting temp...
Reset complete!
++++ ELAPSED TIME 0
++++ QUEUE LENGTH 0
++++ Solutions 0
++++ Duplicates 0
++++ Node number 1
++++ Refinement []
++++ Length 0
++ REALIZABILITY CHECK
++ COUNTERSTRATEGY COMPUTATION - REFINEMENT GENERATION
b"Using BDD Package: CUDDFactory, Version: CUDD 3.0
Using BDD Package: CUDDFactory, Version: CUDD 3.0
1    [main] ERROR xt.validation.ResourceValidatorImpl  - The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
java.util.MissingResourceException: The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
at org.eclipse.emf.common.util.DelegatingResourceLocator.delegatedGetString(DelegatingResourceLocator.java:586)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:450)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:605)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:597)
at org.eclipse.emf.ecore.util.Diagnostician.createDefaultDiagnostic(Diagnostician.java:110)
at org.eclipse.emf.ecore.util.Diagnostician.validate(Diagnostician.java:139)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:147)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:125)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:91)
at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getSpectraModel(SpectraInputProviderNoIDE.java:166)
at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getGameInput(SpectraInputProviderNoIDE.java:109)
at tau.smlab.syntech.Spectra.cli.SpectraCliTool.main(SpectraCliTool.java:162)
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 1658
Nodes table size: 31682
Result: Specification is unrealizable
extract strategy - Start

extract strategy - End
Initial State 0 <obstacle_0:true, noise_0:false, heading_0:false, button_0:false, sYS_CONSTRAINT_0_respondsTo_responded:true, eNV_CONSTRAINT_1_respondsTo_responded:true, eNV_CONSTRAINT_2_respondsTo_responded:true, pREV_aux_3:false, pREV_aux_4:false>
With no successors.
"
INI:  <counterstrategy.State object at 0x7f2aed121640>
TRANSIENT:  []
=== COUNTERRUN ===
S0

LTL TOKENS:  ['(', '(', '(', 'pREV_aux_3', '&', 'obstacle_0', ')', '->', 'X', '(', 'obstacle_0', ')', ')', ')']
LTL TOKENS:  ['(', '(', '(', 'pREV_aux_4', '&', '!', '(', 'obstacle_0', ')', ')', '->', '!', '(', 'X', '(', 'obstacle_0', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '(', '(', '!', '(', 'spec_nextMoveMode_0', ')', '&', '!', '(', 'spec_nextMoveMode_1', ')', ')', '|', '(', '!', '(', 'spec_nextMoveMode_0', ')', '&', 'spec_nextMoveMode_1', ')', ')', '->', '(', 'heading_0', '<->', 'X', '(', 'heading_0', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', 'X', '(', 'sYS_CONSTRAINT_0_respondsTo_responded', ')', '<->', '(', '(', 'heading_0', '<->', 'spec_nextHead_0', ')', '|', '(', 'sYS_CONSTRAINT_0_respondsTo_responded', '&', '!', '(', 'noise_0', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', 'X', '(', 'eNV_CONSTRAINT_1_respondsTo_responded', ')', '<->', '(', '(', '!', '(', 'obstacle_0', ')', '&', '!', '(', 'X', '(', 'obstacle_0', ')', ')', ')', '|', '(', 'eNV_CONSTRAINT_1_respondsTo_responded', '&', '!', '(', '(', '!', '(', 'spec_turnState_0', ')', '&', 'spec_turnState_1', ')', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', 'X', '(', 'eNV_CONSTRAINT_2_respondsTo_responded', ')', '<->', '(', '(', '(', 'heading_0', '<->', 'spec_nextHead_0', ')', '|', '(', '!', '(', 'spec_nextMoveMode_0', ')', '|', 'spec_nextMoveMode_1', ')', ')', '|', '(', 'eNV_CONSTRAINT_2_respondsTo_responded', '&', '!', '(', '(', 'spec_nextMoveMode_0', '&', '!', '(', 'spec_nextMoveMode_1', ')', ')', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', 'X', '(', 'pREV_aux_3', ')', '<->', '(', '!', '(', 'spec_nextMoveMode_0', ')', '&', '!', '(', 'spec_nextMoveMode_1', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', 'X', '(', 'pREV_aux_4', ')', '<->', '(', '!', '(', 'spec_nextMoveMode_0', ')', '&', 'spec_nextMoveMode_1', ')', ')', ')']
=== UNREALIZABLE CORE ===
((!(spec_nextMoveMode_0)&!(spec_nextMoveMode_1)))
((obstacle_0->!((!(spec_nextMoveMode_0)&!(spec_nextMoveMode_1)))))

=== ASSUMPTIONS BOOLEAN ===
((!(heading_0__S0))) & ((((pREV_aux_3__S0&obstacle_0__S0)->(obstacle_0__Sf)))) & ((((pREV_aux_4__S0&!(obstacle_0__S0))->!((obstacle_0__Sf))))) & (((((!(spec_nextMoveMode_0__S0)&!(spec_nextMoveMode_1__S0))|(!(spec_nextMoveMode_0__S0)&spec_nextMoveMode_1__S0))->(heading_0__S0<->(heading_0__Sf))))) & ((sYS_CONSTRAINT_0_respondsTo_responded__S0)) & ((((sYS_CONSTRAINT_0_respondsTo_responded__Sf)<->((heading_0__Sf<->spec_nextHead_0__Sf)|(sYS_CONSTRAINT_0_respondsTo_responded__Sf&!(noise_0__Sf)))))) & ((eNV_CONSTRAINT_1_respondsTo_responded__S0)) & ((((eNV_CONSTRAINT_1_respondsTo_responded__Sf)<->((!(obstacle_0__Sf)&!((obstacle_0__Sf)))|(eNV_CONSTRAINT_1_respondsTo_responded__Sf&!((!(spec_turnState_0__Sf)&spec_turnState_1__Sf))))))) & ((eNV_CONSTRAINT_2_respondsTo_responded__S0)) & ((((eNV_CONSTRAINT_2_respondsTo_responded__Sf)<->(((heading_0__Sf<->spec_nextHead_0__Sf)|(!(spec_nextMoveMode_0__Sf)|spec_nextMoveMode_1__Sf))|(eNV_CONSTRAINT_2_respondsTo_responded__Sf&!((spec_nextMoveMode_0__Sf&!(spec_nextMoveMode_1__Sf)))))))) & ((!(pREV_aux_3__S0))) & ((((pREV_aux_3__Sf)<->(!(spec_nextMoveMode_0__Sf)&!(spec_nextMoveMode_1__Sf))))) & ((!(pREV_aux_4__S0))) & ((((pREV_aux_4__Sf)<->(!(spec_nextMoveMode_0__Sf)&spec_nextMoveMode_1__Sf))))

=== VALUATIONS BOOLEAN ===
obstacle_0__S0 & eNV_CONSTRAINT_1_respondsTo_responded__S0 & sYS_CONSTRAINT_0_respondsTo_responded__S0 & !button_0__S0 & !pREV_aux_3__S0 & !pREV_aux_4__S0 & !noise_0__S0 & eNV_CONSTRAINT_2_respondsTo_responded__S0 & !heading_0__S0

=== GUARANTEES BOOLEAN ===
(((!(spec_nextMoveMode_0__S0)&!(spec_nextMoveMode_1__S0)))) & (((obstacle_0__S0->!((!(spec_nextMoveMode_0__S0)&!(spec_nextMoveMode_1__S0))))))


=== INTERPOLANT ===
obstacle_0__S0

=== STATE COMPONENTS ===
{'S0': 'obstacle_0'}

=== Refinements === 
['!(obstacle_0)', 'G(!(obstacle_0))']
++++ ELAPSED TIME 2.885626865987433
++++ QUEUE LENGTH 1
++++ Solutions 0
++++ Duplicates 0
++++ Node number 2
++++ Refinement ['!(obstacle_0)']
++++ Length 1
++ REALIZABILITY CHECK
++ REALIZABLE REFINEMENT: SAT CHECK
++++ ELAPSED TIME 4.922375997004565
++++ QUEUE LENGTH 0
++++ Solutions 1
++++ Duplicates 0
++++ Node number 3
++++ Refinement ['G(!(obstacle_0))']
++++ Length 1
++ REALIZABILITY CHECK
++ REALIZABLE REFINEMENT: SAT CHECK
