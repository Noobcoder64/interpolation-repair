Parsing...done
Parsing...done
Removing non-boolean ITEs...done
Removing non-boolean ITEs...done
Canonizing...done
Canonizing...done
Converting formula to CNF...done
Converting formula to CNF...done
Searching...
s

DPLL Engine Statistics:
Atoms: 29 (9 bool, 0 theory, 20 cnf) 
Clauses: 14
Avg clause length: 2.14286
Restarts: 1
Decisions: 4
All propagations: 29
All conflicts: 0

Theory Solvers Statistics:
------------------------------------
Total time: 0.001 sec
Memory used: 22.820 MBytes

sat
=== INPUT VARS ===
distSense_0
isReady
eNV_CONSTRAINT_0_respondsTo_responded
=== OUTPUT VARS ===
balancer_0
balancer_1
balancer_2
=== ASSUMPTIONS ===
(!(isReady))
G((isReady->X(isReady)))
G(F(eNV_CONSTRAINT_0_respondsTo_responded))
(eNV_CONSTRAINT_0_respondsTo_responded)
G((X(eNV_CONSTRAINT_0_respondsTo_responded)<->(!(distSense_0)|(eNV_CONSTRAINT_0_respondsTo_responded&!(!((((!(balancer_0)&!(balancer_1))&balancer_2)|((!(balancer_0)&!(balancer_1))&!(balancer_2)))))))))
=== GUARANTEES ===
(((!(balancer_0)&!(balancer_1))&!(balancer_2)))
G(F(((!(balancer_0))&!(balancer_1))&balancer_2))
G((((!(balancer_0)&!(balancer_1))&balancer_2)->!((((X(balancer_0)&!(X(balancer_1)))&!(X(balancer_2)))|((!(X(balancer_0))&X(balancer_1))&X(balancer_2))))))
G((((((distSense_0&!(balancer_0))&!(balancer_1))&!(balancer_2))&isReady)->!(((!(X(balancer_0))&!(X(balancer_1)))&!(X(balancer_2))))))
(!(((balancer_0&!(balancer_1))&balancer_2)))
G(!(((X(balancer_0)&!(X(balancer_1)))&X(balancer_2))))
(!(((balancer_0&balancer_1)&!(balancer_2))))
G(!(((X(balancer_0)&X(balancer_1))&!(X(balancer_2)))))
(!(((balancer_0&balancer_1)&balancer_2)))
G(!(((X(balancer_0)&X(balancer_1))&X(balancer_2))))
((!(isReady)->((!(balancer_0)&!(balancer_1))&!(balancer_2))))
G((!(X(isReady))->((!(X(balancer_0))&!(X(balancer_1)))&!(X(balancer_2)))))
(((distSense_0&isReady)->!(((!(balancer_0)&!(balancer_1))&balancer_2))))
G(((X(distSense_0)&X(isReady))->!(((!(X(balancer_0))&!(X(balancer_1)))&X(balancer_2)))))
(((!(distSense_0)&isReady)->((!(balancer_0)&!(balancer_1))&balancer_2)))
G(((!(X(distSense_0))&X(isReady))->((!(X(balancer_0))&!(X(balancer_1)))&X(balancer_2))))
+++++++++++ inputs/SYNTECH15-1UNREAL/GyroLTL_390_GyroAspect_2.spectra
Resetting temp...
Reset complete!
++++ ELAPSED TIME 0
++++ QUEUE LENGTH 0
++++ Solutions 0
++++ Duplicates 0
++++ Node number 1
++++ Refinement []
++++ Length 0
++ REALIZABILITY CHECK
++ COUNTERSTRATEGY COMPUTATION - REFINEMENT GENERATION
b"Using BDD Package: CUDDFactory, Version: CUDD 3.0
Using BDD Package: CUDDFactory, Version: CUDD 3.0
0    [main] ERROR xt.validation.ResourceValidatorImpl  - The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
java.util.MissingResourceException: The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
at org.eclipse.emf.common.util.DelegatingResourceLocator.delegatedGetString(DelegatingResourceLocator.java:586)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:450)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:605)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:597)
at org.eclipse.emf.ecore.util.Diagnostician.createDefaultDiagnostic(Diagnostician.java:110)
at org.eclipse.emf.ecore.util.Diagnostician.validate(Diagnostician.java:139)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:147)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:125)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:91)
at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getSpectraModel(SpectraInputProviderNoIDE.java:166)
at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getGameInput(SpectraInputProviderNoIDE.java:109)
at tau.smlab.syntech.Spectra.cli.SpectraCliTool.main(SpectraCliTool.java:162)
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 86
Nodes table size: 1022
Result: Specification is unrealizable
extract strategy - Start

extract strategy - End
Initial State 0 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 0
"
INI:  <counterstrategy.State object at 0x7fe84c506460>
TRANSIENT:  []
=== COUNTERRUN ===
S0

LTL TOKENS:  ['(', '(', 'isReady', '->', 'X', '(', 'isReady', ')', ')', ')']
LTL TOKENS:  ['(', '(', 'X', '(', 'eNV_CONSTRAINT_0_respondsTo_responded', ')', '<->', '(', '!', '(', 'distSense_0', ')', '|', '(', 'eNV_CONSTRAINT_0_respondsTo_responded', '&', '!', '(', '!', '(', '(', '(', '(', '!', '(', 'balancer_0', ')', '&', '!', '(', 'balancer_1', ')', ')', '&', 'balancer_2', ')', '|', '(', '(', '!', '(', 'balancer_0', ')', '&', '!', '(', 'balancer_1', ')', ')', '&', '!', '(', 'balancer_2', ')', ')', ')', ')', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '!', '(', 'X', '(', 'isReady', ')', ')', '->', '(', '(', '!', '(', 'X', '(', 'balancer_0', ')', ')', '&', '!', '(', 'X', '(', 'balancer_1', ')', ')', ')', '&', '!', '(', 'X', '(', 'balancer_2', ')', ')', ')', ')', ')']
=== UNREALIZABLE CORE ===
G(F(((!(balancer_0))&!(balancer_1))&balancer_2))
G((!(X(isReady))->((!(X(balancer_0))&!(X(balancer_1)))&!(X(balancer_2)))))

=== ASSUMPTIONS BOOLEAN ===
((!(isReady__S0))) & (((isReady__S0->(isReady__Sf)))) & ((eNV_CONSTRAINT_0_respondsTo_responded__S0)) & ((((eNV_CONSTRAINT_0_respondsTo_responded__Sf)<->(!(distSense_0__Sf)|(eNV_CONSTRAINT_0_respondsTo_responded__Sf&!(!((((!(balancer_0__Sf)&!(balancer_1__Sf))&balancer_2__Sf)|((!(balancer_0__Sf)&!(balancer_1__Sf))&!(balancer_2__Sf))))))))))

=== VALUATIONS BOOLEAN ===
!isReady__S0 & eNV_CONSTRAINT_0_respondsTo_responded__S0 & !distSense_0__S0

=== GUARANTEES BOOLEAN ===
(((!((isReady__Sf))->((!((balancer_0__Sf))&!((balancer_1__Sf)))&!((balancer_2__Sf))))))

Traceback (most recent call last):
  File "refinement_fifo_search_duplicatecheck.py", line 140, in <module>
    main()
  File "refinement_fifo_search_duplicatecheck.py", line 137, in main
    FifoDuplicateCheckRefinement()
  File "refinement_fifo_search_duplicatecheck.py", line 83, in FifoDuplicateCheckRefinement
    candidate_ref_nodes = cur_node.refine()
  File "/homes/fa1622/interpolation-repair/refinement.py", line 257, in refine
    candidate_refs = self.generateAlternativeRefinements()
  File "/homes/fa1622/interpolation-repair/refinement.py", line 318, in generateAlternativeRefinements
    refinements = interpolation.GenerateAlternativeRefinements(self.counterstrategy, exp.initialGR1Units + self.gr1_units, self.getUnrealizableCore(), exp.inputVarsList, exp.outputVarsList)
  File "/homes/fa1622/interpolation-repair/interpolation.py", line 256, in GenerateAlternativeRefinements
    path = c.extendFinitePath(path)
  File "/homes/fa1622/interpolation-repair/counterstrategy.py", line 754, in extendFinitePath
    if path.transient_states[-1].id_state == "Sf":
IndexError: list index out of range
