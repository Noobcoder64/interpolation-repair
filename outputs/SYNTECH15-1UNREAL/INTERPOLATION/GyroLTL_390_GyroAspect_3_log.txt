Parsing...done
Parsing...done
Removing non-boolean ITEs...done
Removing non-boolean ITEs...done
Canonizing...done
Canonizing...done
Converting formula to CNF...done
Converting formula to CNF...done

Solving time: 0.001174 sec
Original proof size: 26
Computing interpolant #1...done
Interpolant #1 written to INTERP.1.msat

DPLL Engine Statistics:
Atoms: 127 (24 bool, 0 theory, 103 cnf) 
Clauses: 128
Avg clause length: 2.125
Restarts: 0
Decisions: 0
All propagations: 115
All conflicts: 0

Theory Solvers Statistics:
------------------------------------
Total time: 0.001 sec
Memory used: 22.945 MBytes

unsat
Parsing...done
Parsing...done
Removing non-boolean ITEs...done
Removing non-boolean ITEs...done
Canonizing...done
Canonizing...done
Converting formula to CNF...done
Converting formula to CNF...done
Searching...
s

DPLL Engine Statistics:
Atoms: 100 (24 bool, 0 theory, 76 cnf) 
Clauses: 90
Avg clause length: 2.13333
Restarts: 1
Decisions: 9
All propagations: 100
All conflicts: 0

Theory Solvers Statistics:
------------------------------------
Total time: 0.001 sec
Memory used: 22.949 MBytes

sat
Parsing...done
Parsing...done
Removing non-boolean ITEs...done
Removing non-boolean ITEs...done
Canonizing...done
Canonizing...done
Converting formula to CNF...done
Converting formula to CNF...done
Searching...
s

DPLL Engine Statistics:
Atoms: 131 (30 bool, 0 theory, 101 cnf) 
Clauses: 120
Avg clause length: 2.13333
Restarts: 1
Decisions: 9
All propagations: 131
All conflicts: 0

Theory Solvers Statistics:
------------------------------------
Total time: 0.002 sec
Memory used: 22.949 MBytes

sat
Parsing...done
Parsing...done
Removing non-boolean ITEs...done
Removing non-boolean ITEs...done
Canonizing...done
Canonizing...done
Converting formula to CNF...done
Converting formula to CNF...done
Searching...
s

DPLL Engine Statistics:
Atoms: 100 (24 bool, 0 theory, 76 cnf) 
Clauses: 90
Avg clause length: 2.13333
Restarts: 1
Decisions: 9
All propagations: 100
All conflicts: 0

Theory Solvers Statistics:
------------------------------------
Total time: 0.001 sec
Memory used: 22.949 MBytes

sat
Parsing...done
Parsing...done
Removing non-boolean ITEs...done
Removing non-boolean ITEs...done
Canonizing...done
Canonizing...done
Converting formula to CNF...done
Converting formula to CNF...done
Searching...
s

DPLL Engine Statistics:
Atoms: 131 (30 bool, 0 theory, 101 cnf) 
Clauses: 120
Avg clause length: 2.13333
Restarts: 1
Decisions: 9
All propagations: 131
All conflicts: 0

Theory Solvers Statistics:
------------------------------------
Total time: 0.001 sec
Memory used: 22.949 MBytes

sat
=== INPUT VARS ===
distSense_0
isReady
eNV_CONSTRAINT_0_respondsTo_responded
=== OUTPUT VARS ===
balancer_0
balancer_1
balancer_2
=== ASSUMPTIONS ===
G(F(isReady))
(!(isReady))
G(F(eNV_CONSTRAINT_0_respondsTo_responded))
(eNV_CONSTRAINT_0_respondsTo_responded)
G((X(eNV_CONSTRAINT_0_respondsTo_responded)<->(!(distSense_0)|(eNV_CONSTRAINT_0_respondsTo_responded&!(!((((!(balancer_0)&!(balancer_1))&balancer_2)|((!(balancer_0)&!(balancer_1))&!(balancer_2)))))))))
=== GUARANTEES ===
(((!(balancer_0)&!(balancer_1))&!(balancer_2)))
G(F(((!(balancer_0))&!(balancer_1))&balancer_2))
G((((!(balancer_0)&!(balancer_1))&balancer_2)->!((((X(balancer_0)&!(X(balancer_1)))&!(X(balancer_2)))|((!(X(balancer_0))&X(balancer_1))&X(balancer_2))))))
G((((((distSense_0&!(balancer_0))&!(balancer_1))&!(balancer_2))&isReady)->!(((!(X(balancer_0))&!(X(balancer_1)))&!(X(balancer_2))))))
(!(((balancer_0&!(balancer_1))&balancer_2)))
G(!(((X(balancer_0)&!(X(balancer_1)))&X(balancer_2))))
(!(((balancer_0&balancer_1)&!(balancer_2))))
G(!(((X(balancer_0)&X(balancer_1))&!(X(balancer_2)))))
(!(((balancer_0&balancer_1)&balancer_2)))
G(!(((X(balancer_0)&X(balancer_1))&X(balancer_2))))
((!(isReady)->((!(balancer_0)&!(balancer_1))&!(balancer_2))))
G((!(X(isReady))->((!(X(balancer_0))&!(X(balancer_1)))&!(X(balancer_2)))))
(((distSense_0&isReady)->!(((!(balancer_0)&!(balancer_1))&balancer_2))))
G(((X(distSense_0)&X(isReady))->!(((!(X(balancer_0))&!(X(balancer_1)))&X(balancer_2)))))
(((!(distSense_0)&isReady)->((!(balancer_0)&!(balancer_1))&balancer_2)))
G(((!(X(distSense_0))&X(isReady))->((!(X(balancer_0))&!(X(balancer_1)))&X(balancer_2))))
+++++++++++ inputs/SYNTECH15-1UNREAL/GyroLTL_390_GyroAspect_3.spectra
Resetting temp...
Reset complete!
++++ ELAPSED TIME 0
++++ QUEUE LENGTH 0
++++ Solutions 0
++++ Duplicates 0
++++ Node number 1
++++ Refinement []
++++ Length 0
++ REALIZABILITY CHECK
++ COUNTERSTRATEGY COMPUTATION - REFINEMENT GENERATION
b"Using BDD Package: CUDDFactory, Version: CUDD 3.0
Using BDD Package: CUDDFactory, Version: CUDD 3.0
0    [main] ERROR xt.validation.ResourceValidatorImpl  - The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
java.util.MissingResourceException: The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
at org.eclipse.emf.common.util.DelegatingResourceLocator.delegatedGetString(DelegatingResourceLocator.java:586)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:450)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:605)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:597)
at org.eclipse.emf.ecore.util.Diagnostician.createDefaultDiagnostic(Diagnostician.java:110)
at org.eclipse.emf.ecore.util.Diagnostician.validate(Diagnostician.java:139)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:147)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:125)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:91)
at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getSpectraModel(SpectraInputProviderNoIDE.java:166)
at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getGameInput(SpectraInputProviderNoIDE.java:109)
at tau.smlab.syntech.Spectra.cli.SpectraCliTool.main(SpectraCliTool.java:162)
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 75
Nodes table size: 1022
Result: Specification is unrealizable
extract strategy - Start

extract strategy - End
Initial State 0 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 1, 2, 3, 4
State 1 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 7
State 2 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:true, balancer_2:false>
With successors : 5
State 3 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:true, balancer_2:true>
With successors : 5
State 4 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:true, balancer_1:false, balancer_2:false>
With successors : 5
State 5 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:false, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 6
State 6 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 0
State 7 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:true>
With no successors.
"
INI:  <counterstrategy.State object at 0x7f19182f2a60>
TRANSIENT:  []
=== COUNTERRUN ===
S0 -> loop( -> S0 -> S3 -> S5 -> S6)

LTL TOKENS:  ['(', '(', 'X', '(', 'eNV_CONSTRAINT_0_respondsTo_responded', ')', '<->', '(', '!', '(', 'distSense_0', ')', '|', '(', 'eNV_CONSTRAINT_0_respondsTo_responded', '&', '!', '(', '!', '(', '(', '(', '(', '!', '(', 'balancer_0', ')', '&', '!', '(', 'balancer_1', ')', ')', '&', 'balancer_2', ')', '|', '(', '(', '!', '(', 'balancer_0', ')', '&', '!', '(', 'balancer_1', ')', ')', '&', '!', '(', 'balancer_2', ')', ')', ')', ')', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '!', '(', 'X', '(', 'isReady', ')', ')', '->', '(', '(', '!', '(', 'X', '(', 'balancer_0', ')', ')', '&', '!', '(', 'X', '(', 'balancer_1', ')', ')', ')', '&', '!', '(', 'X', '(', 'balancer_2', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '(', 'X', '(', 'distSense_0', ')', '&', 'X', '(', 'isReady', ')', ')', '->', '!', '(', '(', '(', '!', '(', 'X', '(', 'balancer_0', ')', ')', '&', '!', '(', 'X', '(', 'balancer_1', ')', ')', ')', '&', 'X', '(', 'balancer_2', ')', ')', ')', ')', ')']
=== UNREALIZABLE CORE ===
G(F(((!(balancer_0))&!(balancer_1))&balancer_2))
G((!(X(isReady))->((!(X(balancer_0))&!(X(balancer_1)))&!(X(balancer_2)))))
G(((X(distSense_0)&X(isReady))->!(((!(X(balancer_0))&!(X(balancer_1)))&X(balancer_2)))))

=== ASSUMPTIONS BOOLEAN ===
(((isReady__S0)) | ((isReady__S3)) | ((isReady__S5)) | ((isReady__S6))) & ((!(isReady__S0))) & (((eNV_CONSTRAINT_0_respondsTo_responded__S0)) | ((eNV_CONSTRAINT_0_respondsTo_responded__S3)) | ((eNV_CONSTRAINT_0_respondsTo_responded__S5)) | ((eNV_CONSTRAINT_0_respondsTo_responded__S6))) & ((eNV_CONSTRAINT_0_respondsTo_responded__S0)) & ((((eNV_CONSTRAINT_0_respondsTo_responded__S3)<->(!(distSense_0__S0)|(eNV_CONSTRAINT_0_respondsTo_responded__S0&!(!((((!(balancer_0__S0)&!(balancer_1__S0))&balancer_2__S0)|((!(balancer_0__S0)&!(balancer_1__S0))&!(balancer_2__S0)))))))))) & ((((eNV_CONSTRAINT_0_respondsTo_responded__S3)<->(!(distSense_0__S0)|(eNV_CONSTRAINT_0_respondsTo_responded__S0&!(!((((!(balancer_0__S0)&!(balancer_1__S0))&balancer_2__S0)|((!(balancer_0__S0)&!(balancer_1__S0))&!(balancer_2__S0)))))))))) & ((((eNV_CONSTRAINT_0_respondsTo_responded__S5)<->(!(distSense_0__S3)|(eNV_CONSTRAINT_0_respondsTo_responded__S3&!(!((((!(balancer_0__S3)&!(balancer_1__S3))&balancer_2__S3)|((!(balancer_0__S3)&!(balancer_1__S3))&!(balancer_2__S3)))))))))) & ((((eNV_CONSTRAINT_0_respondsTo_responded__S6)<->(!(distSense_0__S5)|(eNV_CONSTRAINT_0_respondsTo_responded__S5&!(!((((!(balancer_0__S5)&!(balancer_1__S5))&balancer_2__S5)|((!(balancer_0__S5)&!(balancer_1__S5))&!(balancer_2__S5)))))))))) & ((((eNV_CONSTRAINT_0_respondsTo_responded__S0)<->(!(distSense_0__S6)|(eNV_CONSTRAINT_0_respondsTo_responded__S6&!(!((((!(balancer_0__S6)&!(balancer_1__S6))&balancer_2__S6)|((!(balancer_0__S6)&!(balancer_1__S6))&!(balancer_2__S6))))))))))

=== VALUATIONS BOOLEAN ===
!distSense_0__S0 & !isReady__S0 & eNV_CONSTRAINT_0_respondsTo_responded__S0 & !balancer_0__S3 & isReady__S3 & distSense_0__S3 & eNV_CONSTRAINT_0_respondsTo_responded__S3 & balancer_1__S3 & balancer_2__S3 & !eNV_CONSTRAINT_0_respondsTo_responded__S5 & !distSense_0__S5 & !isReady__S5 & !distSense_0__S6 & !isReady__S6 & eNV_CONSTRAINT_0_respondsTo_responded__S6

=== GUARANTEES BOOLEAN ===
(((((!(balancer_0__S0))&!(balancer_1__S0))&balancer_2__S0)) | ((((!(balancer_0__S3))&!(balancer_1__S3))&balancer_2__S3)) | ((((!(balancer_0__S5))&!(balancer_1__S5))&balancer_2__S5)) | ((((!(balancer_0__S6))&!(balancer_1__S6))&balancer_2__S6))) & (((!((isReady__S3))->((!((balancer_0__S3))&!((balancer_1__S3)))&!((balancer_2__S3)))))) & (((!((isReady__S3))->((!((balancer_0__S3))&!((balancer_1__S3)))&!((balancer_2__S3)))))) & (((!((isReady__S5))->((!((balancer_0__S5))&!((balancer_1__S5)))&!((balancer_2__S5)))))) & (((!((isReady__S6))->((!((balancer_0__S6))&!((balancer_1__S6)))&!((balancer_2__S6)))))) & (((!((isReady__S0))->((!((balancer_0__S0))&!((balancer_1__S0)))&!((balancer_2__S0)))))) & (((((distSense_0__S3)&(isReady__S3))->!(((!((balancer_0__S3))&!((balancer_1__S3)))&(balancer_2__S3)))))) & (((((distSense_0__S3)&(isReady__S3))->!(((!((balancer_0__S3))&!((balancer_1__S3)))&(balancer_2__S3)))))) & (((((distSense_0__S5)&(isReady__S5))->!(((!((balancer_0__S5))&!((balancer_1__S5)))&(balancer_2__S5)))))) & (((((distSense_0__S6)&(isReady__S6))->!(((!((balancer_0__S6))&!((balancer_1__S6)))&(balancer_2__S6)))))) & (((((distSense_0__S0)&(isReady__S0))->!(((!((balancer_0__S0))&!((balancer_1__S0)))&(balancer_2__S0))))))


=== INTERPOLANT ===
!isReady__S6 & !isReady__S5 & !isReady__S0 & balancer_1__S3

=== STATE COMPONENTS ===
{'S5': '!isReady', 'S0': '!isReady', 'S3': 'balancer_1', 'S6': '!isReady'}

=== Refinements === 
['G(!(!isReady))', 'G((!isReady) -> X(!(!isReady)))', 'G(F(!(!isReady) & !(balancer_1)))', '!(!isReady)', 'G((balancer_1) -> X(!(!isReady)))']
++++ ELAPSED TIME 2.673896174004767
++++ QUEUE LENGTH 4
++++ Solutions 0
++++ Duplicates 0
++++ Node number 2
++++ Refinement ['G(!(!isReady))']
++++ Length 1
++ REALIZABILITY CHECK
++ VACUOUS SOLUTION
++++ ELAPSED TIME 4.539052389009157
++++ QUEUE LENGTH 3
++++ Solutions 0
++++ Duplicates 0
++++ Node number 3
++++ Refinement ['G((!isReady) -> X(!(!isReady)))']
++++ Length 1
++ REALIZABILITY CHECK
++ COUNTERSTRATEGY COMPUTATION - REFINEMENT GENERATION
b"Using BDD Package: CUDDFactory, Version: CUDD 3.0
Using BDD Package: CUDDFactory, Version: CUDD 3.0
1    [main] ERROR xt.validation.ResourceValidatorImpl  - The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
java.util.MissingResourceException: The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
at org.eclipse.emf.common.util.DelegatingResourceLocator.delegatedGetString(DelegatingResourceLocator.java:586)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:450)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:605)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:597)
at org.eclipse.emf.ecore.util.Diagnostician.createDefaultDiagnostic(Diagnostician.java:110)
at org.eclipse.emf.ecore.util.Diagnostician.validate(Diagnostician.java:139)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:147)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:125)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:91)
at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getSpectraModel(SpectraInputProviderNoIDE.java:166)
at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getGameInput(SpectraInputProviderNoIDE.java:109)
at tau.smlab.syntech.Spectra.cli.SpectraCliTool.main(SpectraCliTool.java:162)
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 78
Nodes table size: 1022
Result: Specification is unrealizable
extract strategy - Start

extract strategy - End
Initial State 0 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 1, 2, 3, 4
State 1 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 11
State 2 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:true, balancer_2:false>
With successors : 5
State 3 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:true, balancer_2:true>
With successors : 5
State 4 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:true, balancer_1:false, balancer_2:false>
With successors : 5
State 5 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:false, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 6, 7, 8, 9
State 6 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 11
State 7 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:true, balancer_2:false>
With successors : 10
State 8 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:true, balancer_2:true>
With successors : 10
State 9 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:true, balancer_1:false, balancer_2:false>
With successors : 10
State 10 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:false, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 1, 2, 3, 4
State 11 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:true>
With no successors.
"
INI:  <counterstrategy.State object at 0x7f1998762220>
TRANSIENT:  [<counterstrategy.State object at 0x7f1998762310>, <counterstrategy.State object at 0x7f19987620d0>]
=== COUNTERRUN ===
S0 -> S1 -> S11

LTL TOKENS:  ['(', '(', 'X', '(', 'eNV_CONSTRAINT_0_respondsTo_responded', ')', '<->', '(', '!', '(', 'distSense_0', ')', '|', '(', 'eNV_CONSTRAINT_0_respondsTo_responded', '&', '!', '(', '!', '(', '(', '(', '(', '!', '(', 'balancer_0', ')', '&', '!', '(', 'balancer_1', ')', ')', '&', 'balancer_2', ')', '|', '(', '(', '!', '(', 'balancer_0', ')', '&', '!', '(', 'balancer_1', ')', ')', '&', '!', '(', 'balancer_2', ')', ')', ')', ')', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '!', 'isReady', ')', '->', 'X', '(', '!', '(', '!', 'isReady', ')', ')', ')']
LTL TOKENS:  ['(', '(', '!', '(', 'X', '(', 'isReady', ')', ')', '->', '(', '(', '!', '(', 'X', '(', 'balancer_0', ')', ')', '&', '!', '(', 'X', '(', 'balancer_1', ')', ')', ')', '&', '!', '(', 'X', '(', 'balancer_2', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '(', 'X', '(', 'distSense_0', ')', '&', 'X', '(', 'isReady', ')', ')', '->', '!', '(', '(', '(', '!', '(', 'X', '(', 'balancer_0', ')', ')', '&', '!', '(', 'X', '(', 'balancer_1', ')', ')', ')', '&', 'X', '(', 'balancer_2', ')', ')', ')', ')', ')']
=== UNREALIZABLE CORE ===
G(F(((!(balancer_0))&!(balancer_1))&balancer_2))
G((!(X(isReady))->((!(X(balancer_0))&!(X(balancer_1)))&!(X(balancer_2)))))
G(((X(distSense_0)&X(isReady))->!(((!(X(balancer_0))&!(X(balancer_1)))&X(balancer_2)))))

=== ASSUMPTIONS BOOLEAN ===
((!(isReady__S0))) & ((eNV_CONSTRAINT_0_respondsTo_responded__S0)) & ((((eNV_CONSTRAINT_0_respondsTo_responded__S1)<->(!(distSense_0__S0)|(eNV_CONSTRAINT_0_respondsTo_responded__S0&!(!((((!(balancer_0__S0)&!(balancer_1__S0))&balancer_2__S0)|((!(balancer_0__S0)&!(balancer_1__S0))&!(balancer_2__S0)))))))))) & ((((eNV_CONSTRAINT_0_respondsTo_responded__S11)<->(!(distSense_0__S1)|(eNV_CONSTRAINT_0_respondsTo_responded__S1&!(!((((!(balancer_0__S1)&!(balancer_1__S1))&balancer_2__S1)|((!(balancer_0__S1)&!(balancer_1__S1))&!(balancer_2__S1)))))))))) & ((((eNV_CONSTRAINT_0_respondsTo_responded__Sf)<->(!(distSense_0__Sf)|(eNV_CONSTRAINT_0_respondsTo_responded__Sf&!(!((((!(balancer_0__Sf)&!(balancer_1__Sf))&balancer_2__Sf)|((!(balancer_0__Sf)&!(balancer_1__Sf))&!(balancer_2__Sf)))))))))) & (((!isReady__S0)->(!(!isReady__S1)))) & (((!isReady__S1)->(!(!isReady__S11)))) & (((!isReady__S11)->(!(!isReady__Sf))))

=== VALUATIONS BOOLEAN ===
!distSense_0__S0 & !isReady__S0 & eNV_CONSTRAINT_0_respondsTo_responded__S0 & !balancer_0__S1 & isReady__S1 & !balancer_1__S1 & !balancer_2__S1 & distSense_0__S1 & eNV_CONSTRAINT_0_respondsTo_responded__S1 & !distSense_0__S11 & !isReady__S11 & eNV_CONSTRAINT_0_respondsTo_responded__S11

=== GUARANTEES BOOLEAN ===
(((!((isReady__S1))->((!((balancer_0__S1))&!((balancer_1__S1)))&!((balancer_2__S1)))))) & (((!((isReady__S11))->((!((balancer_0__S11))&!((balancer_1__S11)))&!((balancer_2__S11)))))) & (((!((isReady__Sf))->((!((balancer_0__Sf))&!((balancer_1__Sf)))&!((balancer_2__Sf)))))) & (((((distSense_0__S1)&(isReady__S1))->!(((!((balancer_0__S1))&!((balancer_1__S1)))&(balancer_2__S1)))))) & (((((distSense_0__S11)&(isReady__S11))->!(((!((balancer_0__S11))&!((balancer_1__S11)))&(balancer_2__S11)))))) & (((((distSense_0__Sf)&(isReady__Sf))->!(((!((balancer_0__Sf))&!((balancer_1__Sf)))&(balancer_2__Sf))))))

LAST STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
ASSUMPTIONS:  ['(!(isReady));', '(eNV_CONSTRAINT_0_respondsTo_responded);', 'G((next(eNV_CONSTRAINT_0_respondsTo_responded)<->(!(distSense_0)|(eNV_CONSTRAINT_0_respondsTo_responded&!(!((((!(balancer_0)&!(balancer_1))&balancer_2)|((!(balancer_0)&!(balancer_1))&!(balancer_2)))))))));', 'G((!isReady)->next(!(!isReady)));']
GUARANTEES ===============
(((!(balancer_0)&!(balancer_1))&!(balancer_2)));
G((((!(balancer_0)&!(balancer_1))&balancer_2)->!((((next(balancer_0)&!(next(balancer_1)))&!(next(balancer_2)))|((!(next(balancer_0))&next(balancer_1))&next(balancer_2))))));
G((((((distSense_0&!(balancer_0))&!(balancer_1))&!(balancer_2))&isReady)->!(((!(next(balancer_0))&!(next(balancer_1)))&!(next(balancer_2))))));
(!(((balancer_0&!(balancer_1))&balancer_2)));
G(!(((next(balancer_0)&!(next(balancer_1)))&next(balancer_2))));
(!(((balancer_0&balancer_1)&!(balancer_2))));
G(!(((next(balancer_0)&next(balancer_1))&!(next(balancer_2)))));
(!(((balancer_0&balancer_1)&balancer_2)));
G(!(((next(balancer_0)&next(balancer_1))&next(balancer_2))));
((!(isReady)->((!(balancer_0)&!(balancer_1))&!(balancer_2))));
G((!(next(isReady))->((!(next(balancer_0))&!(next(balancer_1)))&!(next(balancer_2)))));
(((distSense_0&isReady)->!(((!(balancer_0)&!(balancer_1))&balancer_2))));
G(((next(distSense_0)&next(isReady))->!(((!(next(balancer_0))&!(next(balancer_1)))&next(balancer_2)))));
(((!(distSense_0)&isReady)->((!(balancer_0)&!(balancer_1))&balancer_2)));
G(((!(next(distSense_0))&next(isReady))->((!(next(balancer_0))&!(next(balancer_1)))&next(balancer_2))));
ASSUMPTIONS:  ['(!(isReady));', '(eNV_CONSTRAINT_0_respondsTo_responded);', 'G((next(eNV_CONSTRAINT_0_respondsTo_responded)<->(!(distSense_0)|(eNV_CONSTRAINT_0_respondsTo_responded&!(!((((!(balancer_0)&!(balancer_1))&balancer_2)|((!(balancer_0)&!(balancer_1))&!(balancer_2)))))))));', 'G((!isReady)->next(!(!isReady)));']
GUARANTEES ===============
(((!(balancer_0)&!(balancer_1))&!(balancer_2)));
G((((!(balancer_0)&!(balancer_1))&balancer_2)->!((((next(balancer_0)&!(next(balancer_1)))&!(next(balancer_2)))|((!(next(balancer_0))&next(balancer_1))&next(balancer_2))))));
G((((((distSense_0&!(balancer_0))&!(balancer_1))&!(balancer_2))&isReady)->!(((!(next(balancer_0))&!(next(balancer_1)))&!(next(balancer_2))))));
(!(((balancer_0&!(balancer_1))&balancer_2)));
G(!(((next(balancer_0)&!(next(balancer_1)))&next(balancer_2))));
(!(((balancer_0&balancer_1)&!(balancer_2))));
G(!(((next(balancer_0)&next(balancer_1))&!(next(balancer_2)))));
(!(((balancer_0&balancer_1)&balancer_2)));
G(!(((next(balancer_0)&next(balancer_1))&next(balancer_2))));
((!(isReady)->((!(balancer_0)&!(balancer_1))&!(balancer_2))));
G((!(next(isReady))->((!(next(balancer_0))&!(next(balancer_1)))&!(next(balancer_2)))));
(((distSense_0&isReady)->!(((!(balancer_0)&!(balancer_1))&balancer_2))));
G(((next(distSense_0)&next(isReady))->!(((!(next(balancer_0))&!(next(balancer_1)))&next(balancer_2)))));
(((!(distSense_0)&isReady)->((!(balancer_0)&!(balancer_1))&balancer_2)));
G(((!(next(distSense_0))&next(isReady))->((!(next(balancer_0))&!(next(balancer_1)))&next(balancer_2))));

PEC:  ['(next(eNV_CONSTRAINT_0_respondsTo_responded)<->(!(distSense_0)|(eNV_CONSTRAINT_0_respondsTo_responded&!(!((((!(balancer_0)&!(balancer_1))&balancer_2)|((!(balancer_0)&!(balancer_1))&!(balancer_2))))))))', '(!isReady)->next(!(!isReady))']

UE:  []

PECS:  ['(((!(balancer_0)&!(balancer_1))&balancer_2)->!((((next(balancer_0)&!(next(balancer_1)))&!(next(balancer_2)))|((!(next(balancer_0))&next(balancer_1))&next(balancer_2)))))', '(((((distSense_0&!(balancer_0))&!(balancer_1))&!(balancer_2))&isReady)->!(((!(next(balancer_0))&!(next(balancer_1)))&!(next(balancer_2)))))', '!(((next(balancer_0)&!(next(balancer_1)))&next(balancer_2)))', '!(((next(balancer_0)&next(balancer_1))&!(next(balancer_2))))', '!(((next(balancer_0)&next(balancer_1))&next(balancer_2)))', '(!(next(isReady))->((!(next(balancer_0))&!(next(balancer_1)))&!(next(balancer_2))))', '((next(distSense_0)&next(isReady))->!(((!(next(balancer_0))&!(next(balancer_1)))&next(balancer_2))))', '((!(next(distSense_0))&next(isReady))->((!(next(balancer_0))&!(next(balancer_1)))&next(balancer_2)))']

UES:  []

====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
UNE:  ['eNV_CONSTRAINT_0_respondsTo_responded<->!distSense_0', '!isReady->!!isReady']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
UNES:  ['balancer_2->!balancer_0&!balancer_1&!balancer_2|!balancer_0&balancer_1&balancer_2', 'isReady->!!balancer_0&!balancer_1&!balancer_2', '!balancer_0&!balancer_1&balancer_2', '!balancer_0&balancer_1&!balancer_2', '!balancer_0&balancer_1&balancer_2', '!isReady->!balancer_0&!balancer_1&!balancer_2', 'distSense_0&isReady->!!balancer_0&!balancer_1&balancer_2', '!distSense_0&isReady->!balancer_0&!balancer_1&balancer_2']
EXPRESSION BEFORE:  ['eNV_CONSTRAINT_0_respondsTo_responded<->!distSense_0', '!isReady->!!isReady']
EXPRESSIONS:  [' not distSense_0 , eNV_CONSTRAINT_0_respondsTo_responded ; distSense_0 ,  not eNV_CONSTRAINT_0_respondsTo_responded', 'isReady']
b'clingo version 5.4.0\nReading from ./Translators/output-files/temp_asp.lp\nSolving...\nAnswer: 1\nisReady eNV_CONSTRAINT_0_respondsTo_responded\nSATISFIABLE\n\nModels       : 1+\nCalls        : 1\nTime         : 0.002s (Solving: 0.00s 1st Model: 0.00s Unsat: 0.00s)\nCPU Time     : 0.001s\n'

ASSIGNMENTS:  [['isReady', 'eNV_CONSTRAINT_0_respondsTo_responded', '!balancer_0', '!balancer_1', '!balancer_2', '!distSense_0']]

LTL TOKENS:  ['(', '(', 'X', '(', 'eNV_CONSTRAINT_0_respondsTo_responded', ')', '<->', '(', '!', '(', 'distSense_0', ')', '|', '(', 'eNV_CONSTRAINT_0_respondsTo_responded', '&', '!', '(', '!', '(', '(', '(', '(', '!', '(', 'balancer_0', ')', '&', '!', '(', 'balancer_1', ')', ')', '&', 'balancer_2', ')', '|', '(', '(', '!', '(', 'balancer_0', ')', '&', '!', '(', 'balancer_1', ')', ')', '&', '!', '(', 'balancer_2', ')', ')', ')', ')', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '!', 'isReady', ')', '->', 'X', '(', '!', '(', '!', 'isReady', ')', ')', ')']
LTL TOKENS:  ['(', '(', '!', '(', 'X', '(', 'isReady', ')', ')', '->', '(', '(', '!', '(', 'X', '(', 'balancer_0', ')', ')', '&', '!', '(', 'X', '(', 'balancer_1', ')', ')', ')', '&', '!', '(', 'X', '(', 'balancer_2', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '(', 'X', '(', 'distSense_0', ')', '&', 'X', '(', 'isReady', ')', ')', '->', '!', '(', '(', '(', '!', '(', 'X', '(', 'balancer_0', ')', ')', '&', '!', '(', 'X', '(', 'balancer_1', ')', ')', ')', '&', 'X', '(', 'balancer_2', ')', ')', ')', ')', ')']
=== UNREALIZABLE CORE ===
G(F(((!(balancer_0))&!(balancer_1))&balancer_2))
G((!(X(isReady))->((!(X(balancer_0))&!(X(balancer_1)))&!(X(balancer_2)))))
G(((X(distSense_0)&X(isReady))->!(((!(X(balancer_0))&!(X(balancer_1)))&X(balancer_2)))))

=== ASSUMPTIONS BOOLEAN ===
((!(isReady__S0))) & ((eNV_CONSTRAINT_0_respondsTo_responded__S0)) & ((((eNV_CONSTRAINT_0_respondsTo_responded__S1)<->(!(distSense_0__S0)|(eNV_CONSTRAINT_0_respondsTo_responded__S0&!(!((((!(balancer_0__S0)&!(balancer_1__S0))&balancer_2__S0)|((!(balancer_0__S0)&!(balancer_1__S0))&!(balancer_2__S0)))))))))) & ((((eNV_CONSTRAINT_0_respondsTo_responded__S11)<->(!(distSense_0__S1)|(eNV_CONSTRAINT_0_respondsTo_responded__S1&!(!((((!(balancer_0__S1)&!(balancer_1__S1))&balancer_2__S1)|((!(balancer_0__S1)&!(balancer_1__S1))&!(balancer_2__S1)))))))))) & ((((eNV_CONSTRAINT_0_respondsTo_responded__Sf2)<->(!(distSense_0__S11)|(eNV_CONSTRAINT_0_respondsTo_responded__S11&!(!((((!(balancer_0__S11)&!(balancer_1__S11))&balancer_2__S11)|((!(balancer_0__S11)&!(balancer_1__S11))&!(balancer_2__S11)))))))))) & ((((eNV_CONSTRAINT_0_respondsTo_responded__Sf)<->(!(distSense_0__Sf)|(eNV_CONSTRAINT_0_respondsTo_responded__Sf&!(!((((!(balancer_0__Sf)&!(balancer_1__Sf))&balancer_2__Sf)|((!(balancer_0__Sf)&!(balancer_1__Sf))&!(balancer_2__Sf)))))))))) & (((!isReady__S0)->(!(!isReady__S1)))) & (((!isReady__S1)->(!(!isReady__S11)))) & (((!isReady__S11)->(!(!isReady__Sf2)))) & (((!isReady__Sf2)->(!(!isReady__Sf))))

=== VALUATIONS BOOLEAN ===
!distSense_0__S0 & !isReady__S0 & eNV_CONSTRAINT_0_respondsTo_responded__S0 & !distSense_0__S0 & !isReady__S0 & eNV_CONSTRAINT_0_respondsTo_responded__S0 & !balancer_0__S1 & isReady__S1 & !balancer_1__S1 & !balancer_2__S1 & distSense_0__S1 & eNV_CONSTRAINT_0_respondsTo_responded__S1 & !distSense_0__S11 & !isReady__S11 & eNV_CONSTRAINT_0_respondsTo_responded__S11 & !distSense_0__Sf2 & !balancer_0__Sf2 & isReady__Sf2 & !balancer_1__Sf2 & !balancer_2__Sf2 & eNV_CONSTRAINT_0_respondsTo_responded__Sf2

=== GUARANTEES BOOLEAN ===
(((!((isReady__S1))->((!((balancer_0__S1))&!((balancer_1__S1)))&!((balancer_2__S1)))))) & (((!((isReady__S11))->((!((balancer_0__S11))&!((balancer_1__S11)))&!((balancer_2__S11)))))) & (((!((isReady__Sf2))->((!((balancer_0__Sf2))&!((balancer_1__Sf2)))&!((balancer_2__Sf2)))))) & (((!((isReady__Sf))->((!((balancer_0__Sf))&!((balancer_1__Sf)))&!((balancer_2__Sf)))))) & (((((distSense_0__S1)&(isReady__S1))->!(((!((balancer_0__S1))&!((balancer_1__S1)))&(balancer_2__S1)))))) & (((((distSense_0__S11)&(isReady__S11))->!(((!((balancer_0__S11))&!((balancer_1__S11)))&(balancer_2__S11)))))) & (((((distSense_0__Sf2)&(isReady__Sf2))->!(((!((balancer_0__Sf2))&!((balancer_1__Sf2)))&(balancer_2__Sf2)))))) & (((((distSense_0__Sf)&(isReady__Sf))->!(((!((balancer_0__Sf))&!((balancer_1__Sf)))&(balancer_2__Sf))))))

++++ ELAPSED TIME 7.324935712007573
++++ QUEUE LENGTH 2
++++ Solutions 0
++++ Duplicates 0
++++ Node number 4
++++ Refinement ['G(F(!(!isReady) & !(balancer_1)))']
++++ Length 1
++ REALIZABILITY CHECK
++ COUNTERSTRATEGY COMPUTATION - REFINEMENT GENERATION
b"Using BDD Package: CUDDFactory, Version: CUDD 3.0
Using BDD Package: CUDDFactory, Version: CUDD 3.0
0    [main] ERROR xt.validation.ResourceValidatorImpl  - The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
java.util.MissingResourceException: The string resource '_UI_DiagnosticRoot_diagnostic' could not be located
at org.eclipse.emf.common.util.DelegatingResourceLocator.delegatedGetString(DelegatingResourceLocator.java:586)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:450)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:605)
at org.eclipse.emf.common.util.DelegatingResourceLocator.getString(DelegatingResourceLocator.java:597)
at org.eclipse.emf.ecore.util.Diagnostician.createDefaultDiagnostic(Diagnostician.java:110)
at org.eclipse.emf.ecore.util.Diagnostician.validate(Diagnostician.java:139)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:147)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:125)
at org.eclipse.xtext.validation.ResourceValidatorImpl.validate(ResourceValidatorImpl.java:91)
at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getSpectraModel(SpectraInputProviderNoIDE.java:166)
at tau.smlab.syntech.spectragameinput.SpectraInputProviderNoIDE.getGameInput(SpectraInputProviderNoIDE.java:109)
at tau.smlab.syntech.Spectra.cli.SpectraCliTool.main(SpectraCliTool.java:162)
GR1GameImplC.checkRealizability: start
GR1GameImplC.checkRealizability: end
Nodes num: 76
Nodes table size: 1022
Result: Specification is unrealizable
extract strategy - Start

extract strategy - End
Initial State 0 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 1, 2, 3, 4
State 1 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 13
State 2 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:true, balancer_2:false>
With successors : 5
State 3 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:true, balancer_2:true>
With successors : 5
State 4 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:true, balancer_1:false, balancer_2:false>
With successors : 5
State 5 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:false, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 6
State 6 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 7
State 7 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 8, 9, 10, 11
State 8 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 13
State 9 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:true, balancer_2:false>
With successors : 12
State 10 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:false, balancer_1:true, balancer_2:true>
With successors : 12
State 11 <distSense_0:true, isReady:true, eNV_CONSTRAINT_0_respondsTo_responded:true, balancer_0:true, balancer_1:false, balancer_2:false>
With successors : 12
State 12 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:false, balancer_0:false, balancer_1:false, balancer_2:false>
With successors : 1, 2, 3, 4
State 13 <distSense_0:false, isReady:false, eNV_CONSTRAINT_0_respondsTo_responded:true>
With no successors.
"
INI:  <counterstrategy.State object at 0x7f1998762b80>
TRANSIENT:  [<counterstrategy.State object at 0x7f1998762be0>, <counterstrategy.State object at 0x7f1998762c40>]
=== COUNTERRUN ===
S0 -> S1 -> S13

LTL TOKENS:  ['(', '(', 'X', '(', 'eNV_CONSTRAINT_0_respondsTo_responded', ')', '<->', '(', '!', '(', 'distSense_0', ')', '|', '(', 'eNV_CONSTRAINT_0_respondsTo_responded', '&', '!', '(', '!', '(', '(', '(', '(', '!', '(', 'balancer_0', ')', '&', '!', '(', 'balancer_1', ')', ')', '&', 'balancer_2', ')', '|', '(', '(', '!', '(', 'balancer_0', ')', '&', '!', '(', 'balancer_1', ')', ')', '&', '!', '(', 'balancer_2', ')', ')', ')', ')', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '!', '(', 'X', '(', 'isReady', ')', ')', '->', '(', '(', '!', '(', 'X', '(', 'balancer_0', ')', ')', '&', '!', '(', 'X', '(', 'balancer_1', ')', ')', ')', '&', '!', '(', 'X', '(', 'balancer_2', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '(', 'X', '(', 'distSense_0', ')', '&', 'X', '(', 'isReady', ')', ')', '->', '!', '(', '(', '(', '!', '(', 'X', '(', 'balancer_0', ')', ')', '&', '!', '(', 'X', '(', 'balancer_1', ')', ')', ')', '&', 'X', '(', 'balancer_2', ')', ')', ')', ')', ')']
=== UNREALIZABLE CORE ===
G(F(((!(balancer_0))&!(balancer_1))&balancer_2))
G((!(X(isReady))->((!(X(balancer_0))&!(X(balancer_1)))&!(X(balancer_2)))))
G(((X(distSense_0)&X(isReady))->!(((!(X(balancer_0))&!(X(balancer_1)))&X(balancer_2)))))

=== ASSUMPTIONS BOOLEAN ===
((!(isReady__S0))) & ((eNV_CONSTRAINT_0_respondsTo_responded__S0)) & ((((eNV_CONSTRAINT_0_respondsTo_responded__S1)<->(!(distSense_0__S0)|(eNV_CONSTRAINT_0_respondsTo_responded__S0&!(!((((!(balancer_0__S0)&!(balancer_1__S0))&balancer_2__S0)|((!(balancer_0__S0)&!(balancer_1__S0))&!(balancer_2__S0)))))))))) & ((((eNV_CONSTRAINT_0_respondsTo_responded__S13)<->(!(distSense_0__S1)|(eNV_CONSTRAINT_0_respondsTo_responded__S1&!(!((((!(balancer_0__S1)&!(balancer_1__S1))&balancer_2__S1)|((!(balancer_0__S1)&!(balancer_1__S1))&!(balancer_2__S1)))))))))) & ((((eNV_CONSTRAINT_0_respondsTo_responded__Sf)<->(!(distSense_0__Sf)|(eNV_CONSTRAINT_0_respondsTo_responded__Sf&!(!((((!(balancer_0__Sf)&!(balancer_1__Sf))&balancer_2__Sf)|((!(balancer_0__Sf)&!(balancer_1__Sf))&!(balancer_2__Sf))))))))))

=== VALUATIONS BOOLEAN ===
!distSense_0__S0 & !isReady__S0 & eNV_CONSTRAINT_0_respondsTo_responded__S0 & !balancer_0__S1 & isReady__S1 & !balancer_1__S1 & !balancer_2__S1 & distSense_0__S1 & eNV_CONSTRAINT_0_respondsTo_responded__S1 & !distSense_0__S13 & !isReady__S13 & eNV_CONSTRAINT_0_respondsTo_responded__S13

=== GUARANTEES BOOLEAN ===
(((!((isReady__S1))->((!((balancer_0__S1))&!((balancer_1__S1)))&!((balancer_2__S1)))))) & (((!((isReady__S13))->((!((balancer_0__S13))&!((balancer_1__S13)))&!((balancer_2__S13)))))) & (((!((isReady__Sf))->((!((balancer_0__Sf))&!((balancer_1__Sf)))&!((balancer_2__Sf)))))) & (((((distSense_0__S1)&(isReady__S1))->!(((!((balancer_0__S1))&!((balancer_1__S1)))&(balancer_2__S1)))))) & (((((distSense_0__S13)&(isReady__S13))->!(((!((balancer_0__S13))&!((balancer_1__S13)))&(balancer_2__S13)))))) & (((((distSense_0__Sf)&(isReady__Sf))->!(((!((balancer_0__Sf))&!((balancer_1__Sf)))&(balancer_2__Sf))))))

LAST STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
ASSUMPTIONS:  ['(!(isReady));', '(eNV_CONSTRAINT_0_respondsTo_responded);', 'G((next(eNV_CONSTRAINT_0_respondsTo_responded)<->(!(distSense_0)|(eNV_CONSTRAINT_0_respondsTo_responded&!(!((((!(balancer_0)&!(balancer_1))&balancer_2)|((!(balancer_0)&!(balancer_1))&!(balancer_2)))))))));']
GUARANTEES ===============
(((!(balancer_0)&!(balancer_1))&!(balancer_2)));
G((((!(balancer_0)&!(balancer_1))&balancer_2)->!((((next(balancer_0)&!(next(balancer_1)))&!(next(balancer_2)))|((!(next(balancer_0))&next(balancer_1))&next(balancer_2))))));
G((((((distSense_0&!(balancer_0))&!(balancer_1))&!(balancer_2))&isReady)->!(((!(next(balancer_0))&!(next(balancer_1)))&!(next(balancer_2))))));
(!(((balancer_0&!(balancer_1))&balancer_2)));
G(!(((next(balancer_0)&!(next(balancer_1)))&next(balancer_2))));
(!(((balancer_0&balancer_1)&!(balancer_2))));
G(!(((next(balancer_0)&next(balancer_1))&!(next(balancer_2)))));
(!(((balancer_0&balancer_1)&balancer_2)));
G(!(((next(balancer_0)&next(balancer_1))&next(balancer_2))));
((!(isReady)->((!(balancer_0)&!(balancer_1))&!(balancer_2))));
G((!(next(isReady))->((!(next(balancer_0))&!(next(balancer_1)))&!(next(balancer_2)))));
(((distSense_0&isReady)->!(((!(balancer_0)&!(balancer_1))&balancer_2))));
G(((next(distSense_0)&next(isReady))->!(((!(next(balancer_0))&!(next(balancer_1)))&next(balancer_2)))));
(((!(distSense_0)&isReady)->((!(balancer_0)&!(balancer_1))&balancer_2)));
G(((!(next(distSense_0))&next(isReady))->((!(next(balancer_0))&!(next(balancer_1)))&next(balancer_2))));
ASSUMPTIONS:  ['(!(isReady));', '(eNV_CONSTRAINT_0_respondsTo_responded);', 'G((next(eNV_CONSTRAINT_0_respondsTo_responded)<->(!(distSense_0)|(eNV_CONSTRAINT_0_respondsTo_responded&!(!((((!(balancer_0)&!(balancer_1))&balancer_2)|((!(balancer_0)&!(balancer_1))&!(balancer_2)))))))));']
GUARANTEES ===============
(((!(balancer_0)&!(balancer_1))&!(balancer_2)));
G((((!(balancer_0)&!(balancer_1))&balancer_2)->!((((next(balancer_0)&!(next(balancer_1)))&!(next(balancer_2)))|((!(next(balancer_0))&next(balancer_1))&next(balancer_2))))));
G((((((distSense_0&!(balancer_0))&!(balancer_1))&!(balancer_2))&isReady)->!(((!(next(balancer_0))&!(next(balancer_1)))&!(next(balancer_2))))));
(!(((balancer_0&!(balancer_1))&balancer_2)));
G(!(((next(balancer_0)&!(next(balancer_1)))&next(balancer_2))));
(!(((balancer_0&balancer_1)&!(balancer_2))));
G(!(((next(balancer_0)&next(balancer_1))&!(next(balancer_2)))));
(!(((balancer_0&balancer_1)&balancer_2)));
G(!(((next(balancer_0)&next(balancer_1))&next(balancer_2))));
((!(isReady)->((!(balancer_0)&!(balancer_1))&!(balancer_2))));
G((!(next(isReady))->((!(next(balancer_0))&!(next(balancer_1)))&!(next(balancer_2)))));
(((distSense_0&isReady)->!(((!(balancer_0)&!(balancer_1))&balancer_2))));
G(((next(distSense_0)&next(isReady))->!(((!(next(balancer_0))&!(next(balancer_1)))&next(balancer_2)))));
(((!(distSense_0)&isReady)->((!(balancer_0)&!(balancer_1))&balancer_2)));
G(((!(next(distSense_0))&next(isReady))->((!(next(balancer_0))&!(next(balancer_1)))&next(balancer_2))));

PEC:  ['(next(eNV_CONSTRAINT_0_respondsTo_responded)<->(!(distSense_0)|(eNV_CONSTRAINT_0_respondsTo_responded&!(!((((!(balancer_0)&!(balancer_1))&balancer_2)|((!(balancer_0)&!(balancer_1))&!(balancer_2))))))))']

UE:  []

PECS:  ['(((!(balancer_0)&!(balancer_1))&balancer_2)->!((((next(balancer_0)&!(next(balancer_1)))&!(next(balancer_2)))|((!(next(balancer_0))&next(balancer_1))&next(balancer_2)))))', '(((((distSense_0&!(balancer_0))&!(balancer_1))&!(balancer_2))&isReady)->!(((!(next(balancer_0))&!(next(balancer_1)))&!(next(balancer_2)))))', '!(((next(balancer_0)&!(next(balancer_1)))&next(balancer_2)))', '!(((next(balancer_0)&next(balancer_1))&!(next(balancer_2))))', '!(((next(balancer_0)&next(balancer_1))&next(balancer_2)))', '(!(next(isReady))->((!(next(balancer_0))&!(next(balancer_1)))&!(next(balancer_2))))', '((next(distSense_0)&next(isReady))->!(((!(next(balancer_0))&!(next(balancer_1)))&next(balancer_2))))', '((!(next(distSense_0))&next(isReady))->((!(next(balancer_0))&!(next(balancer_1)))&next(balancer_2)))']

UES:  []

====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
UNE:  ['eNV_CONSTRAINT_0_respondsTo_responded<->!distSense_0']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
====================================
EXPRESSION:  (speedButton_0 & next(yBoolExpr_0)) | (!speedButton_0 & next(!yBoolExpr_0))
STATE:  {'!distSense_0', '!isReady', 'eNV_CONSTRAINT_0_respondsTo_responded'}
DIS:  ['(speedButton_0 & next(yBoolExpr_0)) ', ' (!speedButton_0 & next(!yBoolExpr_0))']
CON:  ['(speedButton_0 ', ' next(yBoolExpr_0)) ']
CON:  [' (!speedButton_0 ', ' next(!yBoolExpr_0))']
UNES:  ['balancer_2->!balancer_0&!balancer_1&!balancer_2|!balancer_0&balancer_1&balancer_2', 'isReady->!!balancer_0&!balancer_1&!balancer_2', '!balancer_0&!balancer_1&balancer_2', '!balancer_0&balancer_1&!balancer_2', '!balancer_0&balancer_1&balancer_2', '!isReady->!balancer_0&!balancer_1&!balancer_2', 'distSense_0&isReady->!!balancer_0&!balancer_1&balancer_2', '!distSense_0&isReady->!balancer_0&!balancer_1&balancer_2']
EXPRESSION BEFORE:  ['eNV_CONSTRAINT_0_respondsTo_responded<->!distSense_0']
EXPRESSIONS:  [' not distSense_0 , eNV_CONSTRAINT_0_respondsTo_responded ; distSense_0 ,  not eNV_CONSTRAINT_0_respondsTo_responded']
b'clingo version 5.4.0\nReading from ./Translators/output-files/temp_asp.lp\nSolving...\nAnswer: 1\neNV_CONSTRAINT_0_respondsTo_responded\nSATISFIABLE\n\nModels       : 1+\nCalls        : 1\nTime         : 0.001s (Solving: 0.00s 1st Model: 0.00s Unsat: 0.00s)\nCPU Time     : 0.001s\n'

ASSIGNMENTS:  [['eNV_CONSTRAINT_0_respondsTo_responded', '!balancer_0', '!balancer_1', '!balancer_2', '!distSense_0', '!isReady']]

LTL TOKENS:  ['(', '(', 'X', '(', 'eNV_CONSTRAINT_0_respondsTo_responded', ')', '<->', '(', '!', '(', 'distSense_0', ')', '|', '(', 'eNV_CONSTRAINT_0_respondsTo_responded', '&', '!', '(', '!', '(', '(', '(', '(', '!', '(', 'balancer_0', ')', '&', '!', '(', 'balancer_1', ')', ')', '&', 'balancer_2', ')', '|', '(', '(', '!', '(', 'balancer_0', ')', '&', '!', '(', 'balancer_1', ')', ')', '&', '!', '(', 'balancer_2', ')', ')', ')', ')', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '!', '(', 'X', '(', 'isReady', ')', ')', '->', '(', '(', '!', '(', 'X', '(', 'balancer_0', ')', ')', '&', '!', '(', 'X', '(', 'balancer_1', ')', ')', ')', '&', '!', '(', 'X', '(', 'balancer_2', ')', ')', ')', ')', ')']
LTL TOKENS:  ['(', '(', '(', 'X', '(', 'distSense_0', ')', '&', 'X', '(', 'isReady', ')', ')', '->', '!', '(', '(', '(', '!', '(', 'X', '(', 'balancer_0', ')', ')', '&', '!', '(', 'X', '(', 'balancer_1', ')', ')', ')', '&', 'X', '(', 'balancer_2', ')', ')', ')', ')', ')']
=== UNREALIZABLE CORE ===
G(F(((!(balancer_0))&!(balancer_1))&balancer_2))
G((!(X(isReady))->((!(X(balancer_0))&!(X(balancer_1)))&!(X(balancer_2)))))
G(((X(distSense_0)&X(isReady))->!(((!(X(balancer_0))&!(X(balancer_1)))&X(balancer_2)))))

=== ASSUMPTIONS BOOLEAN ===
((!(isReady__S0))) & ((eNV_CONSTRAINT_0_respondsTo_responded__S0)) & ((((eNV_CONSTRAINT_0_respondsTo_responded__S1)<->(!(distSense_0__S0)|(eNV_CONSTRAINT_0_respondsTo_responded__S0&!(!((((!(balancer_0__S0)&!(balancer_1__S0))&balancer_2__S0)|((!(balancer_0__S0)&!(balancer_1__S0))&!(balancer_2__S0)))))))))) & ((((eNV_CONSTRAINT_0_respondsTo_responded__S13)<->(!(distSense_0__S1)|(eNV_CONSTRAINT_0_respondsTo_responded__S1&!(!((((!(balancer_0__S1)&!(balancer_1__S1))&balancer_2__S1)|((!(balancer_0__S1)&!(balancer_1__S1))&!(balancer_2__S1)))))))))) & ((((eNV_CONSTRAINT_0_respondsTo_responded__Sf4)<->(!(distSense_0__S13)|(eNV_CONSTRAINT_0_respondsTo_responded__S13&!(!((((!(balancer_0__S13)&!(balancer_1__S13))&balancer_2__S13)|((!(balancer_0__S13)&!(balancer_1__S13))&!(balancer_2__S13)))))))))) & ((((eNV_CONSTRAINT_0_respondsTo_responded__Sf)<->(!(distSense_0__Sf)|(eNV_CONSTRAINT_0_respondsTo_responded__Sf&!(!((((!(balancer_0__Sf)&!(balancer_1__Sf))&balancer_2__Sf)|((!(balancer_0__Sf)&!(balancer_1__Sf))&!(balancer_2__Sf))))))))))

=== VALUATIONS BOOLEAN ===
!distSense_0__S0 & !isReady__S0 & eNV_CONSTRAINT_0_respondsTo_responded__S0 & !distSense_0__S0 & !isReady__S0 & eNV_CONSTRAINT_0_respondsTo_responded__S0 & !balancer_0__S1 & isReady__S1 & !balancer_1__S1 & !balancer_2__S1 & distSense_0__S1 & eNV_CONSTRAINT_0_respondsTo_responded__S1 & !distSense_0__S13 & !isReady__S13 & eNV_CONSTRAINT_0_respondsTo_responded__S13 & !distSense_0__Sf4 & !balancer_0__Sf4 & !balancer_1__Sf4 & !balancer_2__Sf4 & eNV_CONSTRAINT_0_respondsTo_responded__Sf4 & !isReady__Sf4

=== GUARANTEES BOOLEAN ===
(((!((isReady__S1))->((!((balancer_0__S1))&!((balancer_1__S1)))&!((balancer_2__S1)))))) & (((!((isReady__S13))->((!((balancer_0__S13))&!((balancer_1__S13)))&!((balancer_2__S13)))))) & (((!((isReady__Sf4))->((!((balancer_0__Sf4))&!((balancer_1__Sf4)))&!((balancer_2__Sf4)))))) & (((!((isReady__Sf))->((!((balancer_0__Sf))&!((balancer_1__Sf)))&!((balancer_2__Sf)))))) & (((((distSense_0__S1)&(isReady__S1))->!(((!((balancer_0__S1))&!((balancer_1__S1)))&(balancer_2__S1)))))) & (((((distSense_0__S13)&(isReady__S13))->!(((!((balancer_0__S13))&!((balancer_1__S13)))&(balancer_2__S13)))))) & (((((distSense_0__Sf4)&(isReady__Sf4))->!(((!((balancer_0__Sf4))&!((balancer_1__Sf4)))&(balancer_2__Sf4)))))) & (((((distSense_0__Sf)&(isReady__Sf))->!(((!((balancer_0__Sf))&!((balancer_1__Sf)))&(balancer_2__Sf))))))

++++ ELAPSED TIME 10.067110731004504
++++ QUEUE LENGTH 1
++++ Solutions 0
++++ Duplicates 0
++++ Node number 5
++++ Refinement ['!(!isReady)']
++++ Length 1
++ REALIZABILITY CHECK
++ VACUOUS SOLUTION
++++ ELAPSED TIME 11.985474438988604
++++ QUEUE LENGTH 0
++++ Solutions 0
++++ Duplicates 0
++++ Node number 6
++++ Refinement ['G((balancer_1) -> X(!(!isReady)))']
++++ Length 1
++ REALIZABILITY CHECK
++ REALIZABLE REFINEMENT: SAT CHECK
